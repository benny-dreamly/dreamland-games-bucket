# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Explain

# Used to describe your yaml. Useful if you have multiple files.
description: Default Jak and Daxter The Precursor Legacy Template

game: Jak and Daxter The Precursor Legacy
requires:
  version: 0.5.0 # Version of Archipelago required for this yaml to work as expected.

Jak and Daxter The Precursor Legacy:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # - **Locations:** ensure everything can be reached and acquired.
    # - **Items:** ensure all logically relevant items can be acquired.
    # - **Minimal:** ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  enable_move_randomizer:
    # Enable to include movement options as items in the randomizer. Jak is only able to run, swim, and single jump
    # until you find his other moves.
    # 
    # This adds 11 items to the pool.
    'false': 50
    'true': 0

  enable_orbsanity:
    # Enable to include bundles of Precursor Orbs as an ordered list of progressive checks. Every time you collect the
    # chosen number of orbs, you will trigger the next release in the list.
    # 
    # "Per Level" means these lists are generated and populated for each level in the game. "Global" means there
    # is only one list for the entire game.
    # 
    # This adds a number of Items and Locations to the pool inversely proportional to the size of the bundle.
    # For example, if your bundle size is 20 orbs, you will add 100 items to the pool. If your bundle size is 250 orbs,
    # you will add 8 items to the pool.
    'off': 50
    per_level: 0
    global: 0

  global_orbsanity_bundle_size:
    # Set the orb bundle size for Global Orbsanity. This only applies if "Enable Orbsanity" is set to "Global."
    # There are 2000 orbs in the game, so your bundle size must be a factor of 2000.
    1_orb: 50
    2_orbs: 0
    4_orbs: 0
    5_orbs: 0
    8_orbs: 0
    10_orbs: 0
    16_orbs: 0
    20_orbs: 0
    25_orbs: 0
    40_orbs: 0
    50_orbs: 0
    80_orbs: 0
    100_orbs: 0
    125_orbs: 0
    200_orbs: 0
    250_orbs: 0
    400_orbs: 0
    500_orbs: 0
    1000_orbs: 0
    2000_orbs: 0

  level_orbsanity_bundle_size:
    # Set the orb bundle size for Per Level Orbsanity. This only applies if "Enable Orbsanity" is set to "Per Level."
    # There are 50, 150, or 200 orbs per level, so your bundle size must be a factor of 50.
    1_orb: 50
    2_orbs: 0
    5_orbs: 0
    10_orbs: 0
    25_orbs: 0
    50_orbs: 0

  fire_canyon_cell_count:
    # Set the number of orbs you need to cross Fire Canyon.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  mountain_pass_cell_count:
    # Set the number of orbs you need to reach Klaww and cross Mountain Pass.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    45: 50
    random: 0
    random-low: 0
    random-high: 0

  lava_tube_cell_count:
    # Set the number of orbs you need to cross Lava Tube.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    72: 50
    random: 0
    random-low: 0
    random-high: 0

  jak_completion_condition:
    # Set the goal for completing the game.
    cross_fire_canyon: 0
    cross_mountain_pass: 0
    cross_lava_tube: 0
    defeat_dark_eco_plant: 0
    defeat_klaww: 0
    defeat_gol_and_maia: 50
    open_100_cell_door: 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {}
