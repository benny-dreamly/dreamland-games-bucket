
name: Stay
game:
  #A Link to the Past: 6
  #Minecraft: 5
  #Ocarina of Time: 4
  #Overcooked! 2: 4
  #Risk of Rain 2: 2
  #Super Mario 64: 4
  #Super Mario World: 5
  #Slay the Spire: 4
  #SMZ3: 2
  Super Metroid: 5
  #Dark Souls III: 1
  #Timespinner: 2
  #Pokemon Red and Blue: 5
  #The Witness: 6
  #Hollow Knight: 3
  #The Messenger: 5
  #Wargroove: 5
  #Links Awakening DX: 4
  #The Legend of Zelda: 3
  #Stardew Valley: 2
  #Rogue Legacy: 5
  #Muse Dash: 5
  #Terraria: 3
  #Undertale: 4
  #DLCQuest: 3
  #DOOM 1993: 4
  #DOOM II: 5
  #Heretic: 5
  #Pokemon Emerald: 5
  #Kirby's Dream Land 3: 5
  #Factorio: 5
  #TUNIC: 5

A Link to the Past:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  goal:
    # Ganon: Climb GT, defeat Agahnim 2, and then kill Ganon
    # Crystals: Only killing Ganon is required. However, items may still be placed in GT
    # Bosses: Defeat the boss of all dungeons, including Agahnim's tower and GT (Aga 2)
    # Pedestal: Pull the Triforce from the Master Sword pedestal
    # Ganon Pedestal: Pull the Master Sword pedestal, then kill Ganon
    # Triforce Hunt: Collect Triforce pieces spread throughout the worlds, then turn them in to Murahadala in front of Hyrule Castle
    # Local Triforce Hunt: Collect Triforce pieces spread throughout your world, then turn them in to Murahadala in front of Hyrule Castle
    # Ganon Triforce Hunt: Collect Triforce pieces spread throughout the worlds, then kill Ganon
    # Local Ganon Triforce Hunt: Collect Triforce pieces spread throughout your world, then kill Ganon
    ganon: 0
    crystals: 50
    bosses: 0
    pedestal: 0
    ganon_pedestal: 0
    triforce_hunt: 0
    local_triforce_hunt: 0
    ganon_triforce_hunt: 0
    local_ganon_triforce_hunt: 0

  mode:
    # Standard: Begin the game by rescuing Zelda from her cell and escorting her to the Sanctuary
    # Open: Begin the game from your choice of Link's House or the Sanctuary
    # Inverted: Begin in the Dark World. The Moon Pearl is required to avoid bunny-state in Light World, and the Light World game map is altered
    standard: 0
    open: 50
    inverted: 0

  glitches_required:
    # Determine the logic required to complete the seed
    # None: No glitches required
    # Minor Glitches: Puts fake flipper, waterwalk, super bunny shenanigans, and etc into logic
    # Overworld Glitches: Assumes the player has knowledge of both overworld major glitches (boots clips, mirror clips) and minor glitches
    # Hybrid Major Glitches: In addition to overworld glitches, also requires underworld clips between dungeons.
    # No Logic: Your own items are placed with no regard to any logic; such as your Fire Rod can be on your Trinexx.
    no_glitches: 50
    minor_glitches: 0
    overworld_glitches: 0
    hybrid_major_glitches: 0
    no_logic: 0

  dark_room_logic:
    # Logic for unlit dark rooms. Lamp: require the Lamp for these rooms to be considered accessible.
    # Torches: in addition to lamp, allow the fire rod and presence of easily accessible torches for access.
    # None: all dark rooms are always considered doable, meaning this may force completion of rooms in complete darkness.
    lamp: 50
    torches: 0
    none: 0

  open_pyramid:
    # Determines whether the hole at the top of pyramid is open.
    # Goal will open the pyramid if the goal requires you to kill Ganon, without needing to kill Agahnim 2.
    # Auto is the same as goal except if Ganon's dropdown is in another location, the hole will be closed.
    closed: 0
    open: 0
    goal: 50
    auto: 0

  crystals_needed_for_gt:
    # Number of crystals needed to open Ganon's Tower
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    #7: 50
    random-range-5-7: 50
    random: 0
    random-low: 0
    random-high: 0

  crystals_needed_for_ganon:
    # Number of crystals needed to damage Ganon
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 50
    random-range-3-5: 50
    random: 0
    random-low: 0
    random-high: 0

  triforce_pieces_mode:
    # Determine how to calculate the extra available triforce pieces.
    # Extra: available = triforce_pieces_extra + triforce_pieces_required
    # Percentage: available = (triforce_pieces_percentage /100) * triforce_pieces_required
    # Available: available = triforce_pieces_available
    extra: 0
    percentage: 0
    available: 50

  triforce_pieces_percentage:
    # Set to how many triforce pieces according to a percentage of the required ones, are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 100
    # Maximum value is 1000
    150: 50
    random: 0
    random-low: 0
    random-high: 0

  triforce_pieces_required:
    # Set to how many out of X triforce pieces you need to win the game in a triforce hunt.
    # Default is 20. Max is 90, Min is 1.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  triforce_pieces_available:
    # Set to how many triforces pieces are available to collect in the world. Default is 30. Max is 90, Min is 1
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  triforce_pieces_extra:
    # Set to how many extra triforces pieces are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 89
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  entrance_shuffle:
    # Dungeons Simple: Shuffle just dungeons amongst each other, swapping dungeons entirely, so Hyrule Castle is always 1 dungeon.
    # Dungeons Full: Shuffle any dungeon entrance with any dungeon interior, so Hyrule Castle can be 4 different dungeons, but keep dungeons to a specific world.
    # Dungeons Crossed: like dungeons_full, but allow cross-world traversal through a dungeon. Warning: May force repeated dungeon traversal.
    # Simple: Entrances are grouped together before being randomized. Interiors with two entrances are grouped shuffled together with each other,
    # and Death Mountain entrances are shuffled only on Death Mountain. Dungeons are swapped entirely.
    # Restricted: Like Simple, but single entrance interiors, multi entrance interiors, and Death Mountain interior entrances are all shuffled with each other.
    # Full: Like Restricted, but all Dungeon entrances are shuffled with all non-Dungeon entrances.
    # Crossed: Like Full, but interiors with multiple entrances are no longer confined to the same world, which may allow crossing worlds.
    # Insanity: Like Crossed, but entrances and exits may be decoupled from each other, so that leaving through an exit may not return you to the entrance you entered from.
    vanilla: 50
    dungeons_simple: 0
    dungeons_full: 0
    dungeons_crossed: 0
    simple: 0
    restricted: 0
    full: 0
    crossed: 0
    insanity: 0

  entrance_shuffle_seed:
    # You can specify a number to use as an entrance shuffle seed, or a group name. Everyone with the same group name
    # will get the same entrance shuffle result as long as their Entrance Shuffle, Mode, Retro Caves, and Glitches
    # Required options are the same.
    random: 50

  big_key_shuffle:
    # Big Key Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 50
    different_world: 0
    start_with: 0

  small_key_shuffle:
    # Small Key Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 50
    different_world: 0
    start_with: 0
    universal: 0

  key_drop_shuffle:
    # Shuffle keys found in pots and dropped from killed enemies,
    # respects the small key and big key shuffle options.
    false: 0
    true: 50

  compass_shuffle:
    # Compass Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    start_with: 50

  map_shuffle:
    # Map Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    start_with: 50

  restrict_dungeon_item_on_boss:
    # Don't place dungeon-native items on the dungeon's boss.
    false: 50
    true: 0

  item_pool:
    # Easy: Doubled upgrades, progressives, and etc. Normal:  Item availability remains unchanged from vanilla game.
    # Hard: Reduced upgrade availability (max: 14 hearts, blue mail, tempered sword, fire shield, no silvers unless swordless).
    # Expert: Minimum upgrade availability (max: 8 hearts, green mail, master sword, fighter shield, no silvers unless swordless).
    easy: 0
    normal: 50
    hard: 0
    expert: 0

  item_functionality:
    # Easy: Allow Hammer to damage ganon, Allow Hammer tablet collection, Allow swordless medallion use everywhere.
    # Normal: Vanilla item functionality
    # Hard: Reduced helpfulness of items (potions less effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs do not stun, silvers disabled outside ganon)
    # Expert: Vastly reduces the helpfulness of items (potions barely effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs and hookshot do not stun, silvers disabled outside ganon)
    easy: 0
    normal: 50
    hard: 0
    expert: 0

  enemy_health:
    # Default: Vanilla enemy HP. Easy: Enemies have reduced health. Hard: Enemies have increased health.
    # Expert: Enemies have greatly increased health.
    easy: 0
    default: 50
    hard: 0
    expert: 0

  enemy_damage:
    # Default: Vanilla enemy damage. Shuffled: 0 # Enemies deal 0 to 4 hearts and armor helps.
    # Chaos: Enemies deal 0 to 8 hearts and armor just reshuffles the damage.
    default: 50
    shuffled: 0
    chaos: 0

  progressive:
    # How item types that have multiple tiers (armor, bows, gloves, shields, and swords) should be rewarded
    off: 0
    grouped_random: 0
    on: 50

  swordless:
    # No swords. Curtains in Skull Woods and Agahnim's
    # Tower are removed, Agahnim's Tower barrier can be
    # destroyed with hammer. Misery Mire and Turtle Rock
    # can be opened without a sword. Hammer damages Ganon.
    # Ether and Bombos Tablet can be activated with Hammer
    # (and Book).
    false: 50
    true: 0

  dungeon_counters:
    # On: Always display amount of items checked in a dungeon. Pickup: Show when compass is picked up.
    # Default: Show when compass is picked up if the compass itself is shuffled. Off: Never show item count in dungeons.
    on: 0
    pickup: 50
    default: 0
    off: 0

  retro_bow:
    # Zelda-1 like mode. You have to purchase a quiver to shoot arrows using rupees.
    false: 50
    true: 0

  retro_caves:
    # Zelda-1 like mode. There are randomly placed take-any caves that contain one Sword and
    # choices of Heart Container/Blue Potion.
    false: 50
    true: 0

  hints:
    # On/Full: Put item and entrance placement hints on telepathic tiles and some NPCs, Full removes joke hints.
    off: 0
    on: 50
    full: 0

  scams:
    # If on, these Merchants will no longer tell you what they're selling.
    off: 50
    king_zora: 0
    bottle_merchant: 0
    all: 0

  boss_shuffle:
    # Shuffles bosses around to different locations.
    # Basic will shuffle all bosses except Ganon and Agahnim anywhere they can be placed.
    # Full chooses 3 bosses at random to be placed twice instead of Lanmolas, Moldorm, and Helmasaur.
    # Chaos allows any boss to appear any number of times.
    # Singularity places a single boss in as many places as possible, and a second boss in any remaining locations.
    # Supports plando placement.
    none: 0
    basic: 0
    full: 0
    chaos: 50
    singularity: 0

  pot_shuffle:
    # Shuffle contents of pots within "supertiles" (item will still be nearby original placement).
    false: 50
    true: 0

  enemy_shuffle:
    # Randomize every enemy spawn.
    # If mode is Standard, Hyrule Castle is left out (may result in visually wrong enemy sprites in that area.)
    false: 50
    true: 0

  killable_thieves:
    # Makes Thieves killable.
    false: 0
    true: 50

  bush_shuffle:
    # Randomize chance that a bush contains an enemy as well as which enemy may spawn.
    false: 50
    true: 0

  shop_item_slots:
    # Number of slots in all shops available to have items from the multiworld
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_shop_inventories:
    # Generate new default inventories for overworld/underworld shops, and unique shops; or each shop independently
    default: 50
    randomize_by_shop_type: 0
    randomize_each: 0

  shuffle_shop_inventories:
    # Shuffle default inventories of the shops around
    false: 50
    true: 0

  include_witch_hut:
    # Consider witch's hut like any other shop and shuffle/randomize it too
    false: 50
    true: 0

  randomize_shop_prices:
    # Randomize the prices of the items in shop inventories
    false: 50
    true: 0

  randomize_cost_types:
    # Prices of the items in shop inventories may cost hearts, arrow, or bombs instead of rupees
    false: 50
    true: 0

  shop_price_modifier:
    # Percentage modifier for shuffled item prices in shops
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 400
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_capacity_upgrades:
    # Shuffle capacity upgrades into the item pool (and allow them to traverse the multiworld).
    # On Combined will shuffle only a single bomb upgrade and arrow upgrade each which bring you to the maximum capacity.
    off: 0
    on: 50
    on_combined: 0

  bombless_start:
    # Start with a max of 0 bombs available, requiring Bomb Upgrade items in order to use bombs
    false: 50
    true: 0

  shuffle_prizes:
    # Shuffle "general" prize packs, as in enemy, tree pull, dig etc.; "bonk" prizes; or both.
    off: 0
    general: 50
    bonk: 0
    both: 0

  tile_shuffle:
    # Randomize flying tiles floor patterns.
    false: 50
    true: 0

  misery_mire_medallion:
    # Required medallion to open Misery Mire front entrance.
    ether: 0
    bombos: 0
    quake: 0
    random: 50

  turtle_rock_medallion:
    # Required medallion to open Turtle Rock front entrance.
    ether: 0
    bombos: 0
    quake: 0
    random: 50

  glitch_boots:
    # If this is enabled, the player will start with Pegasus Boots when playing with overworld glitches or harder logic.
    false: 0
    true: 50

  beemizer_total_chance:
    # Percentage chance for each junk-fill item (rupees, bombs, arrows) to be
    # replaced with either a bee swarm trap or a single bottle-filling bee.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  beemizer_trap_chance:
    # Percentage chance for each replaced junk-fill item to be a bee swarm
    # trap; all other replaced items are single bottle-filling bees.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    60: 50
    random: 0
    random-low: 0
    random-high: 0

  timer:
    # None: No timer will be displayed. OHKO: Timer always at zero. Permanent OHKO.
    # Timed: Starts with clock at zero. Green clocks subtract 4 minutes (total 20). Blue clocks subtract 2 minutes (total 10). Red clocks add two minutes (total 10). Winner is the player with the lowest time at the end.
    # Timed OHKO: Starts the clock at ten minutes. Green clocks add five minutes (total 25). As long as the clock as at zero, Link will die in one hit.
    # Timed Countdown: Starts the clock with forty minutes. Same clocks as timed mode, but if the clock hits zero you lose. You can still keep playing, though.
    # Display: Displays a timer, but otherwise does not affect gameplay or the item pool.
    none: 50
    timed: 0
    timed_ohko: 0
    ohko: 0
    timed_countdown: 0
    display: 0

  countdown_start_time:
    # For Timed OHKO and Timed Countdown timer modes, the amount of time in minutes to start with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 480
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  red_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a red clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    -2: 50
    random: 0
    random-low: 0
    random-high: 0

  blue_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a blue clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  green_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a green clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  allow_collect:
    # Allows for !collect / co-op to auto-open chests containing items for other players.
    # Off by default, because it currently crashes on real hardware.
    false: 0
    true: 50

  ow_palettes:
    # The type of palette shuffle to use for the overworld
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  uw_palettes:
    # The type of palette shuffle to use for the underworld (caves, dungeons, etc.)
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  hud_palettes:
    # The type of palette shuffle to use for the HUD
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  sword_palettes:
    # The type of palette shuffle to use for the sword
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  shield_palettes:
    # The type of palette shuffle to use for the shield
    default: 50
    good: 0
    blackout: 0
    puke: 0
    classic: 0
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  heartbeep:
    # How quickly the heart beep sound effect will play
    normal: 0
    double: 0
    half: 0
    quarter: 50
    off: 0

  heartcolor:
    # The color of hearts in the HUD
    red: 50
    blue: 50
    green: 50
    yellow: 50

  quickswap:
    # Allows you to quickly swap items while playing with L/R
    false: 0
    true: 50

  menuspeed:
    # How quickly the menu appears/disappears
    normal: 0
    instant: 50
    double: 0
    triple: 0
    quadruple: 0
    half: 0

  music:
    # Whether background music will play in game
    false: 0
    true: 50

  reduceflashing:
    # Reduces flashing for certain scenes such as the Misery Mire and Ganon's Tower opening cutscenes
    false: 0
    true: 50

  triforcehud:
    # When and how the triforce hunt HUD should display
    normal: 50
    hide_goal: 0
    hide_required: 0
    hide_both: 0

  sprite: Cadence


Minecraft:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    #random-range-0-40: 10
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 10 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Dragon Egg Shard

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    [Dragon Egg Shard]

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  advancement_goal:
    # Number of advancements required to spawn bosses.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 95
    
    #35: 50
    random-range-45-50: 1
    #40: 15
    #45: 15
    #50: 15
    random: 0
    random-low: 0
    random-high: 0

  egg_shards_required:
    # Number of dragon egg shards to collect to spawn bosses.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  egg_shards_available:
    # Number of dragon egg shards available to collect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  required_bosses:
    # Bosses which must be defeated to finish the game.
    none: 50
    ender_dragon: 0
    wither: 0
    both: 0

  shuffle_structures:
    # Enables shuffling of villages, outposts, fortresses, bastions, and end cities.
    false: 0
    true: 50

  structure_compasses:
    # Adds structure compasses to the item pool, which point to the nearest indicated structure.
    false: 0
    true: 50

  bee_traps:
    # Replaces a percentage of junk items with bee traps, which spawn multiple angered bees around every player when
    # received.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  combat_difficulty:
    # Modifies the level of items logically required for exploring dangerous areas and fighting bosses.
    easy: 0
    normal: 50
    hard: 0

  include_hard_advancements:
    # Enables certain RNG-reliant or tedious advancements.
    false: 50
    true: 0

  include_unreasonable_advancements:
    # Enables the extremely difficult advancements "How Did We Get Here?" and "Adventuring Time."
    false: 50
    true: 0

  include_postgame_advancements:
    # Enables advancements that require spawning and defeating the required bosses.
    false: 50
    true: 0

  send_defeated_mobs:
    # Send killed mobs to other Minecraft worlds which have this option enabled.
    false: 0
    true: 50

  starting_items:
    # Start with these items. Each entry should be of this format: {item: "item_name", amount: #, nbt: "nbt_string"}
    [
      {item: "shulker_box", amount: 2}
    ]

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


Ocarina of Time:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    25: 50
    random: 0
    random-low: 0
    random-high: 0
    #disabled: 50 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {Suns Song: 1, Prelude of Light: 1, Serenade of Water: 1}
    

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    [Ocarina]

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    - Market 10 Big Poes
    - Deku Theater Mask of Truth
    - Deku Theater Skull Mask
    - Ganons Castle Deku Scrub Center-Left
    - Ganons Castle Deku Scrub Center-Right
    - Ganons Castle Deku Scrub Left
    - Ganons Castle Deku Scrub Right
    - Ganons Castle Fire Trial Pot 1
    - Ganons Castle Fire Trial Pot 2
    - Ganons Castle Fire Trial Recovery Heart
    - Ganons Castle Forest Trial Chest
    - Ganons Castle Forest Trial Pot 1
    - Ganons Castle Forest Trial Pot 2
    - Ganons Castle Light Trial Boulder Pot
    - Ganons Castle Light Trial First Left Chest
    - Ganons Castle Light Trial First Right Chest
    - Ganons Castle Light Trial Invisible Enemies Chest
    - Ganons Castle Light Trial Lullaby Chest
    - Ganons Castle Light Trial Pot 1
    - Ganons Castle Light Trial Pot 2
    - Ganons Castle Light Trial Second Left Chest
    - Ganons Castle Light Trial Second Right Chest
    - Ganons Castle Light Trial Third Left Chest
    - Ganons Castle Light Trial Third Right Chest
    - Ganons Castle MQ Deku Scrub Center
    - Ganons Castle MQ Deku Scrub Center-Left
    - Ganons Castle MQ Deku Scrub Center-Right
    - Ganons Castle MQ Deku Scrub Left
    - Ganons Castle MQ Deku Scrub Right
    - Ganons Castle MQ Fire Trial Pot 1
    - Ganons Castle MQ Fire Trial Pot 2
    - Ganons Castle MQ Forest Trial Eye Switch Chest
    - Ganons Castle MQ Forest Trial Freestanding Key
    - Ganons Castle MQ Forest Trial Frozen Eye Switch Chest
    - Ganons Castle MQ Forest Trial Pot 1
    - Ganons Castle MQ Forest Trial Pot 2
    - Ganons Castle MQ Light Trial Lullaby Chest
    - Ganons Castle MQ Light Trial Pot 1
    - Ganons Castle MQ Light Trial Pot 2
    - Ganons Castle MQ Light Trial Recovery Heart 1
    - Ganons Castle MQ Light Trial Recovery Heart 2
    - Ganons Castle MQ Shadow Trial Bomb Flower Chest
    - Ganons Castle MQ Shadow Trial Eye Switch Chest
    - Ganons Castle MQ Shadow Trial Pot 1
    - Ganons Castle MQ Shadow Trial Pot 2
    - Ganons Castle MQ Spirit Trial First Chest
    - Ganons Castle MQ Spirit Trial Golden Gauntlets Chest
    - Ganons Castle MQ Spirit Trial Invisible Chest
    - Ganons Castle MQ Spirit Trial Pot 1
    - Ganons Castle MQ Spirit Trial Pot 2
    - Ganons Castle MQ Spirit Trial Sun Back Left Chest
    - Ganons Castle MQ Spirit Trial Sun Back Right Chest
    - Ganons Castle MQ Spirit Trial Sun Front Left Chest
    - Ganons Castle MQ Water Trial Chest
    - Ganons Castle MQ Water Trial Pot 1
    - Ganons Castle MQ Water Trial Pot 2
    - Ganons Castle MQ Water Trial Recovery Heart
    - Ganons Castle Shadow Trial Front Chest
    - Ganons Castle Shadow Trial Golden Gauntlets Chest
    - Ganons Castle Shadow Trial Like Like Pot 1
    - Ganons Castle Shadow Trial Like Like Pot 2
    - Ganons Castle Shadow Trial Pot 1
    - Ganons Castle Shadow Trial Pot 2
    - Ganons Castle Shadow Trial Recovery Heart 1
    - Ganons Castle Shadow Trial Recovery Heart 2
    - Ganons Castle Shadow Trial Recovery Heart 3
    - Ganons Castle Spirit Trial Crystal Switch Chest
    - Ganons Castle Spirit Trial Invisible Chest
    - Ganons Castle Spirit Trial Pot 1
    - Ganons Castle Spirit Trial Pot 2
    - Ganons Castle Spirit Trial Recovery Heart
    - Ganons Castle Water Trial Left Chest
    - Ganons Castle Water Trial Pot 1
    - Ganons Castle Water Trial Pot 2
    - Ganons Castle Water Trial Right Chest
    - Ganons Tower Boss Key Chest
    - Ganons Tower Pot 1
    - Ganons Tower Pot 10
    - Ganons Tower Pot 11
    - Ganons Tower Pot 12
    - Ganons Tower Pot 13
    - Ganons Tower Pot 14
    - Ganons Tower Pot 2
    - Ganons Tower Pot 3
    - Ganons Tower Pot 4
    - Ganons Tower Pot 5
    - Ganons Tower Pot 6
    - Ganons Tower Pot 7
    - Ganons Tower Pot 8
    - Ganons Tower Pot 9
    - LH Child Fishing
    - LH Adult Fishing
  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  logic_rules:
    # Set the logic used for the generator.
    glitchless: 50
    glitched: 0
    no_logic: 0

  logic_no_night_tokens_without_suns_song:
    # Nighttime skulltulas will logically require Sun's Song.
    false: 0
    true: 50

  open_forest:
    # Set the state of Kokiri Forest and the path to Deku Tree.
    open: 50
    closed_deku: 0
    closed: 0

  open_kakariko:
    # Set the state of the Kakariko Village gate.
    open: 50
    zelda: 0
    closed: 0

  open_door_of_time:
    # Open the Door of Time by default, without the Song of Time.
    false: 50
    true: 0

  zora_fountain:
    # Set the state of King Zora, blocking the way to Zora's Fountain.
    open: 50
    adult: 0
    closed: 0

  gerudo_fortress:
    # Set the requirements for access to Gerudo Fortress.
    normal: 0
    fast: 50
    open: 0

  bridge:
    # Set the requirements for the Rainbow Bridge.
    open: 0
    vanilla: 0
    stones: 0
    medallions: 5
    dungeons: 5
    tokens: 0
    hearts: 0

  trials:
    # Set the number of required trials in Ganon's Castle.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_age:
    # Choose which age Link will start as.
    child: 50
    adult: 50

  shuffle_interior_entrances:
    # Shuffles interior entrances. "Simple" shuffles houses and Great Fairies; "All" includes Windmill, Link's House,
    # Temple of Time, and Kak potion shop.
    off: 50
    simple: 0
    all: 0

  shuffle_grotto_entrances:
    # Shuffles grotto and grave entrances.
    false: 50
    true: 0

  shuffle_dungeon_entrances:
    # Shuffles dungeon entrances. Opens Deku, Fire and BotW to both ages. "All" includes Ganon's Castle.
    off: 0
    simple: 50
    all: 0

  shuffle_overworld_entrances:
    # Shuffles overworld loading zones.
    false: 50
    true: 0

  owl_drops:
    # Randomizes owl drops from Lake Hylia or Death Mountain Trail as child.
    false: 50
    true: 0

  warp_songs:
    # Randomizes warp song destinations.
    false: 50
    true: 0

  spawn_positions:
    # Randomizes the starting position on loading a save. Consistent between savewarps.
    off: 50
    child: 0
    adult: 0
    both: 0

  shuffle_bosses:
    # Shuffles boss entrances. "Limited" prevents age-mixing of bosses.
    off: 0
    limited: 0
    full: 50

  triforce_hunt:
    # Gather pieces of the Triforce scattered around the world to complete the game.
    false: 5
    true: 0

  triforce_goal:
    # Number of Triforce pieces required to complete the game.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    60: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_triforce_percentage:
    # Percentage of additional Triforce pieces in the pool. With high numbers, you may need to randomize additional
    # locations to have enough items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  bombchus_in_logic:
    # Bombchus are properly considered in logic. The first found pack will have 20 chus; Kokiri Shop and Bazaar sell
    # refills; bombchus open Bombchu Bowling.
    false: 50
    true: 0

  dungeon_shortcuts:
    # Shortcuts to dungeon bosses are available without any requirements.
    off: 50
    choice: 0
    all: 0
    random_dungeons: 0

  dungeon_shortcuts_list:
    # Chosen dungeons to have shortcuts.
    []

  mq_dungeons_mode:
    # Choose between vanilla and Master Quest dungeon layouts.
    vanilla: 50
    mq: 0
    specific: 0
    count: 0

  mq_dungeons_list:
    # Chosen dungeons to be MQ layout.
    []

  mq_dungeons_count:
    # Number of MQ dungeons, chosen randomly.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_stones:
    # Set the number of Spiritual Stones required for the rainbow bridge.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_medallions:
    # Set the number of medallions required for the rainbow bridge.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    0: 0
    random-range-3-5: 5
    random: 0
    random-low: 0
    random-high: 0

  bridge_rewards:
    # Set the number of dungeon rewards required for the rainbow bridge.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 9
    0: 0
    random-range-middle-3-6: 5
    random: 0
    random-low: 0
    random-high: 0

  bridge_tokens:
    # Set the number of Gold Skulltula Tokens required for the rainbow bridge.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random-range-40-60: 10
    random: 0
    random-low: 0
    random-high: 0

  bridge_hearts:
    # Set the number of hearts required for the rainbow bridge.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4
    # Maximum value is 20
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_mapcompass:
    # Control where to shuffle dungeon maps and compasses.
    remove: 0
    startwith: 50
    vanilla: 0
    dungeon: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0
    regional: 0

  shuffle_smallkeys:
    # Control where to shuffle dungeon small keys.
    remove: 0
    vanilla: 0
    dungeon: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 50
    regional: 0

  shuffle_hideoutkeys:
    # Control where to shuffle the Thieves' Hideout small keys.
    vanilla: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 50
    regional: 0

  shuffle_bosskeys:
    # Control where to shuffle boss keys, except the Ganon's Castle Boss Key.
    remove: 0
    vanilla: 0
    dungeon: 50
    overworld: 0
    any_dungeon: 0
    keysanity: 0
    regional: 0

  enhance_map_compass:
    # Map tells if a dungeon is vanilla or MQ. Compass tells what the dungeon reward is.
    false: 0
    true: 50

  shuffle_ganon_bosskey:
    # Control how to shuffle the Ganon's Castle Boss Key.
    remove: 50
    vanilla: 0
    dungeon: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0
    on_lacs: 0
    regional: 0
    stones: 0
    medallions: 0
    dungeons: 0
    tokens: 0
    hearts: 0

  ganon_bosskey_medallions:
    # Set how many medallions are required to receive Ganon BK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_stones:
    # Set how many Spiritual Stones are required to receive Ganon BK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_rewards:
    # Set how many dungeon rewards are required to receive Ganon BK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_tokens:
    # Set how many Gold Skulltula Tokens are required to receive Ganon BK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_hearts:
    # Set how many hearts are required to receive Ganon BK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4
    # Maximum value is 20
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  key_rings:
    # Dungeons have all small keys found at once, rather than individually.
    off: 0
    choose: 0
    all: 50
    random_dungeons: 0

  key_rings_list:
    # Select areas with keyrings rather than individual small keys.
    []

  shuffle_song_items:
    # Set where songs can appear.
    song: 0
    dungeon: 0
    any: 50

  shopsanity:
    # Randomizes shop contents. "fixed_number" randomizes a specific number of items per shop; 
    # "random_number" randomizes the value for each shop.
    off: 0
    fixed_number: 50
    random_number: 0

  shop_slots:
    # Number of items per shop to be randomized into the main itempool. 
    # Only active if Shopsanity is set to "fixed_number."
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  shopsanity_prices:
    # Controls prices of shop items. "Normal" is a distribution from 0 to 300. "X Wallet" requires that wallet at max. "Affordable" is always 10 rupees.
    normal: 50
    affordable: 0
    starting_wallet: 0
    adults_wallet: 0
    giants_wallet: 0
    tycoons_wallet: 0

  tokensanity:
    # Token rewards from Gold Skulltulas are shuffled into the pool.
    off: 0
    dungeons: 0
    overworld: 0
    all: 50

  shuffle_scrubs:
    # Shuffle the items sold by Business Scrubs, and set the prices.
    off: 0
    low: 50
    regular: 0
    random_prices: 0

  shuffle_child_trade:
    # Controls the behavior of the start of the child trade quest.
    vanilla: 0
    shuffle: 0
    skip_child_zelda: 50

  shuffle_freestanding_items:
    # Shuffles freestanding rupees, recovery hearts, Shadow Temple Spinning Pots, and Goron Pot.
    off: 50
    all: 0
    overworld: 0
    dungeons: 0

  shuffle_pots:
    # Shuffles pots and flying pots which normally contain an item.
    off: 100
    all: 0
    overworld: 0
    dungeons: 0

  shuffle_crates:
    # Shuffles large and small crates containing an item.
    off: 50
    all: 0
    overworld: 0
    dungeons: 0

  shuffle_cows:
    # Cows give items when Epona's Song is played.
    false: 50
    true: 0

  shuffle_beehives:
    # Beehives drop an item when destroyed by an explosion, the Hookshot, or the Boomerang.
    false: 50
    true: 0

  shuffle_kokiri_sword:
    # Shuffle Kokiri Sword into the item pool.
    false: 0
    true: 50

  shuffle_ocarinas:
    # Shuffle the Fairy Ocarina and Ocarina of Time into the item pool.
    false: 0
    true: 50

  shuffle_gerudo_card:
    # Shuffle the Gerudo Membership Card into the item pool.
    false: 0
    true: 50

  shuffle_beans:
    # Adds a pack of 10 beans to the item pool and changes the bean salesman to sell one item for 60 rupees.
    false: 0
    true: 50

  shuffle_medigoron_carpet_salesman:
    # Shuffle the items sold by Medigoron and the Haunted Wasteland Carpet Salesman.
    false: 50
    true: 0

  shuffle_frog_song_rupees:
    # Shuffles the purple rupees received from the Zora's River frogs.
    false: 0
    true: 50

  no_escape_sequence:
    # Skips the tower collapse sequence between the Ganondorf and Ganon fights.
    false: 0
    true: 50

  no_guard_stealth:
    # The crawlspace into Hyrule Castle skips straight to Zelda.
    false: 0
    true: 50

  no_epona_race:
    # Epona can always be summoned with Epona's Song.
    false: 0
    true: 50

  skip_some_minigame_phases:
    # Dampe Race and Horseback Archery give both rewards if the second condition is met on the first attempt.
    false: 0
    true: 50

  complete_mask_quest:
    # All masks are immediately available to borrow from the Happy Mask Shop.
    false: 0
    true: 50

  useful_cutscenes:
    # Reenables the Poe cutscene in Forest Temple, Darunia in Fire Temple, and Twinrova introduction. Mostly useful for
    #  glitched.
    false: 50
    true: 0

  fast_chests:
    # All chest animations are fast. If disabled, major items have a slow animation.
    false: 0
    true: 50

  free_scarecrow:
    # Pulling out the ocarina near a scarecrow spot spawns Pierre without needing the song.
    false: 0
    true: 50

  fast_bunny_hood:
    # Bunny Hood lets you move 1.5x faster like in Majora's Mask.
    false: 0
    true: 50

  plant_beans:
    # Pre-plants all 10 magic beans in the soft soil spots.
    false: 0
    true: 50

  chicken_count:
    # Controls the number of Cuccos for Anju to give an item as child.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  big_poe_count:
    # Number of Big Poes required for the Poe Collector's item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  fae_torch_count:
    # Number of lit torches required to open Shadow Temple.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 24
    24: 50
    random: 0
    random-low: 0
    random-high: 0

  correct_chest_appearances:
    # Changes chest textures and/or sizes to match their contents. "Classic" is the old behavior of CSMC.
    off: 50
    textures: 0
    both: 0
    classic: 0

  minor_items_as_major_chest:
    # Hylian Shield, Deku Shield, and Bombchus appear in big/gold chests.
    false: 50
    true: 0

  invisible_chests:
    # Chests visible only with Lens of Truth. Logic is not changed.
    false: 50
    true: 0

  correct_potcrate_appearances:
    # Unchecked pots and crates have a different texture; unchecked beehives will wiggle. With textures_content, pots and crates have an appearance based on their contents; with textures_unchecked, all unchecked pots/crates have the same appearance.
    off: 0
    textures_content: 0
    textures_unchecked: 50

  hints:
    # Gossip Stones can give hints about item locations.
    none: 0
    mask: 0
    agony: 0
    always: 50

  misc_hints:
    # The Temple of Time altar hints dungeon rewards, bridge info, and Ganon BK info; Ganondorf hints the Light Arrows; Dampe's diary hints a local Hookshot if one exists; Skulltula House locations hint their item.
    false: 0
    true: 50

  hint_dist:
    # Choose the hint distribution to use. Affects the frequency of strong hints, which items are always hinted, etc.
    balanced: 0
    ddr: 0
    scrubs: 0
    strong: 50
    useless: 0
    very_strong: 0
    async: 0

  text_shuffle:
    # Randomizes text in the game for comedic effect.
    none: 50
    except_hints: 0
    complete: 0

  damage_multiplier:
    # Controls the amount of damage Link takes.
    half: 0
    normal: 50
    double: 0
    quadruple: 0
    ohko: 0

  deadly_bonks:
    # Bonking on a wall or object will hurt Link. "Normal" is a half heart of damage.
    none: 50
    half: 0
    normal: 0
    double: 0
    quadruple: 0
    ohko: 0

  no_collectible_hearts:
    # Hearts will not drop from enemies or objects.
    false: 50
    true: 0

  starting_tod:
    # Change the starting time of day.
    default: 50
    sunrise: 0
    morning: 0
    noon: 0
    afternoon: 0
    sunset: 0
    evening: 0
    midnight: 0
    witching_hour: 0

  blue_fire_arrows:
    # Ice arrows can melt red ice and break the mud walls in Dodongo's Cavern.
    false: 0
    true: 50

  fix_broken_drops:
    # Fixes two broken vanilla drops: deku shield in child Spirit Temple, and magic drop on GTG eye statue.
    false: 0
    true: 50

  start_with_consumables:
    # Start the game with full Deku Sticks and Deku Nuts.
    false: 0
    true: 50

  start_with_rupees:
    # Start with a full wallet. Wallet upgrades will also fill your wallet.
    false: 0
    true: 50

  item_pool_value:
    # Changes the number of items available in the game.
    plentiful: 0
    balanced: 50
    scarce: 0
    minimal: 0

  junk_ice_traps:
    # Adds ice traps to the item pool.
    off: 0
    normal: 50
    on: 0
    mayhem: 0
    onslaught: 0

  ice_trap_appearance:
    # Changes the appearance of ice traps as freestanding items.
    major_only: 50
    junk_only: 0
    anything: 0

  adult_trade_start:
    # Choose the items that can appear to start the adult trade sequence. By default it is Claim Check only.
    ['Claim_Check']

  default_targeting:
    # Default targeting option.
    hold: 50
    switch: 0

  display_dpad:
    # Show dpad icon on HUD for quick actions (ocarina, hover boots, iron boots).
    false: 0
    true: 50

  dpad_dungeon_menu:
    # Show separated menus on the pause screen for dungeon keys, rewards, and Vanilla/MQ info.
    false: 0
    true: 50

  correct_model_colors:
    # Makes in-game models match their HUD element colors.
    false: 0
    true: 50

  background_music:
    # Randomize or disable background music.
    normal: 50
    off: 0
    randomized: 0

  fanfares:
    # Randomize or disable item fanfares.
    normal: 50
    off: 0
    randomized: 0

  ocarina_fanfares:
    # Enable ocarina songs as fanfares. These are longer than usual fanfares. Does nothing without fanfares randomized.
    false: 50
    true: 0

  kokiri_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    kokiri_green: 0
    goron_red: 0
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0

  goron_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    kokiri_green: 0
    goron_red: 0
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0

  zora_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    kokiri_green: 0
    goron_red: 0
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0

  silver_gauntlets_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    silver: 0
    gold: 0
    black: 0
    green: 0
    blue: 0
    bronze: 0
    red: 0
    sky_blue: 0
    pink: 0
    magenta: 0
    orange: 0
    lime: 0
    purple: 0

  golden_gauntlets_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    silver: 0
    gold: 0
    black: 0
    green: 0
    blue: 0
    bronze: 0
    red: 0
    sky_blue: 0
    pink: 0
    magenta: 0
    orange: 0
    lime: 0
    purple: 0

  mirror_shield_frame_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    red: 0
    green: 0
    blue: 0
    yellow: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  navi_color_default_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 50
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_default_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  navi_color_enemy_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 50
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_enemy_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  navi_color_npc_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 50
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_npc_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  navi_color_prop_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 50
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_prop_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  sword_trail_duration:
    # Set the duration for sword trails.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4
    # Maximum value is 20
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  sword_trail_color_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 50
    white: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  sword_trail_color_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    white: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50

  bombchu_trail_color_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    red: 50
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  bombchu_trail_color_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50

  boomerang_trail_color_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    yellow: 50
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  boomerang_trail_color_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    yellow: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50

  heart_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    red: 0
    green: 50
    blue: 0
    yellow: 0

  magic_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    green: 0
    red: 0
    blue: 0
    purple: 0
    pink: 0
    yellow: 0
    white: 0

  a_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    n64_blue: 0
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  b_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 50
    n64_blue: 0
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  c_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 50
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  start_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 0
    n64_red: 50
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  sfx_navi_overworld:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    cockadoodledoo: 0
    dusk_howl: 0
    exploding_crate: 0
    explosion: 0
    great_fairy: 0
    guay: 0
    low_health: 0
    recover_health: 0
    horse_neigh: 0
    shattering_ice: 0
    moo: 0
    mweep: 0
    navi_hello: 0
    notification: 0
    poe: 0
    shattering_pot: 0
    redead_scream: 0
    ribbit: 0
    ruto_giggle: 0
    skulltula: 0
    soft_beep: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_navi_enemy:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    cockadoodledoo: 0
    dusk_howl: 0
    exploding_crate: 0
    explosion: 0
    great_fairy: 0
    guay: 0
    low_health: 0
    recover_health: 0
    horse_neigh: 0
    shattering_ice: 0
    moo: 0
    mweep: 0
    navi_hello: 0
    notification: 0
    poe: 0
    shattering_pot: 0
    redead_scream: 0
    ribbit: 0
    ruto_giggle: 0
    skulltula: 0
    soft_beep: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_low_hp:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 0
    completely_random: 0
    random_ear_safe: 50
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_low: 0
    bow_twang: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    drawbridge_set: 0
    guay: 0
    recover_health: 0
    horse_trot: 0
    iron_boots: 0
    moo: 0
    mweep: 0
    navi_hey: 0
    navi_random: 0
    notification: 0
    shattering_pot: 0
    ribbit: 0
    silver_rupee: 0
    soft_beep: 0
    switch: 0
    sword_bonk: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_menu_cursor:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_high: 0
    bongo_bongo_low: 0
    bottle_cork: 0
    bow_twang: 0
    bubble_laugh: 0
    carrot_refill: 0
    change_item: 0
    child_pant: 0
    cluck: 0
    deku_baba: 0
    drawbridge_set: 0
    dusk_howl: 0
    fanfare_light: 0
    fanfare_medium: 0
    field_shrub: 0
    flare_dancer_startled: 0
    ganondorf_teh: 0
    gohma_larva_croak: 0
    gold_skull_token: 0
    goron_wake: 0
    guay: 0
    gunshot: 0
    low_health: 0
    recover_health: 0
    hammer_bonk: 0
    horse_trot: 0
    iron_boots: 0
    iron_knuckle: 0
    moo: 0
    mweep: 0
    notification: 0
    phantom_ganon_laugh: 0
    plant_explode: 0
    shattering_pot: 0
    redead_moan: 0
    ribbit: 0
    rupee: 0
    silver_rupee: 0
    ruto_crash: 0
    ruto_lift: 0
    ruto_thrown: 0
    scrub_emerge: 0
    shabom_bounce: 0
    shabom_pop: 0
    shellblade: 0
    skulltula: 0
    soft_beep: 0
    spit_nut: 0
    switch: 0
    sword_bonk: 0
    talon_hmm: 0
    talon_snore: 0
    talon_wtf: 0
    tambourine: 0
    target_enemy: 0
    target_neutral: 0
    thunder: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_menu_select:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_high: 0
    bongo_bongo_low: 0
    bottle_cork: 0
    bow_twang: 0
    bubble_laugh: 0
    carrot_refill: 0
    change_item: 0
    child_cringe: 0
    child_pant: 0
    child_scream: 0
    cluck: 0
    deku_baba: 0
    drawbridge_set: 0
    dusk_howl: 0
    fanfare_light: 0
    fanfare_medium: 0
    field_shrub: 0
    flare_dancer_startled: 0
    ganondorf_teh: 0
    gohma_larva_croak: 0
    gold_skull_token: 0
    goron_wake: 0
    guay: 0
    gunshot: 0
    low_health: 0
    recover_health: 0
    hammer_bonk: 0
    horse_trot: 0
    iron_boots: 0
    iron_knuckle: 0
    moo: 0
    mweep: 0
    notification: 0
    phantom_ganon_laugh: 0
    plant_explode: 0
    shattering_pot: 0
    redead_moan: 0
    ribbit: 0
    rupee: 0
    silver_rupee: 0
    ruto_crash: 0
    ruto_lift: 0
    ruto_thrown: 0
    scrub_emerge: 0
    shabom_bounce: 0
    shabom_pop: 0
    shellblade: 0
    skulltula: 0
    soft_beep: 0
    spit_nut: 0
    switch: 0
    sword_bonk: 0
    talon_hmm: 0
    talon_snore: 0
    talon_wtf: 0
    tambourine: 0
    target_enemy: 0
    target_neutral: 0
    thunder: 0
    timer: 0
    adult_zelda_gasp: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  Logic Tricks:
    ['Hidden Grottos without Stone of Agony', 'Fewer Tunic Requirements', 'Backflip over Mido as Adult', 'Man on Roof without Hookshot', 'Windmill PoH as Adult with Nothing']



Overcooked! 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  location_balancing:
    # Location balancing affects the density of progression items found in your world relative to other wordlds. This setting changes nothing for solo games.
    # 
    # - Disabled: Location density in your world can fluctuate greatly depending on the settings of other players. In extreme cases, your world may be entirely populated with filler items
    # 
    # - Compromise: Locations are balanced to a midpoint between "fair" and "natural"
    # 
    # - Full: Locations are balanced in an attempt to make the number of progression items sent out and received equal over the entire game
    disabled: 0
    compromise: 50
    full: 0

  ramp_tricks:
    # If enabled, generated games may require sequence breaks on the overworld map. This includes crossing small gaps and escaping out of bounds.
    false: 50
    true: 0

  deathlink:
    # DeathLink is an opt-in feature for Multiworlds where individual death events are propogated to all games with DeathLink enabled.
    # 
    # - Disabled: Death will behave as it does in the original game.
    # 
    # - Death Only: A DeathLink broadcast will be sent every time a chef falls into a stage hazard. All local chefs will be killed when any one perishes.
    # 
    # - Death and Overcook: Same as above, but an additional broadcast will be sent whenever the kitchen catches on fire from burnt food.
    disabled: 50
    death_only: 0
    death_and_overcook: 0

  shuffle_level_order:
    # Shuffles the order of kitchens on the overworld map. Also draws from DLC maps.
    false: 0
    true: 50

  include_dlcs:
    # Which DLCs should be included when 'Shuffle Level Order' is enabled?'
    ['Story', 'Seasonal']

  include_horde_levels:
    # Includes "Horde Defence" levels in the pool of possible kitchens when Shuffle Level Order is enabled. Also adds
    # two horde-specific items into the item pool.
    false: 50
    true: 0

  prep_levels:
    # Choose How "Prep Levels" are handled (levels where the timer does not start until the first order is served):
    # 
    # - Original: Prep Levels may appear
    # 
    # - Excluded: Prep Levels are excluded from the pool during level shuffling
    # 
    # - All You Can Eat: Prep Levels may appear, but the timer automatically starts. The star score requirements are also
    # adjusted to use the All You Can Eat World Record (if it exists)
    original: 0
    excluded: 50
    all_you_can_eat: 0

  kevin_levels:
    # Includes the 8 Kevin level locations on the map as unlockables. Turn off to make games shorter.
    false: 0
    true: 50

  fix_bugs:
    # Fixes Bugs Present in the base game:
    # - Double Serving Exploit
    # - Sink Bug
    # - Control Stick Cancel/Throw Bug
    # - Can't Throw Near Empty Burner Bug
    false: 0
    true: 50

  shorter_level_duration:
    # Modifies level duration to be about 1/3rd shorter than in the original game, thus bringing the item discovery
    # pace in line with other popular Archipelago games.
    # 
    # Points required to earn stars are scaled accordingly. ("Boss Levels" which change scenery mid-game are not
    # affected.)
    false: 0
    true: 50

  short_horde_levels:
    # Modifies horde levels to contain roughly 1/3rd fewer waves than in the original game.
    # 
    # The kitchen's health is sacled appropriately to preserve the same approximate difficulty.
    false: 0
    true: 50

  always_preserve_cooking_progress:
    # Modifies the game to behave more like AYCE, where adding an item to an in-progress container doesn't reset the
    # entire progress bar.
    false: 0
    true: 50

  always_serve_oldest_order:
    # Modifies the game so that serving an expired order doesn't target the ticket with the highest tip. This helps
    # players dig out of a broken tip combo faster.
    false: 0
    true: 50

  display_leaderboard_scores:
    # Modifies the Overworld map to fetch and display the current world records for each level. Press number keys 1-4
    # to view leaderboard scores for that number of players.
    false: 50
    true: 0

  stars_to_win:
    # Number of stars required to unlock 6-6.
    # 
    # Level purchase requirements between 1-1 and 6-6 will be spread between these two numbers. Using too high of a number
    # may result in more frequent generation failures, especially when horde levels are enabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  star_threshold_scale:
    # How difficult should the third star for each level be on a scale of 1-100%, where 100% is the current world
    # record score and 45% is the average vanilla 4-star score.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0


Risk of Rain 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    25: 50
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Classic Mode: Every Item pickup increases fills a progress bar which gives location checks.
    # 
    # Explore Mode: Each environment will have location checks within each environment.
    # environments will be locked in the item pool until received.
    classic: 0
    explore: 50

  total_locations:
    # Classic Mode: Number of location checks which are added to the Risk of Rain playthrough.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 40
    # Maximum value is 250
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  chests_per_stage:
    # Explore Mode: The number of chest locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 2
    # Maximum value is 20
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  shrines_per_stage:
    # Explore Mode: The number of shrine locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 2
    # Maximum value is 20
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  scavengers_per_stage:
    # Explore Mode: The number of scavenger locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  scanner_per_stage:
    # Explore Mode: The number of scanners locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  altars_per_stage:
    # Explore Mode: The number of altars locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 2
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  total_revivals:
    # Total Percentage of `Dio's Best Friend` item put in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  start_with_revive:
    # Start the game with a `Dio's Best Friend` item.
    false: 0
    true: 50

  final_stage_death:
    # Death on the final boss stage counts as a win.
    false: 50
    true: 0

  begin_with_loop:
    # Enable to precollect a full loop of environments.
    # Only has an effect with Explore Mode.
    false: 50
    true: 0

  dlc_sotv:
    # Enable if you are using SOTV DLC.
    #  Affects environment availability for Explore Mode.
    #  Adds Void Items into the item pool
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  item_pickup_step:
    # Number of items to pick up before an AP Check is completed.
    # Setting to 1 means every other pickup.
    # Setting to 2 means every third pickup. So on...
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  shrine_use_step:
    # Explore Mode:
    # Number of shrines to use up before an AP Check is completed.
    # Setting to 1 means every other pickup.
    # Setting to 2 means every third pickup. So on...
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  enable_lunar:
    # Allows Lunar items in the item pool.
    false: 0
    true: 50

  item_weights:
    # Set item_pool_presets to true if you want to use one of these presets.
    # Preset choices for determining the weights of the item pool.
    # - New is a test for a potential adjustment to the default weights.
    # - Uncommon puts a large number of uncommon items in the pool.
    # - Legendary puts a large number of legendary items in the pool.
    # - Lunartic makes everything a lunar item.
    # - Chaos generates the pool completely at random with rarer items having a slight cap to prevent this option being too easy.
    # - No Scraps removes all scrap items from the item pool.
    # - Even generates the item pool with every item having an even weight.
    # - Scraps Only will be only scrap items in the item pool.
    # - Void makes everything a void item.
    default: 50
    new: 0
    uncommon: 0
    legendary: 0
    lunartic: 0
    chaos: 0
    no_scraps: 0
    even: 0
    scraps_only: 0
    void: 0

  item_pool_presets:
    # Will use the item weight presets when set to true, otherwise will use the custom set item pool weights.
    false: 50
    true: 0

  green_scrap:
    # Weight of Green Scraps in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  red_scrap:
    # Weight of Red Scraps in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  yellow_scrap:
    # Weight of yellow scraps in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  white_scrap:
    # Weight of white scraps in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  common_item:
    # Weight of common items in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    64: 50
    random: 0
    random-low: 0
    random-high: 0

  uncommon_item:
    # Weight of uncommon items in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    32: 50
    random: 0
    random-low: 0
    random-high: 0

  legendary_item:
    # Weight of legendary items in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  boss_item:
    # Weight of boss items in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  lunar_item:
    # Weight of lunar items in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  void_item:
    # Weight of void items in the item pool.
    # 
    # (Ignored unless Item Weight Presets is 'No')
    # 
    # (Ignored if Enable DLC - SOTV is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  equipment:
    # Weight of equipment items in the item pool.
    # 
    #  (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0


Super Mario 64:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  area_rando:
    # Randomize Entrances
    off: 0
    courses_only: 0
    courses_and_secrets_separate: 50
    courses_and_secrets: 0

  buddy_checks:
    # Bob-omb Buddies are checks, Cannon Unlocks are items
    false: 0
    true: 50

  exclamation_boxes:
    # Include 1Up Exclamation Boxes during randomization.
    # Adds 29 locations to the pool.
    off: 0
    1ups_only: 50

  progressive_keys:
    # Keys will first grant you access to the Basement, then to the Second Floor
    false: 0
    true: 50

  enable_coin_stars:
    # Disable to Ignore 100 Coin Stars. You can still collect them, but they don't do anything.
    # Removes 15 locations from the pool.
    false: 50
    true: 0

  enable_move_rando:
    # Mario is unable to perform some actions until a corresponding item is picked up.
    # This option is incompatible with builds using a 'nomoverando' branch.
    # Specific actions to randomize can be specified in the YAML.
    false: 0
    true: 50

  move_rando_actions:
    # Which actions to randomize when Move Randomizer is enabled
    ['Triple Jump', 'Long Jump', 'Backflip', 'Side Flip', 'Wall Kick', 'Dive', 'Ground Pound', 'Kick', 'Climb', 'Ledge Grab']

  strict_cap_requirements:
    # If disabled, Stars that expect special caps may have to be acquired without the caps
    false: 0
    true: 50

  strict_cannon_requirements:
    # If disabled, Stars that expect cannons may have to be acquired without them.
    # Has no effect if Buddy Checks and Move Randomizer are disabled
    false: 0
    true: 50

  strict_move_requirements:
    # If disabled, Stars that expect certain moves may have to be acquired without them. Only makes a difference
    # if Move Randomization is enabled
    false: 0
    true: 50

  amount_of_stars:
    # How many stars exist.
    # If there aren't enough locations to hold the given total, the total will be reduced.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 35
    # Maximum value is 120
    120: 50
    random: 0
    random-low: 0
    random-high: 0

  first_bowser_star_door_cost:
    # What percent of the total stars are required at the Star Door to Bowser in the Dark World
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    7: 0
    random-range-5-10: 50
    random: 0
    random-low: 0
    random-high: 0

  basement_star_door_cost:
    # What percent of the total stars are required at the Star Door in the Basement
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    25: 0
    random-range-20-30: 50
    random: 0
    random-low: 0
    random-high: 0

  second_floor_star_door_cost:
    # What percent of the total stars are required to access the third floor
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    42: 0
    random-range-40-45: 50
    random: 0
    random-low: 0
    random-high: 0

  mips1_cost:
    # What percent of the total stars are required to spawn MIPS the first time
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 35
    12: 50
    random: 0
    random-low: 0
    random-high: 0

  mips2_cost:
    # What percent of the total stars are required to spawn MIPS the second time.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    42: 50
    random: 0
    random-low: 0
    random-high: 0

  stars_to_finish:
    # What percent of the total stars are required at the infinite stairs
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 90
    58: 0
    random-range-55-65: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  completion_type:
    # Set goal for game completion
    last_bowser_stage: 50
    all_bowser_stages: 0


Super Mario World:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    30: 50
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Yoshi Egg

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {Progressive Powerup: 1}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    - Carry

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  goal:
    # Determines the goal of the seed
    # Bowser: Defeat Koopalings, reach Bowser's Castle and defeat Bowser
    # Yoshi Egg Hunt: Find a certain number of Yoshi Eggs
    bowser: 50
    yoshi_egg_hunt: 50

  bosses_required:
    # How many Bosses (Koopalings or Reznor) must be defeated in order to defeat Bowser
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 11
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  max_yoshi_egg_cap:
    # Maximum possible number of Yoshi Eggs that will be in the item pool
    # If fewer available locations exist in the pool than this number, the number of available locations will be used instead.
    # Required Percentage of Yoshi Eggs will be calculated based off of that number.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 255
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  percentage_of_yoshi_eggs:
    # What Percentage of Yoshi Eggs are required to finish Yoshi Egg Hunt
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    #75: 50
    67: 50
    #random-range-50-67: 50
    random: 0
    random-low: 0
    random-high: 0

  dragon_coin_checks:
    # Whether collecting 5 Dragon Coins in each level will grant a check
    false: 50
    true: 0

  moon_checks:
    # Whether collecting a 3-Up Moon in a level will grant a check
    false: 50
    true: 0

  hidden_1up_checks:
    # Whether collecting a hidden 1-Up mushroom in a level will grant a check
    # These checks are considered cryptic as there's no actual indicator that they're in their respective places
    # Enable this option at your own risk
    false: 50
    true: 0

  bonus_block_checks:
    # Whether collecting a 1-Up mushroom from a Bonus Block in a level will grant a check
    false: 50
    true: 0

  blocksanity:
    # Whether hitting a block with an item or coin inside will grant a check
    # Note that some blocks are excluded due to how the option and the game works!
    # Exclusion list:
    #   * Blocks in Top Secret Area & Front Door/Bowser Castle
    #   * Blocks that are unreachable unless you glitch your way in
    false: 50
    true: 0

  bowser_castle_doors:
    # How the doors of Bowser's Castle behave
    # Vanilla: Front and Back Doors behave as vanilla
    # Fast: Both doors behave as the Back Door
    # Slow: Both doors behave as the Front Door
    # "Front Door" requires beating all 8 Rooms
    # "Back Door" only requires going through the dark hallway to Bowser
    vanilla: 0
    fast: 50
    slow: 0

  bowser_castle_rooms:
    # How the rooms of Bowser's Castle Front Door behave
    # Vanilla: You can choose which rooms to enter, as in vanilla
    # Random Two Room: Two random rooms are chosen
    # Random Five Room: Five random rooms are chosen
    # Gauntlet: All eight rooms must be cleared
    # Labyrinth: Which room leads to Bowser?
    vanilla: 0
    random_two_room: 50
    random_five_room: 0
    gauntlet: 0
    labyrinth: 0

  level_shuffle:
    # Whether levels are shuffled
    false: 0
    true: 50

  exclude_special_zone:
    # If active, this option will prevent any progression items from being placed in Special Zone levels.
    # Additionally, if Level Shuffle is active, Special Zone levels will not be shuffled away from their vanilla tiles.
    false: 0
    true: 50

  boss_shuffle:
    # How the rooms of Bowser's Castle Front Door behave
    # None: Bosses are not shuffled
    # Simple: Four Reznors and the seven Koopalings are shuffled around
    # Full: Each boss location gets a fully random boss
    # Singularity: One or two bosses are chosen and placed at every boss location
    none: 0
    simple: 5
    full: 5
    singularity: 5

  swap_donut_gh_exits:
    # If enabled, this option will swap which overworld direction the two exits of the level at the Donut Ghost House
    #     overworld tile go:
    # False: Normal Exit goes up, Secret Exit goes right.
    # True: Normal Exit goes right, Secret Exit goes up.
    false: 0
    true: 50

  display_received_item_popups:
    # What messages to display in-game for items received
    none: 0
    all: 0
    progression: 0
    progression_minus_yoshi_eggs: 50

  junk_fill_percentage:
    # Replace a percentage of non-required Yoshi Eggs in the item pool with random junk items (only applicable on Yoshi Egg Hunt goal)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_fill_percentage:
    # Replace a percentage of junk items in the item pool with random traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    35: 50
    random: 0
    random-low: 0
    random-high: 0

  ice_trap_weight:
    # Likelihood of a receiving a trap which causes the level to become slippery
    none: 0
    low: 0
    medium: 50
    high: 0

  stun_trap_weight:
    # Likelihood of a receiving a trap which briefly stuns Mario
    none: 0
    low: 50
    medium: 0
    high: 0

  literature_trap_weight:
    # Likelihood of a receiving a trap which causes the player to read literature
    none: 0
    low: 0
    medium: 50
    high: 0

  timer_trap_weight:
    # Likelihood of a receiving a trap which causes the timer to run low
    none: 0
    low: 0
    medium: 50
    high: 0

  reverse_trap_weight:
    # Likelihood of a receiving a trap which causes the controls to be reversed in the current level
    none: 0
    low: 0
    medium: 50
    high: 0

  thwimp_trap_weight:
    # Likelihood of a receiving a trap which causes a Thwimp to spawn above the player
    none: 0
    low: 0
    medium: 50
    high: 0

  autosave:
    # Whether a save prompt will appear after every level
    false: 0
    true: 50

  early_climb:
    # Force Climb to appear early in the seed as a local item.
    # This is particularly useful to prevent BK when Level Shuffle is disabled
    false: 50
    true: 0

  overworld_speed:
    # How fast Mario moves on the overworld
    slow: 0
    vanilla: 0
    fast: 50

  music_shuffle:
    # Music shuffle type
    # None: No Music is shuffled
    # Consistent: Each music track is consistently shuffled throughout the game
    # Full: Each individual level has a random music track
    # Singularity: The entire game uses one song for overworld and one song for levels
    none: 0
    consistent: 0
    full: 50
    singularity: 0

  sfx_shuffle:
    # Shuffles almost every instance of sound effect playback
    # Archipelago elements that play sound effects aren't randomized
    # None: No SFX are shuffled
    # Full: Each individual SFX call has a random SFX
    # Singularity: The entire game uses one SFX for every SFX call
    none: 50
    full: 0
    singularity: 0

  mario_palette:
    # Mario palette color
    mario: 0
    luigi: 50
    wario: 0
    waluigi: 0
    geno: 0
    princess: 0
    dark: 0
    sponge: 0

  level_palette_shuffle:
    # Whether to shuffle level palettes
    # Off: Do not shuffle palettes
    # On Legacy: Uses only the palette sets from the original game
    # On Curated: Uses custom, hand-crafted palette sets
    off: 50
    on_legacy: 0
    on_curated: 0

  overworld_palette_shuffle:
    # Whether to shuffle overworld palettes
    # Off: Do not shuffle palettes
    # On Legacy: Uses only the palette sets from the original game
    # On Curated: Uses custom, hand-crafted palette sets
    off: 50
    on_legacy: 0
    on_curated: 0

  starting_life_count:
    # How many extra lives to start the game with
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    99: 50
    random: 0
    random-low: 0
    random-high: 0
  
  plando_items:
    - item:
        Carry: 1
      location: early_locations
      from_pool: true


Slay the Spire:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    [Boss Relic]

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  character:
    # Pick What Character you wish to play with.
    ironclad: 0
    silent: 0
    defect: 0
    watcher: 5

  ascension:
    # What Ascension do you wish to play with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  heart_run:
    # Whether or not you will need to collect the 3 keys and enter the final act to
    # complete the game. The Heart does not need to be defeated.
    false: 50
    true: 0


SMZ3:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 50 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {Lamp: 1, SpringBall: 1, ETank: 1, ThreeBombs: 2, Boots: 1}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  sm_logic:
    # This option selects what kind of logic to use for item placement inside
    # Super Metroid.
    # 
    # Normal - Normal logic includes only what Super Metroid teaches players
    # itself. Anything that's not demonstrated in-game or by the intro cutscenes
    # will not be required here.
    # 
    # Hard - Hard logic is based upon the "no major glitches" ruleset and
    # includes most tricks that are considered minor glitches, with some 
    # restrictions. You'll want to be somewhat of a Super Metroid veteran for
    # this logic.
    # 
    # See https://samus.link/information for required moves.
    normal: 50
    hard: 0

  sword_location:
    # This option decides where the first sword will be placed.
    # Randomized - The sword can be placed anywhere.
    # Early - The sword will be placed in a location accessible from the start of
    # the game.
    # Unce assured - The sword will always be placed on Link's Uncle.
    randomized: 50
    early: 0
    uncle: 0

  morph_location:
    # This option decides where the morph ball will be placed.
    # Randomized - The morph ball can be placed anywhere.
    # Early - The morph ball will be placed in a location accessible from the 
    # start of the game.
    # Original location - The morph ball will always be placed at its original 
    # location.
    randomized: 50
    early: 0
    original: 0

  goal:
    # This option decides what goal is required to finish the randomizer.
    # Defeat Ganon and Mother Brain - Find the required crystals and boss tokens kill both bosses.
    # Fast Ganon and Defeat Mother Brain - The hole to ganon is open without having to defeat Agahnim in 
    #                                      Ganon's Tower and Ganon can be defeat as soon you have the required 
    #                                      crystals to make Ganon vulnerable. For keysanity, this mode also removes 
    #                                      the Crateria Boss Key requirement from Tourian to allow faster access.
    # All Dungeons and Defeat Mother Brain -  Similar to "Defeat Ganon and Mother Brain", but also requires all dungeons 
    #                                         to be beaten including Castle Tower and Agahnim.
    defeatboth: 0
    fastganondefeatmotherbrain: 50
    alldungeonsdefeatmotherbrain: 0

  key_shuffle:
    # This option decides how dungeon items such as keys are shuffled.
    # None - A Link to the Past dungeon items can only be placed inside the 
    # dungeon they belong to, and there are no changes to Super Metroid.
    # Keysanity - See https://samus.link/information
    none: 50
    keysanity: 0

  open_tower:
    # The amount of crystals required to be able to enter Ganon's Tower. 
    # If this is set to Random, the amount can be found in-game on a sign next to Ganon's Tower.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_vulnerable:
    # The amount of crystals required to be able to harm Ganon. The amount can be found 
    # in-game on a sign near the top of the Pyramid.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    #2: 10
    #3: 15
    4: 20
    #5: 15
    #6: 10
    random: 0
    random-low: 0
    random-high: 0

  open_tourian:
    # The amount of boss tokens required to enter Tourian. The amount can be found in-game 
    # on a sign above the door leading to the Tourian entrance.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    #random-between-1-3: 1
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  spin_jumps_animation:
    # Enable separate space/screw jump animations
    false: 50
    true: 0

  heart_beep_speed:
    # Sets the speed of the heart beep sound in A Link to the Past.
    off: 10
    quarter: 0
    half: 0
    normal: 0
    double: 0

  heart_color:
    # Changes the color of the hearts in the HUD for A Link to the Past.
    red: 0
    green: 10
    blue: 0
    yellow: 0

  quick_swap:
    # When enabled, lets you switch items in ALTTP with L/R
    false: 0
    true: 10

  energy_beep:
    # Toggles the low health energy beep in Super Metroid.
    false: 0
    true: 50


Super Metroid:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 50 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    [Morph Ball]

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {Spring Ball: 1}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    [Morph Ball]

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_removes_from_pool:
    # Remove items in starting inventory from pool.
    false: 50
    true: 0

  preset:
    # Choose one of the presets or specify "varia_custom" to use varia_custom_preset option or specify "custom" to use
    # custom_preset option.
    newbie: 0
    casual: 0
    regular: 0
    veteran: 0
    expert: 0
    master: 0
    samus: 0
    season_races: 0
    smrat2021: 0
    solution: 0
    custom: 0
    varia_custom: 50

  start_location:
    # Choose where you want to start the game.
    ceres: 0
    landing_site: 50
    gauntlet_top: 0
    green_brinstar_elevator: 0
    big_pink: 0
    etecoons_supers: 0
    wrecked_ship_main: 0
    firefleas_top: 0
    business_center: 0
    bubble_mountain: 0
    mama_turtle: 0
    watering_hole: 0
    aqueduct: 0
    red_brinstar_elevator: 0
    golden_four: 0

  remote_items:
    # Indicates you get items sent from your own world. This allows coop play of a world.
    false: 0
    true: 50

  death_link:
    # When DeathLink is enabled and someone dies, you will die. With survive reserve tanks can save you.
    disable: 50
    enable: 0
    enable_survive: 0

  max_difficulty:
    # Depending on the perceived difficulties of the techniques, bosses, hell runs etc. from the preset, it will
    # prevent the Randomizer from placing an item in a location too difficult to reach with the current items.
    easy: 0
    medium: 0
    hard: 50
    harder: 0
    hardcore: 0
    mania: 0
    infinity: 0

  morph_placement:
    # Influences where the Morphing Ball with be placed.
    early: 50
    normal: 0

  hide_items:
    # Hides half of the visible items.
    # Items always visible:
    # - Energy Tank, Gauntlet
    # - Energy Tank, Terminator
    # - Morphing Ball
    # - Missile (Crateria moat)
    # - Missile (green Brinstar below super missile)
    # - Missile (above Crocomire)
    # - Power Bomb (lower Norfair above fire flea room)
    # - Missile (Gravity Suit)
    # - Missile (green Maridia shinespark)
    false: 50
    true: 0

  strict_minors:
    # Instead of using the Minors proportions as probabilities, enforce a strict distribution to match the proportions
    # as closely as possible.
    false: 50
    true: 0

  missile_qty:
    # The higher the number the higher the probability of choosing missles when placing a minor.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 90
    90: 50
    random: 0
    random-low: 0
    random-high: 0

  super_qty:
    # The higher the number the higher the probability of choosing super missles when placing a minor.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 90
    90: 50
    random: 0
    random-low: 0
    random-high: 0

  power_bomb_qty:
    # The higher the number the higher the probability of choosing power bombs when placing a minor.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 90
    90: 50
    random: 0
    random-low: 0
    random-high: 0

  minor_qty:
    # From 7%, minimum number of minors required to finish the game, to 100%.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 7
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  energy_qty:
    # Choose how many Energy/Reserve Tanks will be available, from 0-1 in ultra sparse, 4-6 in sparse, 8-12 in medium
    # and 18 in vanilla.
    ultra_sparse: 0
    sparse: 0
    medium: 0
    vanilla: 50

  area_randomization:
    # Randomize areas together using bidirectional access portals.
    off: 50
    light: 0
    on: 0

  area_layout:
    # Some layout tweaks to make your life easier in areas randomizer.
    false: 50
    true: 0

  doors_colors_rando:
    # Randomize the color of Red/Green/Yellow doors. Add four new type of doors which require Ice/Wave/Spazer/Plasma
    # beams to open them.
    false: 50
    true: 0

  allow_grey_doors:
    # When randomizing the color of Red/Green/Yellow doors, some doors can be randomized to Grey. Grey doors will never
    # open, you will have to go around them.
    false: 50
    true: 0

  boss_randomization:
    # Randomize Golden 4 bosses access doors using bidirectional access portals.
    false: 50
    true: 0

  escape_rando:
    # When leaving Tourian, get teleported to the exit of a random Map station (between Brinstar/Maridia/Norfair/Wrecked Ship).
    # You then have to find your way to the ship in the remaining time. Allotted time depends on area layout, but not on skill settings and is pretty generous.
    # 
    # During the escape sequence:
    # - All doors are opened
    # - Maridia tube is opened
    # - The Hyper Beam can destroy Bomb , Power Bomb  and Super Missile  blocks and open blue/green gates from both sides
    # - All mini bosses are defeated
    # - All minor enemies are removed to allow you to move faster and remove lag
    # 
    # During regular game only Crateria Map station door can be opened and activating the station will act as if all map stations were activated at once.
    # 
    # Animals Challenges:
    # You can use the extra available time to:
    # - find the animals that are hidden behind a (now blue) map station door
    # - go to the vanilla animals door to cycle through the 4 available escapes, and complete as many escapes as you can
    # 
    # Pick your challenge, or try to do both, but watch your timer!
    false: 50
    true: 0

  remove_escape_enemies:
    # Remove enemies during escape sequence, disable it to blast through enemies with your Hyper Beam and cause lag.
    false: 50
    true: 0

  fun_combat:
    # Forces removal of Plasma Beam and Screw Attack if the preset and settings allow it. In addition, can randomly
    # remove Spazer and Wave Beam from the Combat set. If used, might force 'minimal' accessibility.
    false: 50
    true: 0

  fun_movement:
    # Forces removal of Space Jump if the preset allows it. In addition, can randomly remove High Jump, Grappling Beam,
    # Spring Ball, Speed Booster, and Bombs from the Movement set. If used, might force 'minimal' accessibility.
    false: 50
    true: 0

  fun_suits:
    # If the preset and seed layout allow it, will force removal of at least one of Varia Suit and/or Gravity Suit. If
    # used, might force 'minimal' accessibility.
    false: 50
    true: 0

  layout_patches:
    # Include the anti-softlock layout patches. Disable at your own softlocking risk!
    false: 0
    true: 50

  varia_tweaks:
    # Include minor tweaks for the game to behave 'as it should' in a randomizer context
    false: 0
    true: 50

  nerfed_charge:
    # Samus begins with a starter Charge Beam that does one third of charged shot damage that can damage bosses. Pseudo
    # Screws also do one third damage. Special Beam Attacks do normal damage but cost 3 Power Bombs instead of 1. Once the
    # Charge Beam item has been collected, it does full damage and special attacks are back to normal.
    false: 0
    true: 50

  gravity_behaviour:
    # Modify the heat damage and enemy damage reduction qualities of the Gravity and Varia Suits.
    vanilla: 0
    balanced: 50
    progressive: 0

  elevators_doors_speed:
    # Accelerate doors and elevators transitions.
    false: 0
    true: 50

  spin_jump_restart:
    # Allows Samus to start spinning in mid air after jumping or falling.
    false: 50
    true: 0

  rando_speed:
    # Let Samus keeps her momentum when landing from a fall or from jumping.
    false: 0
    true: 50

  infinite_space_jump:
    # Space jumps can be done quicker and at any time in air, water or lava, even after falling long distances.
    false: 0
    true: 50

  refill_before_save:
    # Refill energy and ammo when saving.
    false: 0
    true: 50

  hud:
    # Displays the current area name and the number of remaining items of selected item split in the HUD for the
    # current area.
    false: 0
    true: 50

  animals:
    # Replace saving the animals in the escape sequence by a random surprise.
    false: 50
    true: 0

  no_music:
    # Disable the background music.
    false: 50
    true: 0

  random_music:
    # Randomize the background music.
    false: 50
    true: 0

  custom_preset:
    # see https://randommetroidsolver.pythonanywhere.com/presets for detailed info on each preset settings
    # knows: each skill (know) has a pair [can use, perceived difficulty using one of 1, 5, 10, 25, 50 or 100 each one
    #        matching a max_difficulty]
    # settings: hard rooms, hellruns and bosses settings
    # controller: predefined controller mapping and moon walk setting
    controller: {Newsupermarcobro}
    knows: {}
    settings: {}

  varia_custom_preset:
    # use an entry from the preset list on https://randommetroidsolver.pythonanywhere.com/presets
    - Newsupermarcobro

  tourian:
    # Choose endgame Tourian behaviour:
    # Vanilla: regular vanilla Tourian
    # Fast: speed up Tourian to skip Metroids, Zebetites, and all cutscenes (including Mother Brain 3 fight). Golden Four statues are replaced by an invincible Gadora until all objectives are completed.
    # Disabled: skip Tourian entirely, ie. escape sequence is triggered as soon as all objectives are completed.
    vanilla: 0
    fast: 50
    disabled: 0

  custom_objective:
    # Use randomized custom objectives. You can choose which objectives are available for the randomizer to choose from. If enabled, the randomizer 
    # will choose "Custom objective count" objectives from "Custom objective list". Otherwise, only objective is used. Default is disabled.
    false: 0
    true: 50

  custom_objective_list:
    # If ""Custom objectives"" is enabled, "Custom Objective count" will be used to pick an amount of objective from the list.
    # This setting is ignored if ""Custom objectives"" is set to false.
    # Note: If you leave the list empty no objective is required to access Tourian, ie. it's open.
    # Note: See the Tourian parameter to enable fast Tourian or trigger the escape when all objectives are completed.
    # Note: Current percentage of collected items is displayed in the inventory pause menu.
    # Note: Collect 100% items is excluded by default as it requires you to complete all the objectives.
    # Note: In AP, Items% and areas objectives are counted toward location checks, not items collected or received, except for "collect all upgrades"
    # 
    # Format as a comma-separated list of objective names: ["kill three G4", "collect 75% items"] or ["random"] to specify the whole list except
    # "collect 100% items" and "nothing". The default is ["random"]. A full list of supported objectives can be found at:
    # https://github.com/ArchipelagoMW/Archipelago/blob/main/worlds/sm/variaRandomizer/utils/objectives.py
    ['random']

  custom_objective_count:
    # By default you need to complete 4 objectives from the list to access Tourian. You can choose between 1 and 5. This setting is ignored if
    # ""Custom objectives"" is set to false.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    random-range-3-5: 50
    random: 0
    random-low: 0
    random-high: 0

  objective:
    # If ""Custom objectives"" is disabled, choose which objectives are required to sink the Golden Four statue and to open access to Tourian.
    # You can choose from 0 to 5 objectives. Up to the first 5 objectives from the list will be selected.
    # Note: If you leave the list empty no objective is required to access Tourian, ie. it's open.
    # Note: See the Tourian parameter to enable fast Tourian or trigger the escape when all objectives are completed.
    # Note: Current percentage of collected items is displayed in the inventory pause menu.
    # Note: In AP, Items% and areas objectives are counted toward location checks, not items collected or received, except for "collect all upgrades"
    # 
    # Format as a comma-separated list of objective names: ["kill three G4", "collect 75% items"]. The default is ["kill all G4"].
    # A full list of supported objectives can be found at:
    # https://github.com/ArchipelagoMW/Archipelago/blob/main/worlds/sm/variaRandomizer/utils/objectives.py
    ['kill all G4']
    

  relaxed_round_robin_cf:
    # Changes Crystal Flashes behavior and requirements as follows:
    # 
    # You can perform a Crystal Flash with any amount of ammo, but you need at least one Power Bomb to begin the process.
    # After consuming 1 ammo, Samus gains 50 energy, and it will try a different ammo type next,  
    # cycling through Missiles, Supers, and Power Bombs as available. The cycling is to keep the consumption even between ammo types.
    # If one of your ammo types is at 0, it will be skipped.
    # The Crystal Flash ends when Samus is out of ammo or a total of 30 ammo has been consumed.
    false: 0
    true: 50


Dark Souls III:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 50 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    [Small Lothric Banner]

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {"Soul of a Great Champion": 2}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  enable_weapon_locations:
    # Randomizes weapons (+76 locations)
    false: 0
    true: 50

  enable_shield_locations:
    # Randomizes shields (+24 locations)
    false: 0
    true: 50

  enable_armor_locations:
    # Randomizes armor pieces (+97 locations)
    false: 0
    true: 50

  enable_ring_locations:
    # Randomizes rings (+49 locations)
    false: 0
    true: 50

  enable_spell_locations:
    # Randomizes spells (+18 locations)
    false: 0
    true: 50

  enable_key_locations:
    # Randomizes items which unlock doors or bypass barriers
    false: 0
    true: 50

  enable_boss_locations:
    # Randomizes Boss Souls (+18 Locations)
    false: 0
    true: 50

  enable_npc_locations:
    # Randomizes friendly NPC drops (meaning you will probably have to kill them) (+14 locations)
    false: 50
    true: 0

  enable_misc_locations:
    # Randomizes miscellaneous items (ashes, tomes, scrolls, etc.) to the pool. (+36 locations)
    false: 0
    true: 50

  enable_health_upgrade_locations:
    # Randomizes health upgrade items. (+21 locations)
    false: 0
    true: 50

  enable_progressive_locations:
    # Randomizes upgrade materials and consumables such as the titanite shards, firebombs, resin, etc...
    # 
    # Instead of specific locations, these are progressive, so Titanite Shard #1 is the first titanite shard
    # you pick up, regardless of whether it's from an enemy drop late in the game or an item on the ground in the
    # first 5 minutes.
    false: 0
    true: 50

  pool_type:
    # Changes which non-progression items you add to the pool
    # 
    # Shuffle: Items are picked from the locations being randomized
    # Various: Items are picked from a list of all items in the game, but are the same type of item they replace
    shuffle: 50
    various: 0

  guaranteed_items:
    # Guarantees that the specified items will be in the item pool
    {}

  auto_equip:
    # Automatically equips any received armor or left/right weapons.
    false: 50
    true: 0

  lock_equip:
    # Lock the equipment slots so you cannot change your armor or your left/right weapons. Works great with the
    # Auto-equip option.
    false: 50
    true: 0

  no_weapon_requirements:
    # Disable the weapon requirements by removing any movement or damage penalties.
    # Permitting you to use any weapon early
    false: 0
    true: 50

  randomize_infusion:
    # Enable this option to infuse a percentage of the pool of weapons and shields.
    false: 0
    true: 50

  randomize_infusion_percentage:
    # The percentage of weapons/shields in the pool to be infused if Randomize Infusion is toggled
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    33: 0
    random: 5
    random-low: 0
    random-high: 0

  randomize_weapon_level:
    # Enable this option to upgrade a percentage of the pool of weapons to a random value between the minimum and 
    # maximum levels defined.
    # 
    # All: All weapons are eligible, both basic and epic
    # Basic: Only weapons that can be upgraded to +10
    # Epic: Only weapons that can be upgraded to +5
    none: 0
    all: 40
    basic: 0
    epic: 0

  randomize_weapon_level_percentage:
    # The percentage of weapons in the pool to be upgraded if randomize weapons level is toggled
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  min_levels_in_5:
    # The minimum upgraded value of a weapon in the pool of weapons that can only reach +5
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  max_levels_in_5:
    # The maximum upgraded value of a weapon in the pool of weapons that can only reach +5
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  min_levels_in_10:
    # The minimum upgraded value of a weapon in the pool of weapons that can reach +10
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  max_levels_in_10:
    # The maximum upgraded value of a weapon in the pool of weapons that can reach +10
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  late_basin_of_vows:
    # This option makes it so the Basin of Vows is still randomized, but guarantees you that you wont have to venture into
    # Lothric Castle to find your Small Lothric Banner to get out of High Wall of Lothric. So you may find Basin of Vows early, 
    # but you wont have to fight Dancer to find your Small Lothric Banner.
    false: 50
    true: 0

  late_dlc:
    # This option makes it so you are guaranteed to find your Small Doll without having to venture off into the DLC, 
    # effectively putting anything in the DLC in logic after finding both Contraption Key and Small Doll, 
    # and being able to get into Irithyll of the Boreal Valley.
    false: 50
    true: 0

  no_spell_requirements:
    # Disable the spell requirements permitting you to use any spell
    false: 0
    true: 40

  no_equip_load:
    # Disable the equip load constraint from the game
    false: 0
    true: 40

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  enable_dlc:
    # To use this option, you must own both the ASHES OF ARIANDEL and the RINGED CITY DLC
    false: 50
    true: 0


Timespinner:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  StartWithJewelryBox:
    # Start with Jewelry Box unlocked
    false: 0
    true: 50

  DownloadableItems:
    # With the tablet you will be able to download items at terminals
    false: 0
    true: 50

  EyeSpy:
    # Requires Oculus Ring in inventory to be able to break hidden walls.
    false: 50
    true: 0

  StartWithMeyef:
    # Start with Meyef, ideal for when you want to play multiplayer.
    false: 50
    true: 0

  QuickSeed:
    # Start with Talaria Attachment, Nyoom!
    false: 0
    true: 50

  SpecificKeycards:
    # Keycards can only open corresponding doors
    false: 0
    true: 50

  Inverted:
    # Start in the past
    false: 5
    true: 5

  GyreArchives:
    # Gyre locations are in logic. New warps are gated by Merchant Crow and Kobo
    false: 50
    true: 0

  Cantoran:
    # Cantoran's fight and check are available upon revisiting his room
    false: 50
    true: 0

  LoreChecks:
    # Memories and journal entries contain items.
    false: 0
    true: 50

  BossRando:
    # Shuffles the positions of all bosses.
    false: 0
    true: 50

  BossScaling:
    # When Boss Rando is enabled, scales the bosses' HP, XP, and ATK to the stats of the location they replace (Reccomended)
    false: 0
    true: 50

  DamageRando:
    # Randomly nerfs and buffs some orbs and their associated spells as well as some associated rings.
    off: 0
    allnerfs: 0
    mostlynerfs: 0
    balanced: 0
    mostlybuffs: 50
    allbuffs: 0
    manual: 0

  DamageRandoOverrides:
    # Manual +/-/normal odds for an orb. Put 0 if you don't want a certain nerf or buff to be a possibility. Orbs that
    # you don't specify will roll with 1/1/1 as odds
    Blade:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Blood:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Blue:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Empire:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Eye:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Fire:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    ForbiddenTome:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Gun:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Ice:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Iron:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Nether:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Plasma:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Radiant:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Shattered:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Umbra:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Wind:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1

  HpCap:
    # Sets the number that Lunais's HP maxes out at.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 999
    999: 50
    random: 0
    random-low: 0
    random-high: 0

  LevelCap:
    # Sets the max level Lunais can achieve.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    99: 50
    random: 0
    random-low: 0
    random-high: 0

  ExtraEarringsXP:
    # Adds additional XP granted by Galaxy Earrings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 24
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  BossHealing:
    # Enables/disables healing after boss fights. NOTE: Currently only applicable when Boss Rando is enabled.
    false: 0
    true: 50

  ShopFill:
    # Sets the items for sale in Merchant Crow's shops.
    # Default: No sunglasses or trendy jacket, but sand vials for sale.
    # Randomized: Up to 4 random items in each shop.
    # Vanilla: Keep shops the same as the base game.
    # Empty: Sell no items at the shop.
    default: 0
    randomized: 0
    vanilla: 50
    empty: 0

  ShopWarpShards:
    # Shops always sell warp shards (when keys possessed), ignoring inventory setting.
    false: 0
    true: 50

  ShopMultiplier:
    # Multiplier for the cost of items in the shop. Set to 0 for free shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  LootPool:
    # Sets the items that drop from enemies (does not apply to boss reward checks)
    # Vanilla: Drops are the same as the base game
    # Randomized: Each slot of every enemy's drop table is given a random use item or piece of equipment.
    # Empty: Enemies drop nothing.
    vanilla: 50
    randomized: 0
    empty: 0

  DropRateCategory:
    # Sets the drop rate when 'Loot Pool' is set to 'Random'
    # Tiered: Based on item rarity/value
    # Vanilla: Based on bestiary slot the item is placed into
    # Random: Assigned a random tier/drop rate
    # Fixed: Set by the 'Fixed Drop Rate' setting
    tiered: 50
    vanilla: 0
    randomized: 0
    fixed: 0

  FixedDropRate:
    # Base drop rate percentage when 'Drop Rate Category' is set to 'Fixed'
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  LootTierDistro:
    # Sets how often items of each rarity tier are placed when 'Loot Pool' is set to 'Random'
    # Default Weight: Rarer items will be assigned to enemy drop slots less frequently than common items
    # Full Random: Any item has an equal chance of being placed in an enemy's drop slot
    # Inverted Weight: Rarest items show up the most frequently, while common items are the rarest
    default_weight: 50
    full_random: 0
    inverted_weight: 0

  ShowBestiary:
    # All entries in the bestiary are visible, without needing to kill one of a given enemy first
    false: 0
    true: 50

  ShowDrops:
    # All item drops in the bestiary are visible, without needing an enemy to drop one of a given item first
    false: 50
    true: 0

  EnterSandman:
    # The Ancient Pyramid is unlocked by the Twin Pyramid Keys, but the final boss door opens if you have all 5 Timespinner pieces
    false: 50
    true: 0

  DadPercent:
    # The win condition is beating the boss of Emperor's Tower
    false: 50
    true: 0

  RisingTides:
    # Random areas are flooded or drained, can be further specified with RisingTidesOverrides
    false: 50
    true: 0

  RisingTidesOverrides:
    # Odds for specific areas to be flooded or drained, only has effect when RisingTides is on.
    # Areas that are not specified will roll with the default 33% chance of getting flooded or drained
    AncientPyramidShaft:
      Dry: 67
      Flooded: 33
    CastleBasement:
      Dry: 66
      Flooded: 17
      FloodedWithSavePointAvailable: 17
    CastleCourtyard:
      Dry: 67
      Flooded: 33
    CastleMoat:
      Dry: 67
      Flooded: 33
    LakeDesolation:
      Dry: 67
      Flooded: 33
    LakeSerene:
      Dry: 33
      Flooded: 67
    Maw:
      Dry: 67
      Flooded: 33
    Sandman:
      Dry: 67
      Flooded: 33
    Xarion:
      Dry: 67
      Flooded: 33

  UnchainedKeys:
    # Start with Twin Pyramid Key, which does not give free warp;
    # warp items for Past, Present, (and ??? with Enter Sandman) can be found.
    false: 50
    true: 0

  TrapChance:
    # Chance of traps in the item pool.
    # Traps will only replace filler items such as potions, vials and antidotes
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  Traps:
    # List of traps that may be in the item pool to find
    ['Meteor Sparrow Trap', 'Poison Trap', 'Chaos Trap', 'Neurotoxin Trap', 'Bee Trap']
  DeathLink:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


Pokemon Red and Blue:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  game_version:
    # Select Red or Blue version.
    red: 0
    blue: 0
    random: 50

  trainer_name:
    # Your trainer name. If not set to choose_in_game, must be a name not exceeding 7 characters, and the prompt to
    # name your character in-game will be skipped. See the setup guide on archipelago.gg for a list of allowed characters.
    Marco: 50
    choose_in_game: 0

  rival_name:
    # Your rival's name. If not set to choose_in_game, must be a name not exceeding 7 characters, and the prompt to
    # name your rival in-game will be skipped. See the setup guide on archipelago.gg for a list of allowed characters.
    Bob: 50
    choose_in_game: 0

  elite_four_badges_condition:
    # Number of badges required to challenge the Elite Four once the Indigo Plateau has been reached.
    # Your rival will reveal the amount needed on the first Route 22 battle (after turning in Oak's Parcel).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  elite_four_key_items_condition:
    # Percentage of available key items (not counting items you can lose) required to challenge the Elite Four. Does
    # not count HMs. Evolution stones and Exp. All are key items in Archipelago.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  elite_four_pokedex_condition:
    # Percentage of logically-reachable Pokemon that must be registered as "owned" in the Pokedex in order to
    # challenge the Elite Four.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  victory_road_condition:
    # Number of badges required to reach the front entrance of Victory Road.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  route_22_gate_condition:
    # Number of badges required to pass through the Route 22 Gate
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  viridian_gym_condition:
    # Number of badges required to enter Viridian Gym.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  cerulean_cave_badges_condition:
    # Number of badges needed to access the Cerulean Cave entrance in addition to the required Key Items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  cerulean_cave_key_items_condition:
    # Percentage of available key items (not counting items you can lose) required to access the Cerulean Cave
    # entrance in addition to the required badges. Does not count HMs.
    # Evolution stones and Exp. All are key items in Archipelago.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  route_3_condition:
    # Set a condition to pass through from Pewter City to Route 3.
    open: 0
    defeat_brock: 50
    defeat_any_gym: 0
    boulder_badge: 0
    any_badge: 0

  robbed_house_officer:
    # You can disable to remove the requirement to help Bill before you can enter the robbed house in Cerulean City.
    false: 0
    true: 50

  second_fossil_check_condition:
    # After choosing one of the fossil location items, you can obtain the remaining item from the Cinnabar Lab
    # Scientist after reviving this number of fossils.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  fossil_check_item_types:
    # The two fossil checks always contain items for your own game. Here, you can choose what types of items can
    # appear. Key Items means only advancement items can appear. Unique means key items or TMs may appear. No Key Items
    # means no advancement items may appear.
    any: 50
    key_items: 0
    unique_items: 0
    no_key_items: 0

  exp_all:
    # Choose how the Exp. All item is handled. It can be removed entirely, shuffled into the item pool, or you can
    # start with it.
    remove: 0
    randomize: 0
    start_with: 50

  old_man:
    # With Open Viridian City, the Old Man will let you through without needing to turn in Oak's Parcel.
    # Early Parcel will ensure Oak's Parcel is available at the beginning of your game.
    vanilla: 0
    early_parcel: 50
    open_viridian_city: 0

  badgesanity:
    # Shuffle gym badges into the general item pool. If turned off, badges will be shuffled across the 8 gyms.
    false: 50
    true: 0

  badges_needed_for_hm_moves:
    # Off will remove the requirement for badges to use HM moves. Extra will give the Marsh, Volcano, and Earth Badges
    # a random HM move to enable. Extra Plus will additionally pick two random badges to enable a second HM move.
    # You will only need one of the required badges to use the HM move.
    on: 0
    off: 50
    extra: 0
    extra_plus: 0

  key_items_only:
    # Shuffle only Key Items. This overrides Randomize Hidden Items, Trainersanity, and Dexsanity.
    # Sets all non-excluded locations in your game to Priority Locations.
    # May have high generation failure rates for solo games or small multiworlds, especially with Door Shuffle.
    false: 50
    true: 0

  tea:
    # Adds a Tea item to the item pool which the Saffron guards require instead of the vending machine drinks.
    # Adds a location check to the Celadon Mansion 1F, where Tea is acquired in FireRed and LeafGreen.
    false: 0
    true: 50

  extra_key_items:
    # Adds key items that are required to access the Rocket Hideout, Cinnabar Mansion, Safari Zone, and Power Plant.
    # Adds four item pickups to Rock Tunnel B1F.
    false: 50
    true: 0

  split_card_key:
    # Splits the Card Key item into 10 different Keys, one for each Silph Co floor 2F through 11F.
    # Adds location checks to 9 NPCs in Silph Co.
    # With Progressive, you will always obtain the keys in order from 2F to 11F.
    off: 50
    on: 0
    progressive: 0

  all_elevators_locked:
    # Adds requirements to the Celadon Department Store elevator and Silph Co elevators to have the Lift Key.
    # No logical implications normally, but may have a significant impact on Insanity Door Shuffle.
    false: 50
    true: 0

  extra_strength_boulders:
    # Adds Strength Boulders blocking the Route 11 gate, and in Route 13 (can be bypassed with Surf).
    # This potentially increases the usefulness of Strength as well as the Bicycle.
    false: 50
    true: 0

  require_item_finder:
    # Require Item Finder to pick up hidden items.
    false: 50
    true: 0

  randomize_hidden_items:
    # Randomize hidden items. If you choose exclude, they will be randomized but will be guaranteed junk items.
    on: 0
    off: 50
    exclude: 0

  prizesanity:
    # Shuffles the TM prizes at the Celadon Prize Corner into the item pool.
    false: 50
    true: 0

  trainersanity:
    # Add a location check to every trainer in the game, which can be obtained by talking to a trainer after defeating
    # them. Does not affect gym leaders and some scripted event battles (including all Rival, Giovanni, and
    # Cinnabar Gym battles).
    false: 50
    true: 0

  dexsanity:
    # Adds location checks for Pokemon flagged "owned" on your Pokedex. You may specify a percentage of Pokemon to
    # have checks added. If Accessibility is set to locations, this will be the percentage of all logically reachable
    # Pokemon that will get a location check added to it. With items or minimal Accessibility, it will be the percentage
    # of all 151 Pokemon.
    # If Pokedex is required, the items for Pokemon acquired before acquiring the Pokedex can be found by talking to
    # Professor Oak or evaluating the Pokedex via Oak's PC.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    disabled: 50 # equivalent to 0
    full: 0 # equivalent to 100

  randomize_pokedex:
    # Randomize the location of the Pokedex, or start with it.
    vanilla: 50
    randomize: 0
    start_with: 0

  require_pokedex:
    # Require the Pokedex to obtain items from Oak's Aides or from Dexsanity checks.
    false: 0
    true: 50

  all_pokemon_seen:
    # Start with all Pokemon "seen" in your Pokedex. This allows you to see where Pokemon can be encountered in the
    # wild. Pokemon found by fishing or in the Cerulean Cave are not displayed.
    # The Pokedex also shows which HMs can be learned by Pokemon registered as seen.
    false: 50
    true: 0

  oaks_aide_rt_2:
    # Number of Pokemon registered in the Pokedex required to receive the item from Oak's Aide on Route 2.
    # Vanilla is 10.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  oaks_aide_rt_11:
    # Number of Pokemon registered in the Pokedex required to receive the item from Oak's Aide on Route 11.
    # Vanilla is 30.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  oaks_aide_rt_15:
    # Number of Pokemon registered in the Pokedex required to receive the item from Oak's Aide on Route 15.
    # Vanilla is 50.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  stonesanity:
    # Removes the four evolution stones from the Celadon Department Store and replaces four of the five Moon Stones
    # in the item pool with the four shop stones. If randomize_hidden_items is off, this will cause the two hidden
    # Moon Stone locations to be randomized anyway. These are in Pokemon Mansion 1F and Mt Moon B2F.
    false: 50
    true: 0

  door_shuffle:
    # Simple: entrances are randomized together in groups: Pokemarts, Gyms, single exit dungeons, dual exit dungeons,
    # single exit misc interiors, dual exit misc interiors are all shuffled separately. Safari Zone is not shuffled.
    # Full: Any outdoor entrance may lead to any interior.
    # Insanity: All rooms in the game are shuffled.
    off: 50
    simple: 0
    full: 0
    insanity: 0

  warp_tile_shuffle:
    # Shuffle the warp tiles in Silph Co and Sabrina's Gym among themselves, separately.
    # On Insanity, turning this off means they are mixed into the general door shuffle instead of only being shuffled
    # among themselves.
    false: 50
    true: 0

  randomize_rock_tunnel:
    # Randomize the layout of Rock Tunnel.
    # If Insanity Door Shuffle is on, this will cause only the main entrances to Rock Tunnel to be shuffled.
    false: 50
    true: 0

  dark_rock_tunnel_logic:
    # Logically require Flash to traverse the Rock Tunnel, so you are never forced to traverse it in the dark.
    false: 0
    true: 50

  free_fly_location:
    # One random Fly destination will be unlocked by default.
    false: 0
    true: 50

  town_map_fly_location:
    # One random Fly destination will be unlocked when you obtain the Town Map.
    false: 50
    true: 0

  blind_trainers:
    # Chance each frame that you are standing on a tile in a trainer's line of sight that they will fail to initiate a
    # battle. If you move into and out of their line of sight without stopping, this chance will only trigger once.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  minimum_steps_between_encounters:
    # Minimum number of steps between wild Pokemon encounters.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 255
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  level_scaling:
    # Off: Encounters use vanilla game levels.
    # By Spheres: Levels are scaled by access sphere. Areas reachable in later spheres will have higher levels.
    # Spheres and Distance: Levels are scaled by access spheres as well as distance from Pallet Town, measured by number
    # of internal region connections. This is a much more severe curving of levels and may lead to much less variation in
    # levels found in a particular map. However, it may make the higher door shuffle settings significantly more bearable,
    # as these options more often result in a smaller number of larger access spheres.
    off: 0
    by_spheres: 50
    by_spheres_and_distance: 0

  exp_modifier:
    # Modifier for EXP gained. When specifying a number, exp is multiplied by this amount and divided by 16.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4.0
    # Maximum value is 255
    random: 0
    random-low: 0
    random-high: 0
    half: 0 # equivalent to 8.0
    normal: 0 # equivalent to 16
    double: 0 # equivalent to 32
    triple: 0 # equivalent to 48
    quadruple: 0 # equivalent to 64
    quintuple: 0 # equivalent to 80
    sextuple: 50 # equivalent to 96
    septuple: 0 # equivalent to 112
    octuple: 0 # equivalent to 128

  randomize_wild_pokemon:
    # Randomize all wild Pokemon and game corner prize Pokemon. match_types will select a Pokemon with at least one
    # type matching the original type of the original Pokemon. match_base_stats will prefer Pokemon with closer base stat
    # totals. match_types_and_base_stats will match types and will weight towards similar base stats, but there may not be
    # many to choose from.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 50

  area_1_to_1_mapping:
    # When randomizing wild Pokemon, for each zone, all instances of a particular Pokemon will be replaced with the
    # same Pokemon, resulting in fewer Pokemon in each area.
    false: 0
    true: 50

  randomize_starter_pokemon:
    # Randomize the starter Pokemon choices.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 50

  randomize_static_pokemon:
    # Randomize one-time gift and encountered Pokemon. These will always be first evolution stage Pokemon.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 50

  randomize_legendary_pokemon:
    # Randomize Legendaries. Mew has been added as an encounter at the Vermilion dock truck.
    # Shuffle will shuffle the legendaries with each other. Static will shuffle them into other static Pokemon locations.
    # 'Any' will allow legendaries to appear anywhere based on wild and static randomization options, and their locations
    # will be randomized according to static Pokemon randomization options.
    vanilla: 0
    shuffle: 0
    static: 0
    any: 50

  catch_em_all:
    # Guarantee all first evolution stage Pokemon are available, or all Pokemon of all stages.
    # Currently only has an effect if wild Pokemon are randomized.
    off: 0
    first_stage: 0
    all_pokemon: 50

  randomize_pokemon_stats:
    # Randomize base stats for each Pokemon. Shuffle will shuffle the 5 base stat values amongst each other. Randomize
    # will completely randomize each stat, but will still add up to the same base stat total.
    vanilla: 0
    shuffle: 0
    randomize: 50

  randomize_pokemon_catch_rates:
    # Randomize the catch rate for each Pokemon.
    false: 50
    true: 0

  minimum_catch_rate:
    # Minimum catch rate for each Pokemon. If randomize_catch_rates is on, this will be the minimum value that can be
    # chosen. Otherwise, it will raise any Pokemon's catch rate up to this value if its normal catch rate is lower.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 255
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_trainer_parties:
    # Randomize enemy Pokemon encountered in trainer battles.
    vanilla: 0
    match_types: 0
    match_base_stats: 50
    match_types_and_base_stats: 0
    completely_random: 0

  trainer_legendaries:
    # Allow legendary Pokemon in randomized trainer parties.
    false: 50
    true: 0

  move_balancing:
    # All one-hit-KO moves and fixed-damage moves become normal damaging moves.
    # Blizzard, and moves that cause sleep have their accuracy reduced.
    false: 0
    true: 50

  fix_combat_bugs:
    # Fixes a variety of combat-related bugs. Note that this fixes the Focus Energy bug. The Focus Energy bug causes
    # critical strike chances to be doubled when Focus Energy has not been used and halved when it is used.
    # Fixing this bug means critical strike chances outside the use of Focus Energy are quartered from the vanilla rate.
    false: 0
    true: 50

  randomize_pokemon_movesets:
    # Randomize the moves learned by Pokemon. prefer_types will prefer moves that match the type of the Pokemon.
    vanilla: 0
    prefer_types: 50
    completely_random: 0

  confine_transform_to_ditto:
    # Regardless of moveset randomization, will keep Ditto's first move as Transform no others will learn it.
    # If an enemy Pokemon uses transform before you catch it, it will permanently change to Ditto after capture.
    false: 0
    true: 50

  start_with_four_moves:
    # If movesets are randomized, this will give all Pokemon 4 starting moves.
    false: 0
    true: 50

  same_type_attack_bonus:
    # Here you can disable Same Type Attack Bonus, so that a move matching a Pokemon's type has no benefit.
    # If disabled, all moves will gain 25% extra damage, instead of same type moves gaining 50% extra damage.
    false: 0
    true: 50

  randomize_tm_moves:
    # Randomize the moves taught by TMs.
    # All TM items will be flagged as 'filler' items regardless of how good the move they teach are.
    false: 50
    true: 0

  tm_same_type_compatibility:
    # Chance of each TM being usable on each Pokemon whose type matches the move.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1
    none: 0 # equivalent to 0
    full: 0 # equivalent to 100

  tm_normal_type_compatibility:
    # Chance of each TM being usable on each Pokemon if the move is Normal type and the Pokemon is not.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1
    none: 0 # equivalent to 0
    full: 0 # equivalent to 100

  tm_other_type_compatibility:
    # Chance of each TM being usable on each Pokemon if the move a type other than Normal or one of the Pokemon's types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1
    none: 0 # equivalent to 0
    full: 0 # equivalent to 100

  hm_same_type_compatibility:
    # Chance of each HM being usable on each Pokemon whose type matches the move.
    # At least one Pokemon will always be able to learn the moves needed to meet your accessibility requirements.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 50 # equivalent to 100

  hm_normal_type_compatibility:
    # Chance of each HM being usable on each Pokemon if the move is Normal type and the Pokemon is not.
    # At least one Pokemon will always be able to learn the moves needed to meet your accessibility requirements.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 50 # equivalent to 100

  hm_other_type_compatibility:
    # Chance of each HM being usable on each Pokemon if the move a type other than Normal or one of the Pokemon's types.
    # At least one Pokemon will always be able to learn the moves needed to meet your accessibility requirements.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 50 # equivalent to 100

  inherit_tm_hm_compatibility:
    # If on, evolved Pokemon will inherit their pre-evolved form's TM and HM compatibilities.
    # They will then roll the above set chances again at a 50% lower rate for all TMs and HMs their predecessor could not
    # learn, unless the evolved form has additional or different types, then moves of those new types will be rolled
    # at the full set chance.
    false: 0
    true: 50

  randomize_move_types:
    # Randomize the types of each move.
    false: 50
    true: 0

  randomize_pokemon_types:
    # Randomize the types of each Pokemon. Follow Evolutions will ensure Pokemon's types remain the same when evolving
    # (except possibly gaining a type).
    vanilla: 0
    follow_evolutions: 50
    randomize: 0

  secondary_type_chance:
    # If randomize_pokemon_types is on, this is the chance each Pokemon will have a secondary type. If follow_evolutions
    # is selected, it is the chance a second type will be added at each evolution stage. vanilla will give secondary types
    # to Pokemon that normally have a secondary type.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 100
    random: 50
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1

  randomize_type_chart:
    # Randomize the type chart. If 'randomize' is chosen, the matchup weight options will determine the weights.
    # If the numbers chosen across the 4 settings add up to exactly 225, they will be the exact numbers of those matchups.
    # Otherwise, the normal super effective, and not very effective matchup settings will be used as weights.
    # The immunities option will always be the exact amount of immunity matchups.
    # If 'chaos' is chosen, the matchup settings will be ignored and every type matchup will be given a random damage
    # modifier anywhere between 0 to 200% damage, in 10% increments.
    vanilla: 50
    randomize: 0
    chaos: 0

  normal_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the weight for neutral matchups.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 225
    143: 50
    random: 0
    random-low: 0
    random-high: 0

  super_effective_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the weight for super effective matchups.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 225
    38: 50
    random: 0
    random-low: 0
    random-high: 0

  not_very_effective_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the weight for not very effective matchups.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 225
    38: 50
    random: 0
    random-low: 0
    random-high: 0

  immunity_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the exact number of immunities.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  safari_zone_normal_battles:
    # Change the Safari Zone to have standard wild Pokemon battles.
    false: 50
    true: 0

  normalize_encounter_chances:
    # Each wild encounter table has 10 slots for Pokemon. Normally the chance for each being chosen ranges from
    # 19.9% to 1.2%. Turn this on to normalize them all to 10% each.
    false: 0
    true: 50

  reusable_tms:
    # Makes TMs reusable, so they will not be consumed upon use.
    false: 0
    true: 50

  better_shops:
    # Change every town's Pokemart to contain all normal Pokemart items. Additionally, you can add the Master Ball
    # to these shops.
    off: 0
    on: 50
    add_master_ball: 0

  master_ball_price:
    # Price for Master Balls. Can only be bought if Better Shops is set to Add Master Ball, but this will affect the
    # sell price regardless. Vanilla is 0
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 999999
    5000: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_money:
    # The amount of money you start with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 999999
    10000: 50
    random: 0
    random-low: 0
    random-high: 0

  lose_money_on_blackout:
    # Lose half your money when blacking out, as in vanilla.
    false: 0
    true: 50

  poke_doll_skip:
    # Patch out the Pokemon Tower Poke Doll skip or have this skip considered in logic.
    patched: 50
    in_logic: 0

  bicycle_gate_skips:
    # Patch out the Route 16/18 Bicycle Gate skips or have these skips considered in logic.
    patched: 50
    in_logic: 0

  trap_percentage:
    # Chance for each filler item to be replaced with trap items. Keep in mind that trainersanity vastly increases the
    # number of filler items. The trap weight options will determine which traps can be chosen from and at what likelihood.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  poison_trap_weight:
    # Weights for Poison Traps. These apply the Poison status to all your party members.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  fire_trap_weight:
    # Weights for Fire Traps. These apply the Burn status to all your party members.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  paralyze_trap_weight:
    # Weights for Paralyze Traps. These apply the Paralyze status to all your party members.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  sleep_trap_weight:
    # Weights for Sleep Traps. These apply the Sleep status to all your party members, for randomly between 1 and 7 turns.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  ice_trap_weight:
    # Weights for Ice Traps. These apply the Ice status to all your party members. Don't forget to buy Ice Heals!
    low: 0
    medium: 0
    high: 0
    disabled: 50

  randomize_pokemon_palettes:
    # Modify palettes of Pokemon. Primary Type will set Pokemons' palettes based on their primary type, Follow
    # Evolutions will randomize palettes but palettes will remain the same through evolutions (except Eeveelutions),
    # Completely Random will randomize all Pokemons' palettes individually
    vanilla: 50
    primary_type: 0
    follow_evolutions: 0
    completely_random: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0



The Witness:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    #35: 50
    50: 50
    #random-range-50-99: 10
    random: 0
    random-low: 0
    random-high: 0
    #disabled: 1 # equivalent to 0
    #normal: 50 # equivalent to 50
    #extreme: 50 # equivalent to 99

  length:
    long: 50
    short: 0

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Symmetry Laser
    - Desert Laser
    - Quarry Laser
    - Shadows Laser
    - Keep Laser
    - Monastery Laser
    - Town Laser
    - Jungle Laser
    - Bunker Laser
    - Swamp Laser
    - Treehouse Laser


  non_local_items:
    # Forces these items to be outside their native world.
    [Puzzle Skip]

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    #[]
    - Mountain Bottom Floor Giant Puzzle
    - Mountain Bottom Floor Blue Bridge EP
    - Mountain Bottom Floor Yellow Bridge EP
    - Mountain Floor 1 Back Row 1
    - Mountain Floor 1 Back Row 2
    - Mountain Floor 1 Back Row 3
    - Mountain Floor 1 Left Row 1
    - Mountain Floor 1 Left Row 2
    - Mountain Floor 1 Left Row 3
    - Mountain Floor 1 Left Row 4
    - Mountain Floor 1 Left Row 5
    - Mountain Floor 1 Left Row 6
    - Mountain Floor 1 Left Row 7
    - Mountain Floor 1 Light Bridge Controller
    - Mountain Floor 1 Right Row 1
    - Mountain Floor 1 Right Row 2
    - Mountain Floor 1 Right Row 3
    - Mountain Floor 1 Right Row 4
    - Mountain Floor 1 Right Row 5
    - Mountain Floor 1 Trash Pillar 1
    - Mountain Floor 1 Trash Pillar 2
    - Mountain Floor 2 Elevator Control Panel
    - Mountain Floor 2 Far Row 1
    - Mountain Floor 2 Far Row 2
    - Mountain Floor 2 Far Row 3
    - Mountain Floor 2 Far Row 4
    - Mountain Floor 2 Far Row 5
    - Mountain Floor 2 Far Row 6
    - Mountain Floor 2 Light Bridge Controller Far
    - Mountain Floor 2 Light Bridge Controller Near
    - Mountain Floor 2 Near Row 1
    - Mountain Floor 2 Near Row 2
    - Mountain Floor 2 Near Row 4
    - Mountain Floor 2 Near Row 3
    - Mountain Floor 2 Near Row 5
    - Mountain Floor 2 Pink Bridge EP

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  puzzle_randomization:
    # Puzzles in this randomizer are randomly generated. This setting changes the difficulty/types of puzzles.
    sigma_normal: 50
    #sigma_expert: 1
    none: 0

  shuffle_symbols:
    # You will need to unlock puzzle symbols as items to be able to solve the panels that contain those symbols.
    # If you turn this off, there will be no progression items in the game unless you turn on door shuffle.
    false: 0
    true: 50

  shuffle_doors:
    # If on, opening doors, moving bridges etc. will require a "key".
    # If set to "panels", the panel on the door will be locked until receiving its corresponding key.
    # If set to "doors", the door will open immediately upon receiving its key. Door panels are added as location checks.
    # "Mixed" includes all doors from "doors", and all control panels (bridges, elevators etc.) from "panels".
    off: 0
    panels: 10
    doors: 30
    mixed: 20

  door_groupings:
    # If set to "none", there will be one key for every door, resulting in up to 120 keys being added to the item pool.
    # If set to "regional", all doors in the same general region will open at once with a single key,
    # reducing the amount of door items and complexity.
    off: 50
    regional: 50

  shuffle_boat:
    # If set, adds a "Boat" item to the item pool. Before receiving this item, you will not be able to use the boat.
    false: 0
    true: 50

  shuffle_lasers:
    # If on, the 11 lasers are turned into items and will activate on their own upon receiving them.
    # Note: There is a visual bug that can occur with the Desert Laser. It does not affect gameplay - The Laser can still
    # be redirected as normal, for both applications of redirection.
    false: 10
    true: 40

  disable_non_randomized_puzzles:
    # Disables puzzles that cannot be randomized.
    # This includes many puzzles that heavily involve the environment, such as Shadows, Monastery or Orchard.
    # The lasers for those areas will be activated as you solve optional puzzles throughout the island.
    false: 50
    true: 0

  shuffle_discarded_panels:
    # Add Discarded Panels into the location pool.
    # Solving certain Discarded Panels may still be necessary to beat the game, even if this is off.
    false: 5
    true: 5

  shuffle_vault_boxes:
    # Vault Boxes will have items on them.
    false: 5
    true: 5

  obelisk_keys:
    # Add one Obelisk Key item per Obelisk, locking you out of solving any of the associated Environmental Puzzles.
    # 
    # Does nothing if "Shuffle Environmental Puzzles" is set to "off".
    false: 0
    true: 50

  shuffle_EPs:
    # Add Environmental/Obelisk Puzzles into the location pool.
    # In "individual", every Environmental Puzzle sends an item.
    # In "obelisk_sides", completing every puzzle on one side of an Obelisk sends an item.
    # Note: In Obelisk Sides, any EPs excluded through another setting will be counted as pre-completed on their Obelisk.
    off: 10
    #individual: 2
    #obelisk_sides: 2

  EP_difficulty:
    # When "Shuffle Environmental Puzzles" is on, this setting governs which EPs are eligible for the location pool.
    # On "eclipse", every EP in the game is eligible, including the 1-hour-long "Theater Eclipse EP".
    # On "tedious", Theater Eclipse EP is excluded from the location pool.
    # On "normal", several other difficult or long EPs are excluded as well.
    normal: 50
    tedious: 0
    eclipse: 0  

  shuffle_postgame:
    # Adds locations into the pool that are guaranteed to become accessible after or at the same time as your goal.
    # Use this if you don't play with forfeit on victory. IMPORTANT NOTE: The possibility of your second
    # "Progressive Dots" showing up in the Caves is ignored, they will still be considered "postgame" in base settings.
    false: 50
    true: 0

  victory_condition:
    # Change the victory condition from the original game's ending (elevator) to beating the Challenge
    # or solving the mountaintop box, either using the short solution
    # (7 lasers or whatever you've changed it to) or the long solution (11 lasers or whatever you've changed it to).
    elevator: 0
    challenge: 10
    #mountain_box_short: 50
    #mountain_box_long: 50

  mountain_lasers:
    # Sets the amount of beams required to enter the final area.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    #7: 50
    random-range-5-9: 50
    random: 0
    random-low: 0
    random-high: 0

  challenge_lasers:
    # Sets the amount of beams required to enter the Caves through the Mountain Bottom Floor Discard.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    11: 0
    #1: 10
    random-range-7-10: 50
    random: 0
    random-low: 0
    random-high: 0

  early_caves:
    # Adds an item that opens the Caves Shortcuts to Swamp and Mountain,
    # allowing early access to the Caves even if you are not playing a remote Door Shuffle mode.
    # You can either add this item to the pool to be found on one of your randomized checks,
    # or you can outright start with it and have immediate access to the Caves.
    # If you choose "add_to_pool" and you are already playing a remote Door Shuffle mode, this setting will do nothing.
    off: 0
    add_to_pool: 50
    starting_inventory: 0

  elevators_come_to_you:
  # If true, the Quarry Elevator, Bunker Elevator and Swamp Long Bridge will "come to you" if you approach them.
  # This does actually affect logic as it allows unintended backwards / early access into these areas.
    false: 50
    true: 0

  trap_percentage:
    # Replaces junk items with traps, at the specified rate.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_weights:
    # Specify the weights determining how many copies of each trap item will be in your itempool.
    # If you don't want a specific type of trap, you can set the weight for it to 0 (Do not delete the entry outright!).
    # If you set all trap weights to 0, you will get no traps, bypassing the "Trap Percentage" option.
    Bonk: 1
    Power Surge: 2
    Slowness: 6

  puzzle_skip_amount:
    # Adds this number of Puzzle Skips into the pool, if there is room. Puzzle Skips let you skip one panel.
    # Works on most panels in the game - The only big exception is The Challenge.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # If on: Whenever you fail a puzzle (with some exceptions), everyone who is also on Death Link dies.
    # The effect of a "death" in The Witness is a Power Surge.
    false: 50
    true: 0  

  death_link_amnesty:
    # The number of panel fails to allow before sending a death through Death Link.
    # 0 means every panel fail will send a death, 1 means every other panel fail will send a death, etc.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  hint_amount:
    # Adds hints to Audio Logs. Hints will have the same number of duplicates, as many as will fit. Remaining Audio
    # Logs will have junk hints.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 49
    #49: 50
    random: 50
    random-low: 0
    random-high: 0

  area_hint_percentage:
    # There are two types of hints for The Witness.
    # "Location hints" hint one location in your world or one location containing an item for your world.
    # "Area hints" tell you some general info about the items you can find in one of the main geographic areas on the island.
    # Use this option to specify how many of your hints you want to be area hints. The rest will be location hints.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    33: 50
    random: 0
    random-low: 0
    random-high: 0

  laser_hints:
    # If on, lasers will tell you where their items are if you walk close to them in-game.
    # Only applies if Laser Shuffle is enabled.
    false: 0
    true: 50


Hollow Knight:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    #10: 5
    random: 0
    random-low: 0
    random-high: 0
    disabled: 50 # equivalent to 0
    #normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  length:
    long: 0
    short: 50
  
  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Dreamers

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  RandomizeDreamers:
    # Allow for Dreamers to be randomized into the item pool and opens their locations for randomization.
    false: 0
    true: 50

  RandomizeSkills:
    # Allow for Skills, such as Mantis Claw or Shade Soul, to be randomized into the item pool. Also opens their locations
    # for receiving randomized items.
    false: 0
    true: 50

  RandomizeFocus:
    # Removes the ability to focus and randomizes it into the item pool.
    false: 50
    true: 0

  RandomizeSwim:
    # Removes the ability to swim in water and randomizes it into the item pool.
    false: 0
    true: 50

  RandomizeCharms:
    # Allow for Charms to be randomized into the item pool and open their locations for randomization. Includes Charms
    # sold in shops.
    false: 0
    true: 50

  RandomizeKeys:
    # Allow for Keys to be randomized into the item pool. Includes those sold in shops.
    false: 0
    true: 50

  RandomizeMaskShards:
    # Allow for Mask Shard to be randomized into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeVesselFragments:
    # Allow for Vessel Fragments to be randomized into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeCharmNotches:
    # Allow for Charm Notches to be randomized into the item pool. Includes those sold by Salubra.
    false: 0
    true: 50

  RandomizePaleOre:
    # Randomize Pale Ores into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeGeoChests:
    # Allow for Geo Chests to contain randomized items, as well as their Geo reward being randomized into the item pool.
    false: 0
    true: 50

  RandomizeJunkPitChests:
    # Randomize the contents of junk pit chests into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeRancidEggs:
    # Randomize Rancid Eggs into the item pool and open their locations for randomization
    false: 0
    true: 50

  RandomizeRelics:
    # Randomize Relics (King's Idol, et al.) into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeWhisperingRoots:
    # Randomize the essence rewards from Whispering Roots into the item pool. Whispering Roots will now grant a randomized
    # item when completed. This can be previewed by standing on the root.
    false: 0
    true: 50

  RandomizeBossEssence:
    # Randomize boss essence drops, such as those for defeating Warrior Dreams, into the item pool and open their locations
    # for randomization.
    false: 0
    true: 50

  RandomizeGrubs:
    # Randomize Grubs into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeMimics:
    # Randomize Mimic Grubs into the item pool and open their locations for randomization.Mimic Grubs are always placed
    # in your own game.
    false: 0
    true: 50

  RandomizeMaps:
    # Randomize Maps into the item pool. This causes Cornifer to give you a message allowing you to see and buy an item
    # that is randomized into that location as well.
    false: 0
    true: 50

  RandomizeStags:
    # Randomize Stag Stations unlocks into the item pool as well as placing randomized items on the stag station bell/toll.
    false: 0
    true: 50

  RandomizeLifebloodCocoons:
    # Randomize Lifeblood Cocoon grants into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeGrimmkinFlames:
    # Randomize Grimmkin Flames into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeJournalEntries:
    # Randomize the Hunter's Journal as well as the findable journal entries into the item pool, and open their locations
    # for randomization. Does not include journal entries gained by killing enemies.
    false: 50
    true: 0

  RandomizeNail:
    # Removes the ability to swing the nail left, right and up, and shuffles these into the item pool.
    false: 50
    true: 0

  RandomizeGeoRocks:
    # Randomize Geo Rock rewards into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeBossGeo:
    # Randomize boss Geo drops into the item pool and open those locations for randomization.
    false: 0
    true: 50

  RandomizeSoulTotems:
    # Randomize Soul Refill items into the item pool and open the Soul Totem locations for randomization.
    false: 0
    true: 50

  RandomizeLoreTablets:
    # Randomize Lore items into the itempool, one per Lore Tablet, and place randomized item grants on the tablets themselves.
    # You must still read the tablet to get the item.
    false: 50
    true: 0

  RandomizeElevatorPass:
    # Adds an Elevator Pass item to the item pool, which is then required to use the large elevators connecting
    # City of Tears to the Forgotten Crossroads and Resting Grounds.
    false: 0
    true: 50

  PreciseMovement:
    # Places skips into logic which require extremely precise player movement, possibly without movement skills such as
    # dash or hook.
    false: 50
    true: 0

  ProficientCombat:
    # Places skips into logic which require proficient combat, possibly with limited items.
    false: 50
    true: 0

  BackgroundObjectPogos:
    # Places skips into logic for locations which are reachable via pogoing off of background objects.
    false: 50
    true: 0

  EnemyPogos:
    # Places skips into logic for locations which are reachable via pogos off of enemies.
    false: 50
    true: 0

  ObscureSkips:
    # Places skips into logic which are considered obscure enough that a beginner is not expected to know them.
    false: 50
    true: 0

  ShadeSkips:
    # Places shade skips into logic which utilize the player's shade for pogoing or damage boosting.
    false: 50
    true: 0

  InfectionSkips:
    # Places skips into logic which are only possible after the crossroads become infected.
    false: 50
    true: 0

  FireballSkips:
    # Places skips into logic which require the use of spells to reset fall speed while in mid-air.
    false: 50
    true: 0

  SpikeTunnels:
    # Places skips into logic which require the navigation of narrow tunnels filled with spikes.
    false: 50
    true: 0

  AcidSkips:
    # Places skips into logic which require crossing a pool of acid without Isma's Tear, or water if swim is disabled.
    false: 50
    true: 0

  DamageBoosts:
    # Places skips into logic which require you to take damage from an enemy or hazard to progress.
    false: 50
    true: 0

  DangerousSkips:
    # Places skips into logic which contain a high risk of taking damage.
    false: 50
    true: 0

  DarkRooms:
    # Places skips into logic which require navigating dark rooms without the use of the Lumafly Lantern.
    false: 50
    true: 0

  ComplexSkips:
    # Places skips into logic which require intense setup or are obscure even beyond advanced skip standards.
    false: 50
    true: 0

  DifficultSkips:
    # Places skips into logic which are considered more difficult than typical.
    false: 50
    true: 0

  RemoveSpellUpgrades:
    # Removes the second level of all spells from the item pool.
    false: 50
    true: 0

  StartLocation:
    # Choose your start location. This is currently only locked to King's Pass.
    king's_pass: 50

  Goal:
    # The goal required of you in order to complete your run in Archipelago.
    any: 0
    hollowknight: 0
    siblings: 0
    radiance: 50

  WhitePalace:
    # Whether or not to include White Palace or not.  Note: Even if excluded, the King Fragment check may still be
    # required if charms are vanilla.
    exclude: 50
    kingfragment: 0
    nopathofpain: 0
    include: 0

  ExtraPlatforms:
    # Places additional platforms to make traveling throughout Hallownest more convenient.
    false: 0
    true: 50

  AddUnshuffledLocations:
    # Adds non-randomized locations to the location pool, which allows syncing
    # of location state with co-op or automatic collection via collect.
    # 
    # Note: This will increase the number of location checks required to purchase
    # hints to the total maximum.
    false: 50
    true: 0

  StartingGeo:
    # The amount of starting geo you have.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    0: 0
    random: 0
    random-low: 0
    random-high: 50

  DeathLink:
    # When you die, everyone dies. Of course the reverse is true too.
    # When enabled, choose how incoming deathlinks are handled:
    # vanilla: DeathLink kills you and is just like any other death.  RIP your previous shade and geo.
    # shadeless: DeathLink kills you, but no shade spawns and no geo is lost.  Your previous shade, if any, is untouched.
    # shade: DeathLink functions like a normal death if you do not already have a shade, shadeless otherwise.
    off: 50
    shadeless: 0
    vanilla: 0
    shade: 0

  MinimumGeoPrice:
    # The minimum geo price for items in geo shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 200
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumGeoPrice:
    # The maximum geo price for items in geo shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2000
    200: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumGrubPrice:
    # The minimum grub price in the range of prices that an item should cost from Grubfather.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 46
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumGrubPrice:
    # The maximum grub price in the range of prices that an item should cost from Grubfather.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 46
    23: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumEssencePrice:
    # The minimum essence price in the range of prices that an item should cost from Seer.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2800
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumEssencePrice:
    # The maximum essence price in the range of prices that an item should cost from Seer.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2800
    1400: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumCharmPrice:
    # The minimum charm price in the range of prices that an item should cost for Salubra's shop item which also
    # carry a charm cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumCharmPrice:
    # The maximum charm price in the range of prices that an item should cost for Salubra's shop item which also
    # carry a charm cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  RandomCharmCosts:
    # Total Notch Cost of all Charms together. Vanilla sums to 90.
    # This value is distributed among all charms in a random fashion.
    # Special Cases:
    # Set to -1 or vanilla for vanilla costs.
    # Set to -2 or shuffle to shuffle around the vanilla costs to different charms.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -2
    # Maximum value is 240
    80: 50
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    shuffle: 0 # equivalent to -2

  PlandoCharmCosts:
    # Allows setting a Charm's Notch costs directly, mapping {name: cost}.
    # This is set after any random Charm Notch costs, if applicable.
     {Wayward Compass: 0} 

  MinimumEggPrice:
    # The minimum rancid egg price in the range of prices that an item should cost from Jiji.
    # Only takes effect if the EggSlotShops option is greater than 0.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumEggPrice:
    # The maximum rancid egg price in the range of prices that an item should cost from Jiji.
    # Only takes effect if the EggSlotShops option is greater than 0.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  EggShopSlots:
    # For each slot, add a location to the Egg Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SlyShopSlots:
    # For each extra slot, add a location to the Sly Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  SlyKeyShopSlots:
    # For each extra slot, add a location to the Sly Shop (requiring Shopkeeper's Key) and a filler item to the item
    # pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  IseldaShopSlots:
    # For each extra slot, add a location to the Iselda Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  SalubraShopSlots:
    # For each extra slot, add a location to the Salubra Shop, and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  SalubraCharmShopSlots:
    # For each extra slot, add a location to the Salubra Shop (requiring Charms), and a filler item to the item
    # pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  LegEaterShopSlots:
    # For each extra slot, add a location to the Leg Eater Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  GrubfatherRewardSlots:
    # For each extra slot, add a location to the Grubfather and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  SeerRewardSlots:
    # For each extra slot, add a location to the Seer and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  ExtraShopSlots:
    # For each extra slot, add a location to a randomly chosen shop a filler item to the item pool.
    # 
    # The Egg Shop will be excluded from this list unless it has at least one item.
    # 
    # Shops are capped at 16 items each.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 144
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SplitCrystalHeart:
    # Splits the Crystal Heart into left- and right-only versions of the item.
    false: 0
    true: 50

  SplitMothwingCloak:
    # Splits the Mothwing Cloak into left- and right-only versions of the item. Randomly adds a second left or
    # right Mothwing cloak item which functions as the upgrade to Shade Cloak.
    false: 0
    true: 50

  SplitMantisClaw:
    # Splits the Mantis Claw into left- and right-only versions of the item.
    false: 0
    true: 50

  CostSanity:
    # If enabled, most locations with costs (like stag stations) will have randomly determined costs.
    # If set to shopsonly, CostSanity will only apply to shops (including Grubfather, Seer and Egg Shop).
    # If set to notshops, CostSanity will only apply to non-shops (e.g. Stag stations and Cornifer locations)
    # 
    # These costs can be in Geo (except Grubfather, Seer and Eggshop), Grubs, Charms, Essence and/or Rancid Eggs
    off: 50
    on: 0
    shopsonly: 0
    notshops: 0

  CostSanityHybridChance:
    # The chance that a CostSanity cost will include two components instead of one, e.g. Grubs + Essence
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityEggWeight:
    # The likelihood of Costsanity choosing a Egg cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityGrubWeight:
    # The likelihood of Costsanity choosing a Grub cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityEssenceWeight:
    # The likelihood of Costsanity choosing a Essence cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityCharmWeight:
    # The likelihood of Costsanity choosing a Charm cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityGeoWeight:
    # The likelihood of Costsanity choosing a Geo cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    8: 50
    random: 0
    random-low: 0
    random-high: 0
  
  plando_items:
  - items:
      Herrah: 1
      Lurien: 1
      Monomon: 1

    location:
      non_early_locations


The Messenger:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    40: 50
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Key of Hope
    - Key of Love
    - Key of Courage
    - Key of Chaos
    - Key of Strength
    - Key of Symbiosis

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []
    # - Astral Seed
    # - Astral Tea Leaves

  priority_locations:
    # Prevent these locations from having an unimportant item
    []
    
  item_links:
    # Share part of your item pool with other players.
    []

  logic_level:
    # The level of logic to use when determining what locations in your world are accessible.
    # Normal can require damage boosts, but otherwise approachable for someone who has beaten the game.
    # Hard has some easier speedrunning tricks in logic. May need to leash.
    # Challenging contains more medium and hard difficulty speedrunning tricks.
    # OoB places everything with the minimum amount of rules possible. Expect to do OoB. Not guaranteed completable.
    normal: 50
    hard: 0

  shuffle_shards:
    # Whether mega shards should be item locations.
    false: 0
    true: 50

  limited_movement:
    # Removes either rope dart or wingsuit from the itempool. Forces logic to at least hard and accessibility to minimal.
    false: 50
    true: 0

  early_meditation:
    # Guarantees meditation will be found early
    false: 0
    true: 50

  available_portals:
    # Number of portals that are available from the start. Autumn Hills, Howling Grotto, and Glacial Peak are always available. If portal outputs are not randomized, Searing Crags will also be available.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_portals:
    # Whether the portals lead to random places.
    # Entering a portal from its vanilla area will always lead to HQ, and will unlock it if relevant.
    # Supports plando.
    # 
    # None: Portals will take you where they're supposed to.
    # Shops: Portals can lead to any area except Music Box and Elemental Skylands, with each portal output guaranteed to not overlap with another portal's. Will only put you at a portal or a shop.
    # Checkpoints: Like Shops except checkpoints without shops are also valid drop points.
    # Anywhere: Like Checkpoints except it's possible for multiple portals to output to the same map.
    none: 0
    shops: 0
    checkpoints: 50
    anywhere: 0

  goal:
    # Requirement to finish the game. Power Seal Hunt will force power seal locations to be shuffled.
    open_music_box: 50
    power_seal_hunt: 0

  music_box:
    # Whether the music box gauntlet needs to be done.
    false: 50
    true: 0
  
  notes_needed:
    # How many notes are needed to access the Music Box.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  total_seals:
    # Number of power seals that exist in the item pool when power seal hunt is the goal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 45
    45: 50
    random: 0
    random-low: 0
    random-high: 0

  percent_seals_required:
    # Percentage of total seals required to open the shop chest.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  shop_price:
    # Percentage modifier for shuffled item prices in shops
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 400
    75: 50
    random: 0
    random-low: 0
    random-high: 0

  shop_price_plan:
    # Plan specific prices on shop slots. Supports weighting
    {}

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


Wargroove:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Final Walls
    - Final Bridges
    - Final Sickle

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  income_boost:
    # How much extra income the player gets per turn per boost received.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  commander_defense_boost:
    # How much extra defense the player's commander gets per boost received.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  commander_choice:
    # How the player's commander is selected for missions.
    # Locked Random: The player's commander is randomly predetermined for each level.
    # Unlockable Factions: The player starts with Mercival and can unlock playable factions.
    # Random Starting Faction:  The player starts with a random starting faction and can unlock the rest.
    # When playing with unlockable factions, faction items are added to the pool.
    # Extra faction items after the first also reward starting Groove charge.
    locked_random: 0
    unlockable_factions: 0
    random_starting_faction: 50


Links Awakening DX:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    25: 5
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    [Progressive Power Bracelet]

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  logic:
    # Affects where items are allowed to be placed.
    # [Normal] Playable without using any tricks or glitches. Can require knowledge from a vanilla playthrough, such as how to open Color Dungeon.
    # [Hard] More advanced techniques may be required, but glitches are not. Examples include tricky jumps, killing enemies with only pots.
    # [Glitched] Advanced glitches and techniques may be required, but extremely difficult or tedious tricks are not required. Examples include Bomb Triggers, Super Jumps and Jesus Jumps.
    # [Hell] Obscure knowledge and hard techniques may be required. Examples include featherless jumping with boots and/or hookshot, sequential pit buffers and unclipped superjumps. Things in here can be extremely hard to do or very time consuming.
    normal: 50
    hard: 0
    glitched: 0
    hell: 0

  tradequest:
    # On - adds the trade items to the pool (the trade locations will always be local items)
    # Off - (default) doesn't add them
    false: 50
    true: 0

  rooster:
    # [On] Adds the rooster to the item pool. 
    # [Off] The rooster spot is still a check giving an item. But you will never find the rooster. Any rooster spot is accessible without rooster by other means.
    false: 0
    true: 50

  experimental_dungeon_shuffle:
    # [WARNING] Experimental, may break generation
    # Randomizes
    false: 50
    true: 0

  experimental_entrance_shuffle:
    # [WARNING] Experimental, may break generation
    # Randomizes where overworld entrances lead to.
    # [Simple] Single-entrance caves/houses that have items are shuffled amongst each other.
    # [Advanced] Simple, but two-way connector caves are shuffled in their own pool as well.
    # [Expert] Advanced, but caves/houses without items are also shuffled into the Simple entrance pool.
    # [Insanity] Expert, but the Raft Minigame hut and Mamu's cave are added to the non-connector pool.
    # If random start location and/or dungeon shuffle is enabled, then these will be shuffled with all the non-connector entrance pool.
    # Note, some entrances can lead into water, use the warp-to-home from the save&quit menu to escape this.
    none: 50
    simple: 0

  goal:
    # [Instruments] The Wind Fish's Egg will only open if you have the required number of Instruments of the Sirens, and play the Ballad of the Wind Fish.
    # [Seashells] The Egg will open when you bring 20 seashells. The Ballad and Ocarina are not needed.
    # [Open] The Egg will start pre-opened.
    instruments: 50
    seashells: 0
    open: 0

  instrument_count:
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 0
    random-range-high-2-5: 50
    random: 0
    random-low: 0
    random-high: 0

  link_palette:
    # A-D are color palettes usually used during the damage animation and can change based on where you are.
    normal: 50
    green: 0
    yellow: 0
    red: 0
    blue: 0
    invert_a: 0
    invert_b: 0
    invert_c: 0
    invert_d: 0

  warp_improvements:
    # [On] Adds remake style warp screen to the game. Choose your warp destination on the map after jumping in a portal and press B to select.
    # [Off] No change
    false: 50
    true: 0

  additional_warp_points:
    # [On] (requires warp improvements) Adds a warp point at Crazy Tracy's house (the Mambo teleport spot) and Eagle's Tower
    # [Off] No change
    false: 50
    true: 0

  trendy_game:
    # [Easy] All of the items hold still for you
    # [Normal] The vanilla behavior
    # [Hard] ?
    # [Harder] ???
    # [Hardest] ????
    # [Impossible] ?????
    easy: 50
    normal: 0
    hard: 0
    harder: 0
    hardest: 0
    impossible: 0

  gfxmod:
    # options here correlate with sprite and name files in data/sprites/ladx
    Link: 50

  palette:
    normal: 50
    1bit: 0
    2bit: 0
    greyscale: 0
    pink: 0
    inverted: 0

  text_shuffle:
    # [On] Shuffles all the text in the game
    # [Off] (default) doesn't shuffle them.
    false: 50
    true: 0

  shuffle_nightmare_keys:
    # Shuffle Nightmare Keys
    original_dungeon: 50
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0

  shuffle_small_keys:
    # Shuffle Small Keys
    original_dungeon: 50
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0

  shuffle_maps:
    # Shuffle Dungeon Maps
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 10
    different_world: 0

  shuffle_compasses:
    # Shuffle Dungeon Compasses
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 10
    different_world: 0

  shuffle_stone_beaks:
    # Shuffle Owl Beaks
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 50
    different_world: 0

  music:
    # [Vanilla] Regular Music
    # [Shuffled] Shuffled Music
    # [Off] No music
    vanilla: 50
    shuffled: 0
    off: 0

  shuffle_instruments:
    # Shuffle Instruments
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    # [Vanilla] The item will be in its vanilla location in your world
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 0
    different_world: 0
    vanilla: 50

  music_change_condition:
    # Controls how the music changes.
    # [Sword] When you pick up a sword, the music changes
    # [Always] You always have the post-sword music
    sword: 0
    always: 50

  nag_messages:
    # Controls if nag messages are shown when rocks and crystals are touched. Useful for glitches, annoying for everyone else.
    false: 50
    true: 0

  ap_title_screen:
    # Enables AP specific title screen and disables the intro cutscene
    false: 0
    true: 50



The Legend of Zelda:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    - Triforce Fragment

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {Small Key: 5}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
   - "Level 9 Bomb Drop (Blue Lanmolas)"
   - "Level 9 Bomb Drop (Gels Lake)"
   - "Level 9 Bomb Drop (Like Likes and Zols Corridor)"
   - "Level 9 Bomb Drop (Patra Northeast)"
   - "Level 9 Bomb Drop (Vires)"
   - "Level 9 Compass"
   - "Level 9 Item (Red Ring)"
   - "Level 9 Item (Silver Arrow)"
   - "Level 9 Key Drop (Like Likes and Zols East)"
   - "Level 9 Key Drop (Patra Southwest)"
   - "Level 9 Key Drop (Wizzrobes East Island)"
   - "Level 9 Key Drop (Wizzrobes and Bubbles East)"
   - "Level 9 Map"
   - "Level 9 Rupee Drop (Gels East)"
   - "Level 9 Rupee Drop (Keese Central Island)"
   - "Level 9 Rupee Drop (Keese Southwest)"
   - "Level 9 Rupee Drop (Red Lanmolas)"
   - "Level 9 Rupee Drop (Wizzrobes Central)"
   - "Level 9 Rupee Drop (Wizzrobes North Island)"
   - "Level 9 Rupee Drop (Wizzrobes West Island)"

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  ExpandedPool:
    # Puts room clear drops and take any caves into the pool of items and locations.
    false: 0
    true: 50

  TriforceLocations:
    # Where Triforce fragments can be located. Note that Triforce pieces
    # obtained in a dungeon will heal and warp you out, while overworld Triforce pieces obtained will appear to have
    # no immediate effect. This is normal.
    vanilla: 0
    dungeons: 0
    anywhere: 50

  StartingPosition:
    # How easy is the start of the game.
    # Safe means a weapon is guaranteed in Starting Sword Cave.
    # Unsafe means that a weapon is guaranteed between Starting Sword Cave, Letter Cave, and Armos Knight.
    # Dangerous adds these level locations to the unsafe pool (if they exist):
    #       Level 1 Compass, Level 2 Bomb Drop (Keese), Level 3 Key Drop (Zols Entrance), Level 3 Compass
    # Very Dangerous is the same as dangerous except it doesn't guarantee a weapon. It will only mean progression
    # will be there in single player seeds. In multi worlds, however, this means all bets are off and after checking
    # the dangerous spots, you could be stuck until someone sends you a weapon
    safe: 50
    unsafe: 0
    dangerous: 0
    very_dangerous: 0


Stardew Valley:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # What's your goal with this play-through?
    # Community Center: The world will be completed once you complete the Community Center.
    # Grandpa's Evaluation: The world will be completed once 4 candles are lit at Grandpa's Shrine.
    # Bottom of the Mines: The world will be completed once you reach level 120 in the mineshaft.
    # Cryptic Note: The world will be completed once you complete the quest "Cryptic Note" where Mr Qi asks you to reach floor 100 in the Skull Cavern.
    # Master Angler: The world will be completed once you have caught every fish in the game. Pairs well with Fishsanity.
    # Complete Collection: The world will be completed once you have completed the museum by donating every possible item. Pairs well with Museumsanity.
    # Full House: The world will be completed once you get married and have two kids. Pairs well with Friendsanity.
    # Greatest Walnut Hunter: The world will be completed once you find all 130 Golden Walnuts
    # Perfection: The world will be completed once you attain Perfection, based on the vanilla definition.
    community_center: 50
    grandpa_evaluation: 0
    bottom_of_the_mines: 0
    cryptic_note: 0
    master_angler: 0
    complete_collection: 0
    full_house: 0
    greatest_walnut_hunter: 0
    perfection: 0

  starting_money:
    # Amount of gold when arriving at the farm.
    # Set to -1 or unlimited for infinite money in this playthrough
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 50000
    random: 0
    random-low: 0
    random-high: 0
    unlimited: 0 # equivalent to -1
    vanilla: 0 # equivalent to 500
    extra: 0 # equivalent to 2000
    rich: 50 # equivalent to 5000
    very rich: 0 # equivalent to 20000
    filthy rich: 0 # equivalent to 50000

  profit_margin:
    # Multiplier over all gold earned in-game by the player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 400
    random: 0
    random-low: 0
    random-high: 0
    quarter: 0 # equivalent to 25
    half: 0 # equivalent to 50
    normal: 50 # equivalent to 100
    double: 0 # equivalent to 200
    triple: 0 # equivalent to 300
    quadruple: 0 # equivalent to 400

  bundle_randomization:
    # What items are needed for the community center bundles?
    # Vanilla: Standard bundles from the vanilla game
    # Thematic: Every bundle will require random items compatible with their original theme
    # Shuffled: Every bundle will require random items and follow no particular structure
    vanilla: 0
    thematic: 50
    shuffled: 0

  bundle_price:
    # How many items are needed for the community center bundles?
    # Very Cheap: Every bundle will require 2 items fewer than usual
    # Cheap: Every bundle will require 1 item fewer than usual
    # Normal: Every bundle will require the vanilla number of items
    # Expensive: Every bundle will require 1 extra item when applicable
    very_cheap: 0
    cheap: 0
    normal: 50
    expensive: 0

  entrance_randomization:
    # Should area entrances be randomized?
    # Disabled: No entrance randomization is done
    # Pelican Town: Only buildings in the main town area are randomized among each other
    # Non Progression: Only buildings that are always available are randomized with each other
    # Buildings: All Entrances that Allow you to enter a building using a door are randomized with each other
    # Chaos: Same as above, but the entrances get reshuffled every single day!
    disabled: 50
    pelican_town: 0
    non_progression: 0
    buildings: 0
    chaos: 0

  season_randomization:
    # Should seasons be randomized?
    # All settings allow you to choose which season you want to play next (from those unlocked) at the end of a season.
    # Disabled: You will start in Spring with all seasons unlocked.
    # Randomized: The seasons will be unlocked randomly as Archipelago items.
    # Randomized Not Winter: The seasons are randomized, but you're guaranteed not to start with winter.
    # Progressive: You will start in Spring and unlock the seasons in their original order.
    disabled: 0
    randomized: 50
    randomized_not_winter: 0
    progressive: 0

  cropsanity:
    # Formerly named "Seed Shuffle"
    # Pierre now sells a random amount of seasonal seeds and Joja sells them without season requirements, but only in huge packs.
    # Disabled: All the seeds are unlocked from the start, there are no location checks for growing and harvesting crops
    # Shuffled: Seeds are unlocked as archipelago item, for each seed there is a location check for growing and harvesting that crop
    disabled: 0
    shuffled: 50

  backpack_progression:
    # How is the backpack progression handled?
    # Vanilla: You can buy them at Pierre's General Store.
    # Progressive: You will randomly find Progressive Backpack upgrades.
    # Early Progressive: You can expect your first Backpack in sphere 1.
    vanilla: 0
    progressive: 0
    early_progressive: 50

  tool_progression:
    # How is the tool progression handled?
    # Vanilla: Clint will upgrade your tools with ore.
    # Progressive: You will randomly find Progressive Tool upgrades.
    vanilla: 0
    progressive: 50

  skill_progression:
    # How is the skill progression handled?
    # Vanilla: You will level up and get the normal reward at each level.
    # Progressive: The xp will be earned internally, locations will be sent when you earn a level. Your real
    #     levels will be scattered around the multiworld.
    vanilla: 0
    progressive: 50

  building_progression:
    # How is the building progression handled?
    # Vanilla: You will buy each building normally.
    # Progressive: You will receive the buildings and will be able to build the first one of each type for free,
    #     once it is received. If you want more of the same building, it will cost the vanilla price.
    # Progressive early shipping bin: You can expect your shipping bin in sphere 1.
    vanilla: 0
    progressive: 0
    progressive_early_shipping_bin: 50

  festival_locations:
    # Locations for attending and participating in festivals
    # With Disabled, you do not need to attend festivals
    # With Easy, there are checks for participating in festivals
    # With Hard, the festival checks are only granted when the player performs well in the festival
    disabled: 0
    easy: 50
    hard: 0

  elevator_progression:
    # How is Elevator progression handled?
    # Vanilla: You will unlock new elevator floors for yourself.
    # Progressive: You will randomly find Progressive Mine Elevators to go deeper. Locations are sent for reaching
    #     every elevator level.
    # Progressive from previous floor: Same as progressive, but you must reach elevator floors on your own,
    #     you cannot use the elevator to check elevator locations
    vanilla: 0
    progressive: 0
    progressive_from_previous_floor: 50

  arcade_machine_locations:
    # How are the Arcade Machines handled?
    # Disabled: The arcade machines are not included in the Archipelago shuffling.
    # Victories: Each Arcade Machine will contain one check on victory
    # Victories Easy: The arcade machines are both made considerably easier to be more accessible for the average
    #     player.
    # Full Shuffling: The arcade machines will contain multiple checks each, and different buffs that make the game
    #     easier are in the item pool. Junimo Kart has one check at the end of each level.
    #     Journey of the Prairie King has one check after each boss, plus one check for each vendor equipment.
    disabled: 0
    victories: 0
    victories_easy: 0
    full_shuffling: 50

  special_order_locations:
    # How are the Special Orders handled?
    # Disabled: The special orders are not included in the Archipelago shuffling.
    # Board Only: The Special Orders on the board in town are location checks
    # Board and Qi: The Special Orders from Qi's walnut room are checks, as well as the board in town
    disabled: 0
    board_only: 50
    board_qi: 0

  help_wanted_locations:
    # How many "Help Wanted" quests need to be completed as Archipelago Locations
    # Out of every 7 quests, 4 will be item deliveries, and then 1 of each for: Fishing, Gathering and Slaying Monsters.
    # Choosing a multiple of 7 is recommended.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 56
    random: 0
    random-low: 0
    random-high: 0
    none: 0 # equivalent to 0
    minimum: 50 # equivalent to 7
    normal: 0 # equivalent to 14
    lots: 0 # equivalent to 28
    maximum: 0 # equivalent to 56

  fishsanity:
    # Locations for catching fish?
    # None: There are no locations for catching fish
    # Legendaries: Each of the 5 legendary fish are checks
    # Special: A curated selection of strong fish are checks
    # Randomized: A random selection of fish are checks
    # All: Every single fish in the game is a location that contains an item. Pairs well with the Master Angler Goal
    # Exclude Legendaries: Every fish except legendaries
    # Exclude Hard Fish: Every fish under difficulty 80
    # Only Easy Fish: Every fish under difficulty 50
    none: 50
    legendaries: 0
    special: 0
    randomized: 0
    all: 0
    exclude_legendaries: 0
    exclude_hard_fish: 0
    only_easy_fish: 0

  museumsanity:
    # Locations for museum donations?
    # None: There are no locations for donating artifacts and minerals to the museum
    # Milestones: The donation milestones from the vanilla game are checks
    # Randomized: A random selection of minerals and artifacts are checks
    # All: Every single donation will be a check
    none: 0
    milestones: 50
    randomized: 0
    all: 0

  friendsanity:
    # Locations for friendships?
    # None: There are no checks for befriending villagers
    # Bachelors: Each heart of a bachelor is a check
    # Starting NPCs: Each heart for npcs that are immediately available is a check
    # All: Every heart with every NPC is a check, including Leo, Kent, Sandy, etc
    # All With Marriage: Marriage candidates must also be dated, married, and befriended up to 14 hearts.
    none: 50
    bachelors: 0
    starting_npcs: 0
    all: 0
    all_with_marriage: 0

  friendsanity_heart_size:
    # If using friendsanity, how many hearts are received per item, and how many hearts must be earned to send a check
    # A higher value will lead to fewer heart items in the item pool, reducing bloat
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 8
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  movement_buff_number:
    # Number of movement speed buffs to the player that exist as items in the pool.
    # Each movement speed buff is a +25% multiplier that stacks additively
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  luck_buff_number:
    # Number of luck buffs to the player that exist as items in the pool.
    # Each luck buff is a bonus to daily luck of 0.025
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  exclude_ginger_island:
    # Exclude Ginger Island?
    # This option will forcefully exclude everything related to Ginger Island from the slot.
    # If you pick a goal that requires Ginger Island, you cannot exclude it and it will get included anyway
    false: 50
    true: 0

  trap_items:
    # When rolling filler items, including resource packs, the game can also roll trap items.
    # This setting is for choosing if traps will be in the item pool, and if so, how punishing they will be.
    no_traps: 0
    easy: 0
    medium: 50
    hard: 0
    hell: 0
    nightmare: 0

  multiple_day_sleep_enabled:
    # Enable the ability to sleep automatically for multiple days straight?
    false: 0
    true: 50

  multiple_day_sleep_cost:
    # How much gold it will cost to use MultiSleep. You will have to pay that amount for each day skipped.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 200
    random: 0
    random-low: 0
    random-high: 0
    free: 50 # equivalent to 0
    cheap: 0 # equivalent to 25
    medium: 0 # equivalent to 50
    expensive: 0 # equivalent to 100

  experience_multiplier:
    # How fast you want to earn skill experience. A lower setting mean less experience.
    # A higher setting means more experience.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 800
    random: 0
    random-low: 0
    random-high: 0
    half: 0 # equivalent to 50
    vanilla: 0 # equivalent to 100
    double: 50 # equivalent to 200
    triple: 0 # equivalent to 300
    quadruple: 0 # equivalent to 400

  friendship_multiplier:
    # How fast you want to earn friendship points with villagers.
    # A lower setting mean less friendship per action.
    # A higher setting means more friendship per action.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 800
    random: 0
    random-low: 0
    random-high: 0
    half: 0 # equivalent to 50
    vanilla: 0 # equivalent to 100
    double: 50 # equivalent to 200
    triple: 0 # equivalent to 300
    quadruple: 0 # equivalent to 400

  debris_multiplier:
    # How much debris will spawn on the player's farm?
    # Vanilla: debris spawns normally
    # Half: debris will spawn at half the normal rate
    # Quarter: debris will spawn at one quarter of the normal rate
    # None: No debris will spawn on the farm, ever
    # Start Clear: debris will spawn at the normal rate, but the farm will be completely clear when starting the game
    vanilla: 0
    half: 50
    quarter: 0
    none: 0
    start_clear: 0

  quick_start:
    # Do you want the quick start package? You will get a few items to help early game automation,
    # so you can use the multiple day sleep at its maximum.
    false: 0
    true: 50

  gifting:
    # Do you want to enable gifting items to and from other Stardew Valley worlds?
    false: 0
    true: 50

  mods:
    # List of mods that will be considered for shuffling.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


Rogue Legacy:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  starting_gender:
    # Determines the gender of your initial 'Sir Lee' character.
    sir: 0
    lady: 0
    random: 50

  starting_class:
    # Determines the starting class of your initial 'Sir Lee' character.
    knight: 50
    mage: 50
    barbarian: 50
    knave: 50
    shinobi: 50
    miner: 50
    spellthief: 50
    lich: 50

  available_classes:
    # List of classes that will be in the item pool to find. The upgraded form of the class will be added with it.
    # The upgraded form of your starting class will be available regardless.
    ['Shinobi', 'Lich', 'Knave', 'Spellthief', 'Knight', 'Mage', 'Traitor', 'Miner', 'Barbarian', 'Dragon']

  new_game_plus:
    # Puts the castle in new game plus mode which vastly increases enemy level, but increases gold gain by 50%. Not
    # recommended for those inexperienced to Rogue Legacy!
    normal: 50
    new_game_plus: 0
    new_game_plus_2: 0

  fairy_chests_per_zone:
    # Determines the number of Fairy Chests in a given zone that contain items. After these have been checked, only stat
    # bonuses can be found in Fairy Chests.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  chests_per_zone:
    # Determines the number of Non-Fairy Chests in a given zone that contain items. After these have been checked, only
    # gold or stat bonuses can be found in Chests.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 20
    # Maximum value is 50
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  universal_fairy_chests:
    # Determines if fairy chests should be combined into one pool instead of per zone, similar to Risk of Rain 2.
    false: 0
    true: 50

  universal_chests:
    # Determines if non-fairy chests should be combined into one pool instead of per zone, similar to Risk of Rain 2.
    false: 50
    true: 0

  vendors:
    # Determines where to place the Blacksmith and Enchantress unlocks in logic (or start with them unlocked).
    start_unlocked: 0
    early: 50
    normal: 0
    anywhere: 0

  architect:
    # Determines where the Architect sits in the item pool.
    start_unlocked: 0
    early: 0
    anywhere: 50
    disabled: 0

  architect_fee:
    # Determines how large of a percentage the architect takes from the player when utilizing his services. 100 means he
    # takes all your gold. 0 means his services are free.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  disable_charon:
    # Prevents Charon from taking your money when you re-enter the castle. Also removes Haggling from the Item Pool.
    false: 0
    true: 30

  require_purchasing:
    # Determines where you will be required to purchase equipment and runes from the Blacksmith and Enchantress before
    # equipping them. If you disable require purchasing, Manor Renovations are scaled to take this into account.
    false: 30
    true: 0

  progressive_blueprints:
    # Instead of shuffling blueprints randomly into the pool, blueprint unlocks are progressively unlocked. You would get
    # Squire first, then Knight, etc., until finally Dark.
    false: 50
    true: 0

  gold_gain_multiplier:
    # Adjusts the multiplier for gaining gold from all sources.
    normal: 0
    quarter: 0
    half: 0
    double: 50
    quadruple: 0

  number_of_children:
    # Determines the number of offspring you can choose from on the lineage screen after a death.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    3: 0
    random: 50
    random-low: 0
    random-high: 0

  free_diary_on_generation:
    # Allows the player to get a free diary check every time they regenerate the castle in the starting room.
    false: 0
    true: 50

  khidr:
    # Determines if Neo Khidr replaces Khidr in their boss room.
    vanilla: 50
    challenge: 0

  alexander:
    # Determines if Alexander the IV replaces Alexander in their boss room.
    vanilla: 50
    challenge: 0

  leon:
    # Determines if Ponce de Freon replaces Ponce de Leon in their boss room.
    vanilla: 50
    challenge: 0

  herodotus:
    # Determines if Astrodotus replaces Herodotus in their boss room.
    vanilla: 50
    challenge: 0

  health_pool:
    # Determines the number of Health Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  mana_pool:
    # Determines the number of Mana Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  attack_pool:
    # Determines the number of Attack Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  magic_damage_pool:
    # Determines the number of Magic Damage Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  armor_pool:
    # Determines the number of Armor Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  equip_pool:
    # Determines the number of Equip Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  crit_chance_pool:
    # Determines the number of Crit Chance Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  crit_damage_pool:
    # Determines the number of Crit Damage Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  allow_default_names:
    # Determines if the default names defined in the vanilla game are allowed to be used. Warning: Your world will not
    # generate if the number of Additional Names defined is less than the Number of Children value.
    false: 0
    true: 50

  additional_lady_names:
    # Set of additional names your potential offspring can have. If Allow Default Names is disabled, this is the only list
    # of names your children can have. The first value will also be your initial character's name depending on Starting
    # Gender.
    []

  additional_sir_names:
    # Set of additional names your potential offspring can have. If Allow Default Names is disabled, this is the only list
    # of names your children can have. The first value will also be your initial character's name depending on Starting
    # Gender.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


Muse Dash:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    [Music Sheet]

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  allow_just_as_planned_dlc_songs:
    # Whether 'Just as Planned DLC' songs, and all the DLCs along with it, will be included in the randomizer.
    false: 0
    true: 50

  streamer_mode_enabled:
    # In Muse Dash, an option named 'Streamer Mode' removes songs which may trigger copyright issues when streaming.
    # If this is enabled, only songs available under Streamer Mode will be available for randomization.
    false: 50
    true: 0

  starting_song_count:
    # The number of songs that will be automatically unlocked at the start of a run.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  additional_song_count:
    # The total number of songs that will be placed in the randomization pool.
    # - This does not count any starting songs or the goal song.
    # - The final song count may be lower due to other settings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 500
    45: 50
    random: 0
    random-low: 0
    random-high: 0

  additional_item_percentage:
    # The percentage of songs that will have 2 items instead of 1 when completing them.
    # - Starting Songs will always have 2 items.
    # - Locations will be filled with duplicate songs if there are not enough items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    #80: 50
    random: 50
    random-low: 0
    random-high: 0

  song_difficulty_mode:
    # Ensures that at any chosen song has at least 1 value falling within these values.
    # - Any: All songs are available
    # - Easy: 1, 2 or 3
    # - Medium: 4, 5
    # - Hard: 6, 7
    # - Expert: 8, 9
    # - Master: 10+
    # - Manual: Uses the provided minimum and maximum range.
    any: 0
    easy: 0
    medium: 0
    hard: 0
    expert: 0
    master: 0
    manual: 50

  song_difficulty_min:
    # Ensures that 1 difficulty has at least 1 this value or higher per song.
    # - Difficulty Mode must be set to Manual.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  song_difficulty_max:
    # Ensures that 1 difficulty has at least 1 this value or lower per song.
    # - Difficulty Mode must be set to Manual.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  grade_needed:
    # Completing a song will require a grade of this value or higher in order to unlock items.
    # The grades are as follows:
    # - Silver S (SS): >= 95% accuracy
    # - Pink S (S): >= 90% accuracy
    # - A: >= 80% or a Full Combo
    # - B: >= 70%
    # - C: >= 60%
    any: 0
    c: 0
    b: 0
    a: 50
    pinks: 0
    silvers: 0

  music_sheet_count_percentage:
    # Collecting enough Music Sheets will unlock the goal song needed for completion.
    # This option controls how many are in the item pool, based on the total number of songs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 40
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  music_sheet_win_count_percentage:
    # The percentage of Music Sheets in the item pool that are needed to unlock the winning song.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    75: 50
    random: 0
    random-low: 0
    random-high: 0

  available_trap_types:
    # This controls the types of traps that can be added to the pool.
    # - VFX Traps consist of visual effects that play over the song. (i.e. Grayscale.)
    # - SFX Traps consist of changing your sfx setting to one possibly more annoying sfx.
    # Traps last the length of a song, or until you die.
    # Note: SFX traps are only available with Just As Planned dlc songs.
    none: 0
    vfx: 0
    sfx: 0
    all: 50

  trap_count_percentage:
    # This controls how many traps to add into the pool, based the total number of songs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 35
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  include_songs:
    # Any song listed here will be guaranteed to be included as part of the seed.
    # - Difficulty options will be skipped for these songs.
    # - If there being too many included songs, songs will be randomly chosen without regard for difficulty.
    # - If you want these songs immediately, use start_inventory instead.
    []

  exclude_songs:
    # Any song listed here will be excluded from being a part of the seed.
    []


Terraria:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    25: 50
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    - Hardmode

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    - Heliophobia

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # The victory condition for your run. Stuff after the goal will not be shuffled.
    mechanical_bosses: 0
    plantera: 50
    golem: 0
    empress_of_light: 0
    lunatic_cultist: 0
    moon_lord: 0
    zenith: 0

  achievements:
    # Adds checks upon collecting achievements. Achievements for clearing bosses and events are excluded.
    # "Exclude Grindy" also excludes fishing achievements.
    none: 0
    exclude_grindy: 50
    exclude_fishing: 0
    all: 0

  fill_extra_checks_with:
    # Applies if you have achievements enabled. "Useful Items" helps to make the early game less grindy.
    # Items are rewarded to all players in your Terraria world.
    coins: 0
    useful_items: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


Undertale:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    #30: 50
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  route_required:
    # Main route of the game required to win.
    neutral: 10
    pacifist: 10
    genocide: 10
    all_routes: 0

  starting_area:
    # Which area to start with access to.
    ruins: 50
    snowdin: 50
    waterfall: 50
    hotland: 50
    core: 0

  key_hunt:
    # Adds Key Pieces to the item pool, you need all of them to enter the last corridor.
    false: 50
    true: 0

  key_pieces:
    # How many Key Pieces are added to the pool, only matters with Key Piece Hunt enabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  rando_love:
    # Adds LOVE to the pool. Only matters if your goal includes Genocide route
    false: 0
    true: 50

  rando_stats:
    # Makes each stat increase from LV a separate item. Only matters if your goal includes Genocide route
    # Warning: This tends to spam chat with sending out checks.
    false: 0
    true: 10

  temy_include:
    # Adds Temmy Armor to the item pool.
    false: 0
    true: 50

  no_equips:
    # Removes all equippable items.
    false: 50
    true: 0

  only_flakes:
    # Replaces all non-required items, except equipment, with Temmie Flakes.
    false: 50
    true: 0

  prog_armor:
    # Makes the armor progressive.
    false: 50
    true: 0

  prog_weapons:
    # Makes the weapons progressive.
    false: 50
    true: 0

  rando_item_button:
    # Turns the ITEM button in battle into an item you have to receive.
    false: 50
    true: 0


DLCQuest:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  double_jump_glitch:
    # Whether to include the double jump glitches in logic. Separated between the simple ones and the very difficult ones
    none: 50
    simple: 0
    all: 0

  coinsanity:
    # Whether collecting coins are checks
    # If none, you will collect your own coins
    none: 0
    coin: 50

  coinbundlequantity:
    # This is the amount of coins in a coin bundle
    # You need to collect that number of coins to get a location check, and when receiving coin items, you will get bundles of this size
    # It is highly recommended to not set this value below 10, as it generates a very large number of boring locations and items.
    # In the worst case, it is 1500+ checks for a single coin
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    low: 0 # equivalent to 5
    normal: 50 # equivalent to 20
    high: 0 # equivalent to 50

  time_is_money:
    # Whether the Time is Money pack is considered required to complete the grindstone.
    # If optional, you may be expected to grind 10 000 times by hand
    required: 50
    optional: 0

  ending_choice:
    # Which ending is considered completion for the DLC Quest campaign, either any ending or the true ending
    any: 50
    true: 0

  campaign:
    # Which campaign you want to play
    basic: 0
    live_freemium_or_die: 0
    both: 50

  item_shuffle:
    # Should Inventory Items be separate from their DLCs and shuffled in the item pool
    disabled: 50
    shuffled: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0


DOOM 1993:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  # start_inventory_from_pool:
  # # Start with these items and don't place them in the world.
  # # The game decides what the replacement items will be.
  #   - Military Base (E1M9): 1
  #   - Hangar (E1M1): 1
  #   - Nuclear Plant (E1M2): 1
  #   - Toxin Refinery (E1M3): 1
  #   - Command Control (E1M4): 1
  #   - Phobos Lab (E1M5): 1
  #   - Central Processing (E1M6): 1
  #   - Phobos Anomaly (E1M8): 1
  #   - Computer Station (E1M7): 1

  goal:
  # Choose the main goal.
  # complete_all_levels: All levels of the selected episodes
  # complete_boss_levels: Boss levels (E#M8) of selected episodes
    complete_all_levels: 50
    complete_boss_levels: 0


  difficulty:
    # Choose the difficulty option. Those match DOOM's difficulty options.
    # baby (I'm too young to die.) double ammos, half damage, less monsters or strength.
    # easy (Hey, not too rough.) less monsters or strength.
    # medium (Hurt me plenty.) Default.
    # hard (Ultra-Violence.) More monsters or strength.
    # nightmare (Nightmare!) Monsters attack more rapidly and respawn.
    baby: 0
    easy: 0
    medium: 50
    hard: 0
    nightmare: 0

  random_monsters:
    # Choose how monsters are randomized.
    # vanilla: No randomization
    # shuffle: Monsters are shuffled within the level
    # random_balanced: Monsters are completely randomized, but balanced based on existing ratio in the level. (Small monsters vs medium vs big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_pickups:
    # Choose how pickups are randomized.
    # vanilla: No randomization
    # shuffle: Pickups are shuffled within the level
    # random_balanced: Pickups are completely randomized, but balanced based on existing ratio in the level. (Small pickups vs Big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_music:
    # Level musics will be randomized.
    # vanilla: No randomization
    # shuffle_selected: Selected episodes' levels will be shuffled
    # shuffle_game: All the music will be shuffled
    vanilla: 0
    shuffle_selected: 0
    shuffle_game: 50

  flip_levels:
    # Flip levels on one axis.
    # vanilla: No flipping
    # flipped: All levels are flipped
    # randomly_flipped: Random levels are flipped
    vanilla: 50
    flipped: 0
    randomly_flipped: 0

  allow_death_logic:
    # Some locations require a timed puzzle that can only be tried once.
    # After which, if the player failed to get it, the location cannot be checked anymore.
    # By default, no progression items are placed here. There is a way, hovewer, to still get them:
    # Get killed in the current map. The map will reset, you can now attempt the puzzle again.
    false: 50
    true: 0

  pro:
    # Include difficult tricks into rules. Mostly employed by speed runners.
    # i.e.: Leaps across to a locked area, trigger a switch behind a window at the right angle, etc.
    false: 50
    true: 0

  start_with_computer_area_maps:
    # Give the player all Computer Area Map items from the start.
    false: 0
    true: 60

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  reset_level_on_death:
    # When dying, levels are reset and monsters respawned. But inventory and checks are kept.
    # Turning this setting off is considered easy mode. Good for new players that don't know the levels well.
    false: 50
    true: 0

  episode1:
    # Knee-Deep in the Dead.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode2:
    # The Shores of Hell.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode3:
    # Inferno.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode4:
    # Thy Flesh Consumed.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50



DOOM II:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  difficulty:
    # Choose the difficulty option. Those match DOOM's difficulty options.
    # baby (I'm too young to die.) double ammos, half damage, less monsters or strength.
    # easy (Hey, not too rough.) less monsters or strength.
    # medium (Hurt me plenty.) Default.
    # hard (Ultra-Violence.) More monsters or strength.
    # nightmare (Nightmare!) Monsters attack more rapidly and respawn.
    baby: 0
    easy: 0
    medium: 50
    hard: 0
    nightmare: 0

  random_monsters:
    # Choose how monsters are randomized.
    # vanilla: No randomization
    # shuffle: Monsters are shuffled within the level
    # random_balanced: Monsters are completely randomized, but balanced based on existing ratio in the level. (Small monsters vs medium vs big)
    # random_chaotic: Monsters are completely randomized, but balanced based on existing ratio in the entire game.
    vanilla: 0
    shuffle: 0
    random_balanced: 50
    random_chaotic: 0

  random_pickups:
    # Choose how pickups are randomized.
    # vanilla: No randomization
    # shuffle: Pickups are shuffled within the level
    # random_balanced: Pickups are completely randomized, but balanced based on existing ratio in the level. (Small pickups vs Big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_music:
    # Level musics will be randomized.
    # vanilla: No randomization
    # shuffle_selected: Selected episodes' levels will be shuffled
    # shuffle_game: All the music will be shuffled
    vanilla: 0
    shuffle_selected: 0
    shuffle_game: 50

  flip_levels:
    # Flip levels on one axis.
    # vanilla: No flipping
    # flipped: All levels are flipped
    # random: Random levels are flipped
    vanilla: 50
    flipped: 0
    randomly_flipped: 0

  allow_death_logic:
    # Some locations require a timed puzzle that can only be tried once.
    # After which, if the player failed to get it, the location cannot be checked anymore.
    # By default, no progression items are placed here. There is a way, hovewer, to still get them:
    # Get killed in the current map. The map will reset, you can now attempt the puzzle again.
    false: 50
    true: 0

  pro:
    # Include difficult tricks into rules. Mostly employed by speed runners.
    # i.e.: Leaps across to a locked area, trigger a switch behind a window at the right angle, etc.
    false: 50
    true: 0

  start_with_computer_area_maps:
    # Give the player all Computer Area Map items from the start.
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  reset_level_on_death:
    # When dying, levels are reset and monsters respawned. But inventory and checks are kept.
    # Turning this setting off is considered easy mode. Good for new players that don't know the levels well.
    false: 50
    true: 0

  episode1:
    # Subterranean and Outpost.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode2:
    # City.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode3:
    # Hell.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 50
    true: 0

  episode4:
    # Secret levels.
    # This is too short to be an episode. It's additive.
    # Another episode will have to be selected along with this one.
    # Otherwise episode 1 will be added.
    false: 50
    true: 0



Heretic:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  goal:
    # Choose the main goal.
    # complete_all_levels: All levels of the selected episodes
    # complete_boss_levels: Boss levels (E#M8) of selected episodes
    complete_all_levels: 50
    complete_boss_levels: 0

  difficulty:
    # Choose the difficulty option. Those match DOOM's difficulty options.
    # baby (I'm too young to die.) double ammos, half damage, less monsters or strength.
    # easy (Hey, not too rough.) less monsters or strength.
    # medium (Hurt me plenty.) Default.
    # hard (Ultra-Violence.) More monsters or strength.
    # nightmare (Nightmare!) Monsters attack more rapidly and respawn.
    # 
    # wet nurse (hou needeth a wet-nurse) - Fewer monsters and more items than medium. Damage taken is halved, and ammo pickups carry twice as much ammo. Any Quartz Flasks and Mystic Urns are automatically used when the player nears death.
    # easy (Yellowbellies-r-us) - Fewer monsters and more items than medium.
    # medium (Bringest them oneth) - Completely balanced, this is the standard difficulty level.
    # hard (Thou art a smite-meister) - More monsters and fewer items than medium.
    # black plague (Black plague possesses thee) - Same as hard, but monsters and their projectiles move much faster. Cheating is also disabled.
    wet_nurse: 0
    easy: 0
    medium: 50
    hard: 0
    black_plague: 0

  random_monsters:
    # Choose how monsters are randomized.
    # vanilla: No randomization
    # shuffle: Monsters are shuffled within the level
    # random_balanced: Monsters are completely randomized, but balanced based on existing ratio in the level. (Small monsters vs medium vs big)
    # random_chaotic: Monsters are completely randomized, but balanced based on existing ratio in the entire game.
    vanilla: 0
    shuffle: 50
    random_balanced: 0
    random_chaotic: 0

  random_pickups:
    # Choose how pickups are randomized.
    # vanilla: No randomization
    # shuffle: Pickups are shuffled within the level
    # random_balanced: Pickups are completely randomized, but balanced based on existing ratio in the level. (Small pickups vs Big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_music:
    # Level musics will be randomized.
    # vanilla: No randomization
    # shuffle_selected: Selected episodes' levels will be shuffled
    # shuffle_game: All the music will be shuffled
    vanilla: 50
    shuffle_selected: 0
    shuffle_game: 0

  allow_death_logic:
    # Some locations require a timed puzzle that can only be tried once.
    # After which, if the player failed to get it, the location cannot be checked anymore.
    # By default, no progression items are placed here. There is a way, hovewer, to still get them:
    # Get killed in the current map. The map will reset, you can now attempt the puzzle again.
    false: 50
    true: 0

  pro:
    # Include difficult tricks into rules. Mostly employed by speed runners.
    # i.e.: Leaps across to a locked area, trigger a switch behind a window at the right angle, etc.
    false: 50
    true: 0

  check_sanity:
    # Include redundant checks. This increase total check count for the game.
    # i.e.: In a room, there might be 3 checks close to each other. By default, two of them will be remove.
    # This was done to lower the total count check for Heretic, as it is quite high compared to other games.
    # Check Sanity restores original checks.
    false: 50
    true: 0

  start_with_map_scrolls:
    # Give the player all Map Scroll items from the start.
    false: 50
    true: 0

  reset_level_on_death:
    # When dying, levels are reset and monsters respawned. But inventory and checks are kept.
    # Turning this setting off is considered easy mode. Good for new players that don't know the levels well.
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  episode1:
    # City of the Damned.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode2:
    # Hell's Maw.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode3:
    # The Dome of D'Sparil.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode4:
    # The Ossuary.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 50
    true: 0

  episode5:
    # The Stagnant Demesne.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 50
    true: 0


Pokemon Emerald:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Determines what your goal is to consider the game beaten
    # 
    # Champion: Become the champion and enter the hall of fame
    # Steven: Defeat Steven in Meteor Falls
    # Norman: Defeat Norman in Petalburg Gym
    # Legendary Hunt: Defeat or catch legendary pokemon (or whatever was randomized into their encounters)
    champion: 50
    steven: 0
    norman: 0
    legendary_hunt: 0

  badges:
    # Adds Badges to the pool
    # 
    # Vanilla: Gym leaders give their own badge
    # Shuffle: Gym leaders give a random badge
    # Completely Random: Badges can be found anywhere
    vanilla: 0
    shuffle: 0
    completely_random: 50

  hms:
    # Adds HMs to the pool
    # 
    # Vanilla: HMs are at their vanilla locations
    # Shuffle: HMs are shuffled among vanilla HM locations
    # Completely Random: HMs can be found anywhere
    vanilla: 0
    shuffle: 0
    completely_random: 50

  key_items:
    # Adds most key items to the pool. These are usually required to unlock
    # a location or region (e.g. Devon Scope, Letter, Basement Key)
    false: 0
    true: 50

  bikes:
    # Adds the mach bike and acro bike to the pool
    false: 50
    true: 0

  event_tickets:
    # Adds the event tickets to the pool, which let you access legendaries by sailing from Lilycove
    false: 50
    true: 0

  rods:
    # Adds fishing rods to the pool
    false: 50
    true: 0

  overworld_items:
    # Adds items on the ground with a Pokeball sprite to the pool
    false: 0
    true: 50

  hidden_items:
    # Adds hidden items to the pool
    false: 50
    true: 0

  npc_gifts:
    # Adds most gifts received from NPCs to the pool (not including key items or HMs)
    false: 50
    true: 0

  berry_trees:
    # Adds berry trees to the pool. Empty soil patches are converted to locations and contribute Sitrus Berries to the pool.
    false: 50
    true: 0

  dexsanity:
    # Adding a "caught" pokedex entry gives you an item (catching, evolving, trading, etc.).
    # 
    # Defeating gym leaders provides dex info, allowing you to see where on the map you can catch species you need.
    # 
    # Each pokedex entry adds a Poke Ball, Great Ball, or Ultra Ball to the pool.
    false: 50
    true: 0

  trainersanity:
    # Defeating a trainer for the first time gives you an item. Trainers are no longer missable.
    # 
    # Trainers no longer give you money for winning. Each trainer adds a valuable item (nugget, stardust, etc.) to the pool.
    false: 50
    true: 0

  item_pool_type:
    # Determines which non-progression items get put into the item pool
    # 
    # Shuffled: Item pool consists of shuffled vanilla items
    # Diverse Balanced: Item pool consists of random items approximately proportioned
    # according to what they're replacing (i.e. more pokeballs, fewer X items, etc.)
    # Diverse: Item pool consists of uniformly random (non-unique) items
    shuffled: 50
    diverse_balanced: 0
    diverse: 0

  require_itemfinder:
    # The Itemfinder is logically required to pick up hidden items
    false: 0
    true: 50

  require_flash:
    # Determines whether HM05 Flash is logically required to navigate a dark cave
    neither: 0
    only_granite_cave: 0
    only_victory_road: 0
    both: 50

  elite_four_requirement:
    # Sets the requirements to challenge the elite four
    # 
    # Badges: Obtain some number of badges
    # Gyms: Defeat some number of gyms
    badges: 50
    gyms: 0

  elite_four_count:
    # Sets the number of badges/gyms required to challenge the elite four
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  norman_requirement:
    # Sets the requirements to challenge the Petalburg Gym
    # 
    # Badges: Obtain some number of badges
    # Gyms: Defeat some number of gyms
    badges: 50
    gyms: 0

  norman_count:
    # Sets the number of badges/gyms required to challenge the Petalburg Gym
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  legendary_hunt_catch:
    # Sets whether legendaries need to be caught to satisfy the Legendary Hunt win condition. Defeated legendaries can be respawned by defeating the Elite 4.
    false: 50
    true: 0

  legendary_hunt_count:
    # Sets the number of legendaries that must be caught/defeated for the Legendary Hunt goal
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 12
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  allowed_legendary_hunt_encounters:
    # Sets which legendary encounters can contribute to the Legendary Hunt goal.
    # 
    # Latios will always be the roamer. Latias will always be at Southern Island.
    # 
    # Possible values are:
    # "Groudon"
    # "Kyogre"
    # "Rayquaza"
    # "Latios"
    # "Latias"
    # "Regirock"
    # "Registeel"
    # "Regice"
    # "Ho-oh"
    # "Lugia"
    # "Deoxys"
    # "Mew"
    ['Ho-oh', 'Registeel', 'Latios', 'Groudon', 'Lugia', 'Kyogre', 'Mew', 'Regirock', 'Deoxys', 'Regice', 'Rayquaza', 'Latias']

  wild_pokemon:
    # Randomizes wild pokemon encounters (grass, caves, water, fishing)
    # 
    # Vanilla: Wild encounters are unchanged
    # Match Base Stats: Wild pokemon are replaced with species with approximately the same bst
    # Match Type: Wild pokemon are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 50
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 0

  wild_encounter_blacklist:
    # Prevents listed species from appearing in the wild when wild encounters are randomized.
    # 
    # May be overridden if enforcing other restrictions in combination with this blacklist is impossible.
    # 
    # Use "_Legendaries" as a shortcut for legendary pokemon.
    []

  starters:
    # Randomizes the starter pokemon in Professor Birch's bag
    # 
    # Vanilla: Starters are unchanged
    # Match Base Stats: Starters are replaced with species with approximately the same bst
    # Match Type: Starters are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 50
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 0

  starter_blacklist:
    # Prevents listed species from appearing as starters when starters are randomized.
    # 
    # May be overridden if enforcing other restrictions in combination with this blacklist is impossible.
    # 
    # Use "_Legendaries" as a shortcut for legendary pokemon.
    []

  trainer_parties:
    # Randomizes the parties of all trainers.
    # 
    # Vanilla: Parties are unchanged
    # Match Base Stats: Trainer pokemon are replaced with species with approximately the same bst
    # Match Type: Trainer pokemon are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 50
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 0

  trainer_party_blacklist:
    # Prevents listed species from appearing in opponent trainers' parties if opponent parties are randomized.
    # 
    # May be overridden if enforcing other restrictions in combination with this blacklist is impossible.
    # 
    # Use "_Legendaries" as a shortcut for legendary pokemon.
    []

  force_fully_evolved:
    # When an opponent uses a pokemon of the specified level or higher, restricts the species to only fully evolved pokemon.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  legendary_encounters:
    # Randomizes legendary encounters (Rayquaza, Regice, Latias, etc.). The roamer will always be Latios during legendary hunts.
    # 
    # Vanilla: Legendary encounters are unchanged
    # Shuffle: Legendary encounters are shuffled between each other
    # Match Base Stats: Legendary encounters are replaced with species with approximately the same bst
    # Match Type: Legendary encounters are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 50
    shuffle: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 0

  misc_pokemon:
    # Randomizes non-legendary static encounters. May grow to include other pokemon like trades or gifts.
    # 
    # Vanilla: Species are unchanged
    # Shuffle: Species are shuffled between each other
    # Match Base Stats: Species are replaced with species with approximately the same bst
    # Match Type: Species are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 50
    shuffle: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 0

  types:
    # Randomizes the type(s) of every pokemon. Each species will have the same number of types.
    # 
    # Vanilla: Types are unchanged
    # Shuffle: Types are shuffled globally for all species (e.g. every Water-type pokemon becomes Fire-type)
    # Completely Random: Each species has its type(s) randomized
    # Follow Evolutions: Types are randomized per evolution line instead of per species
    vanilla: 50
    shuffle: 0
    completely_random: 0
    follow_evolutions: 0

  abilities:
    # Randomizes abilities of every species. Each species will have the same number of abilities.
    # 
    # Vanilla: Abilities are unchanged
    # Completely Random: Each species has its abilities randomized
    # Follow Evolutions: Abilities are randomized, but if a pokemon would normally retain its ability
    # when evolving, the random ability will also be retained
    vanilla: 50
    completely_random: 0
    follow_evolutions: 0

  ability_blacklist:
    # A list of abilities which no pokemon should have if abilities are randomized.
    # For example, you could exclude Wonder Guard and Arena Trap like this:
    # ["Wonder Guard", "Arena Trap"]
    []

  level_up_moves:
    # Randomizes the moves a pokemon learns when they reach a level where they would learn a move.
    # Your starter is guaranteed to have a usable damaging move.
    # 
    # Vanilla: Learnset is unchanged
    # Randomized: Moves are randomized
    # Start with Four Moves: Moves are randomized and all Pokemon know 4 moves at level 1
    vanilla: 50
    randomized: 0
    start_with_four_moves: 0

  move_match_type_bias:
    # Sets the probability that a learned move will be forced match one of the types of a pokemon.
    # 
    # If a move is not forced to match type, it will roll for Normal type bias.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  move_normal_type_bias:
    # After it has been decided that a move will not be forced to match types, sets the probability that a learned move
    # will be forced to be the Normal type.
    # 
    # If a move is not forced to be Normal, it will be completely random.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  tm_tutor_compatibility:
    # Sets the percent chance that a given TM or move tutor is compatible with a species
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1

  hm_compatibility:
    # Sets the percent chance that a given HM is compatible with a species
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1

  tm_tutor_moves:
    # Randomizes the moves taught by TMs and move tutors
    false: 50
    true: 0

  reusable_tms_tutors:
    # Sets TMs to not break after use (they remain sellable). Sets move tutors to infinite use.
    false: 50
    true: 0

  move_blacklist:
    # A list of moves which should be excluded from learnsets, TMs, and move tutors.
    []

  min_catch_rate:
    # Sets the minimum catch rate a pokemon can have. Any pokemon with a catch rate below this floor will have it raised to this value.
    # 
    # Legendaries are often in the single digits
    # Fully evolved pokemon are often double digits
    # Pidgey is 255
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 255
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  guaranteed_catch:
    # Every throw is guaranteed to catch a wild pokemon
    false: 50
    true: 0

  normalize_encounter_rates:
    # Make every slot on an encounter table approximately equally likely.
    # 
    # This does NOT mean every species is equally likely. But it will make rarer encounters less rare overall.
    false: 50
    true: 0

  exp_modifier:
    # Multiplies gained experience by a percentage
    # 
    # 100 is default
    # 50 is half
    # 200 is double
    # etc.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  blind_trainers:
    # Causes trainers to not start a battle with you unless you talk to them
    false: 50
    true: 0

  purge_spinners:
    # Trainers will rotate in predictable patterns on a set interval instead of randomly and don't turn toward you when you run
    false: 50
    true: 0

  match_trainer_levels:
    # When you start a battle with a trainer, your party's levels will be automatically set to match that trainer's highest level pokemon.
    # 
    # The experience you receive will match your party's average actual level, and will only be awarded when you win the battle.
    # 
    # This is a pseudo-replacement for a level cap and makes every trainer battle a fair fight while still allowing you to level up.
    # 
    # Off: The vanilla experience
    # Additive: The modifier you apply to your team is a flat bonus
    # Multiplicative: The modifier you apply to your team is a percent bonus
    off: 50
    additive: 0
    multiplicative: 0

  match_trainer_levels_bonus:
    # A level bonus (or penalty) to apply to your team when matching an opponent's levels.
    # 
    # When the match trainer levels option is "additive", this value is added to your team's levels during a battle.
    # For example, if this value is 5 (+5 levels), you'll have a level 25 team against a level 20 team, and a level 45 team against a level 40 team.
    # 
    # When the match trainer levels option is "multiplicative", this is a percent bonus.
    # For example, if this value is 5 (+5%), you'll have a level 21 team against a level 20 team, and a level 42 team against a level 40 team.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -100
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  double_battle_chance:
    # The percent chance that a trainer with more than 1 pokemon will be converted into a double battle.
    # If these trainers would normally approach you, they will only do so if you have 2 unfainted pokemon.
    # They can be battled by talking to them no matter what.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  better_shops:
    # Pokemarts sell every item that can be obtained in a pokemart (except mail, which is still unique to the relevant city)
    false: 50
    true: 0

  remove_roadblocks:
    # Removes specific NPCs that normally stand in your way until certain events are completed.
    # 
    # This can open up the world a bit and make your playthrough less linear, but careful how many you remove; it may make too much of your world accessible upon receiving Surf.
    # 
    # Possible values are:
    # "Route 110 Aqua Grunts"
    # "Route 112 Magma Grunts"
    # "Route 119 Aqua Grunts"
    # "Safari Zone Construction Workers"
    # "Lilycove City Wailmer"
    # "Aqua Hideout Grunts"
    # "Seafloor Cavern Aqua Grunt"
    []

  extra_boulders:
    # Places strength boulders on Route 115 which block access to Meteor Falls from the beach.
    # This aims to take some power away from Surf by restricting how much it allows you to access.
    false: 50
    true: 0

  extra_bumpy_slope:
    # Adds a bumpy slope to Route 115 which allows access to Meteor Falls if you have the Acro Bike.
    # This aims to take some power away from Surf by adding a new way to exit the Rustboro area.
    false: 50
    true: 0

  modify_118:
    # Changes the layout of Route 118 so that it must be crossed with the Acro Bike instead of Surf.
    # This aims to take some power away from Surf by restricting how much it allows you to access.
    false: 50
    true: 0

  free_fly_location:
    # Enables flying to one random location when Mom gives you the running shoes (excluding cities reachable with no items)
    false: 50
    true: 0

  hm_requirements:
    # Sets the requirements to use HMs outside of battle
    vanilla: 50
    fly_without_badge: 0

  turbo_a:
    # Holding A will advance most text automatically
    false: 50
    true: 0

  receive_item_messages:
    # Determines whether you receive an in-game notification when receiving an item. Items can still only be received in the overworld.
    # 
    # All: Every item shows a message
    # Progression: Only progression items show a message
    # None: All items are added to your bag silently (badges will still show)
    all: 50
    progression: 0
    none: 0

  remote_items:
    # Instead of placing your own items directly into the ROM, all items are received from the server, including items you find for yourself.
    # 
    # This enables co-op of a single slot and recovering more items after a lost save file (if you're so unlucky).
    # But it changes pickup behavior slightly and requires connection to the server to receive any items.
    false: 50
    true: 0

  music:
    # Shuffles music played in any situation where it loops. Includes many FRLG tracks.
    false: 50
    true: 0

  fanfares:
    # Shuffles fanfares for item pickups, healing at the pokecenter, etc.
    # 
    # When this option is enabled, pressing B will interrupt most fanfares.
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  enable_wonder_trading:
    # Allows participation in wonder trading with other players in your current multiworld. Speak with the center receptionist on the second floor of any pokecenter.
    # 
    # Wonder trading NEVER affects logic.
    # 
    # Certain aspects of a pokemon species are per-game, not per-pokemon.
    # As a result, some things are not retained during a trade, including type, ability, level up learnset, and so on.
    # Receiving a pokemon this way does not mark it as found in your pokedex.
    # Trade evolutions do not evolve this way; they retain their modified methods (level ups and item use).
    false: 0
    true: 50

  easter_egg:
    # Enter certain phrases and something special might happen.
    # 
    # All secret phrases are something that could be a trendy phrase in Dewford Town. They are case insensitive.
    EMERALD SECRET: 50


Kirby's Dream Land 3:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  game_language:
    # The language that the game should display. This does not have to match the given rom.
    japanese: 0
    english: 50

  goal:
    # Zero: collect the Heart Stars, and defeat Zero in the Hyper Zone.
    # Boss Butch: collect the Heart Stars, and then complete the boss rematches in the Boss Butch mode.
    # MG5: collect the Heart Stars, and then complete a perfect run through the minigame gauntlet within the Super MG5
    # Jumping: collect the Heart Stars, and then reach a designated score within the Jumping sub-game
    zero: 50
    boss_butch: 0
    mg5: 0
    jumping: 0

  goal_speed:
    # Normal: the goal is unlocked after purifying the five bosses
    # Fast: the goal is unlocked after acquiring the target number of Heart Stars
    normal: 0
    fast: 50

  total_heart_stars:
    # Maximum number of heart stars to include in the pool of items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 50
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  heart_stars_required:
    # Percentage of heart stars required to purify the five bosses and reach Zero.
    # Each boss will require a differing amount of heart stars to purify.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    75: 50
    random: 0
    random-low: 0
    random-high: 0

  filler_percentage:
    # Percentage of non-required Heart Stars to be converted to filler items (1-Ups, Maxim Tomatoes, Invincibility Candy).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 0
    random-range-0-50: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_percentage:
    # Percentage of filler items to be converted to trap items (Gooey Bags, Slowness, Eject Ability).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  gooey_trap_weight:
    # Chance that any given trap is a Gooey Bag (spawns Gooey when you receive it).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  slow_trap_weight:
    # Chance that any given trap is Slowness (halves your max speed for 15 seconds when you receive it).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  ability_trap_weight:
    # Chance that any given trap is an Eject Ability (ejects your ability when you receive it).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  jumping_target:
    # The required score needed to complete the Jumping minigame.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 25
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  stage_shuffle:
    # None: No stage shuffling.
    # Same World: shuffles stages around their world.
    # Pattern: shuffles stages according to the stage pattern (stage 3 will always be a minigame stage, etc.)
    # Shuffled: shuffles stages across all worlds.
    none: 0
    same_world: 0
    pattern: 0
    shuffled: 50

  boss_shuffle:
    # None: Bosses will remain in their vanilla locations
    # Shuffled: Bosses will be shuffled amongst each other
    # Full: Bosses will be randomized
    # Singularity: All (non-Zero) bosses will be replaced with a single boss
    # Supports plando placement.
    none: 50
    shuffled: 0
    full: 0
    singularity: 0

  allow_bb:
    # Allow Boss Butch variants of bosses in Boss Shuffle.
    # Enabled: any boss placed will have a 50% chance of being the Boss Butch variant, including bosses not present
    # Enforced: all bosses will be their Boss Butch variant.
    # Boss Butch boss changes are only visual.
    disabled: 50
    enabled: 0
    enforced: 0

  animal_randomization:
    # Disabled: all animal positions will be vanilla.
    # Shuffled: all animal positions will be shuffled amongst each other.
    # Full: random animals will be placed across the levels. At least one of each animal is guaranteed.
    disabled: 50
    shuffled: 0
    full: 0

  copy_ability_randomization:
    # Disabled: enemies give regular copy abilities and health.
    # Enabled: all enemies will have the copy ability received from them randomized.
    # Enabled Plus Minus: enemies (except minibosses) can additionally give you anywhere from +2 health to -1 health when eaten.
    disabled: 50
    enabled: 0
    enabled_plus_minus: 0

  strict_bosses:
    # If enabled, one will not be able to move onto the next world until the previous world's boss has been purified.
    false: 50
    true: 0

  open_world:
    # If enabled, all 6 stages will be unlocked upon entering a world for the first time. A certain amount of stages
    # will need to be completed in order to unlock the bosses
    false: 0
    true: 50

  ow_boss_requirement:
    # The amount of stages completed needed to unlock the boss of a world when Open World is turned on.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 6
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  boss_requirement_random:
    # If enabled, boss purification will require a random amount of Heart Stars. Depending on options, this may have
    # boss purification unlock in a random order.
    false: 50
    true: 0

  consumables:
    # When enabled, adds all 1-Ups and Maxim Tomatoes as possible locations.
    false: 0
    true: 50

  starsanity:
    # When enabled, every star in a given stage will become a check.
    # Will increase the possible filler pool to include 1/3/5 stars.
    false: 50
    true: 0

  gifting:
    # When enabled, the goal game item will be sent to other compatible games as a gift,
    # and you can receive gifts from other players. This can be enabled during gameplay
    # using the client.
    false: 0
    true: 50

  kirby_flavor_preset:
    # The color of Kirby, from a list of presets.
    default: 50
    bubblegum: 50
    cherry: 50
    blueberry: 50
    lemon: 50
    kiwi: 50
    grape: 50
    chocolate: 50
    marshmallow: 50
    licorice: 50
    watermelon: 50
    orange: 50
    lime: 50
    lavender: 50
    custom: 0

  kirby_flavor:
    # A custom color for Kirby. To use a custom color, set the preset to Custom and then define a dict of keys from "1" to
    # "15", with their values being an HTML hex color.
    '1': B01810
    '10': E85048
    '11': D0C0C0
    '12': B08888
    '13': E87880
    '14': F8F8F8
    '15': B03830
    '2': F0E0E8
    '3': C8A0A8
    '4': A87070
    '5': E02018
    '6': F0A0B8
    '7': D07880
    '8': A85048
    '9': E8D0D0

  gooey_flavor_preset:
    # The color of Gooey, from a list of presets.
    default: 50
    bubblegum: 50
    cherry: 50
    blueberry: 50
    lemon: 50
    kiwi: 50
    grape: 50
    chocolate: 50
    marshmallow: 50
    licorice: 50
    watermelon: 50
    orange: 50
    lime: 50
    lavender: 50
    custom: 0

  gooey_flavor:
    # A custom color for Gooey. To use a custom color, set the preset to Custom and then define a dict of keys from "1" to
    # "15", with their values being an HTML hex color.
    '1': 000808
    '2': '102838'
    '3': '183048'
    '4': '183878'
    '5': 1838A0
    '6': B01810
    '7': E85048
    '8': D0C0C0
    '9': F8F8F8

  music_shuffle:
    # None: default music will play
    # Shuffled: music will be shuffled amongst each other
    # Full: random music will play in each room
    # Note that certain songs will not be chosen in shuffled or full
    none: 0
    shuffled: 0
    full: 50

  virtual_console:
    # Adds the ability to enable 2 of the Virtual Console changes.
    # Flash Reduction: reduces the flashing during the Zero battle.
    # Color Changes: changes the color of the background within the Zero Boss Butch rematch.
    none: 0
    flash_reduction: 50
    color_changes: 0
    both: 0


Factorio:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    40: 50
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  max_science_pack:
    # Maximum level of science pack required to complete the game.
    # This also affects the relative cost of silo and satellite recipes if they are randomized.
    # That is the only thing in which the Utility Science Pack and Space Science Pack settings differ.
    automation_science_pack: 0
    logistic_science_pack: 0
    military_science_pack: 50
    chemical_science_pack: 0
    production_science_pack: 0
    utility_science_pack: 0
    space_science_pack: 0

  goal:
    # Goal required to complete the game.
    rocket: 50
    satellite: 0

  tech_tree_layout:
    # Selects how the tech tree nodes are interwoven.
    # Single: No dependencies
    # Diamonds: Several grid graphs (4/9/16 nodes each)
    # Pyramids: Several top halves of diamonds (6/10/15 nodes each)
    # Funnels: Several bottom halves of diamonds (6/10/15 nodes each)
    # Trees: Several trees
    # Choices: A single balanced binary tree
    single: 50
    small_diamonds: 0
    medium_diamonds: 0
    large_diamonds: 0
    small_pyramids: 0
    medium_pyramids: 0
    large_pyramids: 0
    small_funnels: 0
    medium_funnels: 0
    large_funnels: 0
    trees: 0
    choices: 0

  min_tech_cost:
    # The cheapest a Technology can be in Science Packs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10000
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  max_tech_cost:
    # The most expensive a Technology can be in Science Packs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10000
    150: 50
    random: 0
    random-low: 0
    random-high: 0

  tech_cost_distribution:
    # Random distribution of costs of the Science Packs.
    # Even: any number between min and max is equally likely.
    # Low: low costs, near the minimum, are more likely.
    # Middle: medium costs, near the average, are more likely.
    # High: high costs, near the maximum, are more likely.
    even: 0
    low: 50
    middle: 0
    high: 0

  tech_cost_mix:
    # Percent chance that a preceding Science Pack is also required.
    # Chance is rolled per preceding pack.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  ramping_tech_costs:
    # Forces the amount of Science Packs required to ramp up with the highest involved Pack. Average is preserved.
    # For example:
    # off: Automation (red)/Logistics (green) sciences can range from 1 to 1000 Science Packs,
    # on: Automation (red) ranges to ~500 packs and Logistics (green) from ~500 to 1000 Science Packs
    false: 50
    true: 0

  silo:
    # Ingredients to craft rocket silo or auto-place if set to spawn.
    vanilla: 0
    randomize_recipe: 0
    spawn: 50

  satellite:
    # Ingredients to craft satellite.
    vanilla: 0
    randomize_recipe: 50

  free_samples:
    # Get free items with your technologies.
    none: 0
    single_craft: 0
    half_stack: 0
    stack: 50

  tech_tree_information:
    # How much information should be displayed in the tech tree.
    # None: No indication of what a research unlocks.
    # Advancement: Indicates if a research unlocks an item that is considered logical advancement, but not who it is for.
    # Full: Labels with exact names and recipients of unlocked items; all researches are prefilled into the !hint command.
    none: 0
    advancement: 0
    full: 50

  starting_items:
    # Mapping of Factorio internal item-name to amount granted on start.
    burner-mining-drill: 6
    raw-fish: 50
    stone-furnace: 4
    transport-belt: 500
    coal: 100
    boiler: 5
    steam-engine: 10
    offshore-pump: 2
    pipe: 150



  free_sample_blacklist:
    # Set of items that should never be granted from Free Samples
    []

  free_sample_whitelist:
    # Overrides any free sample blacklist present. This may ruin the balance of the mod, be warned.
    []

  recipe_time:
    # Randomize the time it takes for any recipe to craft, this includes smelting, chemical lab, hand crafting etc.
    # Fast: 0.25X - 1X
    # Normal: 0.5X - 2X
    # Slow: 1X - 4X
    # Chaos: 0.25X - 4X
    # New category: ignores vanilla recipe time and rolls new one
    # New Fast: 0.25 - 2 seconds
    # New Normal: 0.25 - 10 seconds
    # New Slow:  5 - 10 seconds
    vanilla: 0
    fast: 0
    normal: 0
    slow: 0
    chaos: 0
    new_fast: 50
    new_normal: 0
    new_slow: 0

  recipe_ingredients:
    # Select if rocket, or rocket + science pack ingredients should be random.
    rocket: 0
    science_pack: 50

  recipe_ingredients_offset:
    # When randomizing ingredients, remove or add this many "slots" of items.
    # For example, at -1 a randomized Automation Science Pack will only require 1 ingredient, instead of 2.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 5
    -1: 50
    random: 0
    random-low: 0
    random-high: 0

  imported_blueprints:
    # Allow or Disallow Blueprints from outside the current savegame.
    false: 0
    true: 50

  world_gen:
    autoplace_controls:
      coal:
        frequency: 5
        richness: 6
        size: 6
      copper-ore:
        frequency: 5
        richness: 6
        size: 6
      crude-oil:
        frequency: 5
        richness: 6
        size: 6
      enemy-base:
        frequency: 0
        richness: 1
        size: 0
      iron-ore:
        frequency: 5
        richness: 6
        size: 6
      stone:
        frequency: 5
        richness: 6
        size: 6
      trees:
        frequency: 1
        richness: 1
        size: 1
      uranium-ore:
        frequency: 5
        richness: 6
        size: 6
    cliff_settings:
      cliff_elevation_0: 10
      cliff_elevation_interval: 40
      name: cliff
      richness: 0
    enemy_evolution:
      destroy_factor: 0.002
      enabled: true
      pollution_factor: 9.0e-07
      time_factor: 4.0e-06
    enemy_expansion:
      enabled: false
      max_expansion_cooldown: 216000
      max_expansion_distance: 7
      min_expansion_cooldown: 14400
      settler_group_max_size: 20
      settler_group_min_size: 5
    peaceful_mode: true
    pollution:
      ageing: 1
      diffusion_ratio: 0.02
      enabled: true
      enemy_attack_pollution_consumption_modifier: 1
      min_pollution_to_damage_trees: 60
      pollution_restored_per_tree_damage: 10
    property_expression_names:
      control-setting:aux:bias: 0
      control-setting:aux:frequency:multiplier: 1
      control-setting:moisture:bias: 0
      control-setting:moisture:frequency:multiplier: 1
    seed: null
    starting_area: 1
    terrain_segmentation: 0.5
    water: 1.5

  progressive:
    # Merges together Technologies like "automation-1" to "automation-3" into 3 copies of "Progressive Automation",
    # which awards them in order.
    off: 0
    grouped_random: 0
    on: 50

  teleport_traps:
    # Trap items that when received trigger a random teleport.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  grenade_traps:
    # Trap items that when received trigger a grenade explosion on each player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  cluster_grenade_traps:
    # Trap items that when received trigger a cluster grenade explosion on each player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  artillery_traps:
    # Trap items that when received trigger an artillery shell on each player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  atomic_rocket_traps:
    # Trap items that when received trigger an atomic rocket explosion on each player.
    # Warning: there is no warning. The launch is instantaneous.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  attack_traps:
    # Trap items that when received trigger an attack on your base.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  evolution_traps:
    # Trap items that when received increase the enemy evolution.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  evolution_trap_increase:
    # How much an Evolution Trap increases the enemy evolution.
    # Increases scale down proportionally to the session's current evolution factor
    # (40 increase at 0.50 will add 0.20... 40 increase at 0.75 will add 0.10...)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0

  energy_link:
    # Allow sending energy to other worlds. 25% of the energy is lost in the transfer.
    false: 0
    true: 50

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}


TUNIC:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  sword_progression:
    # Adds four sword upgrades to the item pool that will progressively grant stronger melee weapons, including two new swords with increased range and attack power.
    false: 0
    true: 50

  start_with_sword:
    # Start with a sword in the player's inventory. Does not count towards Sword Progression.
    false: 50
    true: 0

  keys_behind_bosses:
    # Places the three hexagon keys behind their respective boss fight in your world.
    false: 50
    true: 0

  ability_shuffling:
    # Locks the usage of Prayer, Holy Cross*, and the Icebolt combo until the relevant pages of the manual have been found.
    # If playing Hexagon Quest, abilities are instead randomly unlocked after obtaining 25%, 50%, and 75% of the required Hexagon goal amount.
    # *Certain Holy Cross usages are still allowed, such as the free bomb codes, the seeking spell, and other player-facing codes.
    false: 0
    true: 50

  shuffle_ladders:
    # Turns several ladders in the game into items that must be found before they can be climbed on.
    # Adds more layers of progression to the game by blocking access to many areas early on.
    # "Ladders were a mistake." —Andrew Shouldice
    false: 0
    true: 50

  entrance_rando:
    # Randomize the connections between scenes.
    # If you set this to a value besides true or false, that value will be used as a custom seed.
    # A small, very lost fox on a big adventure.
    no: 50
    yes: 0

  fixed_shop:
    # Forces the Windmill entrance to lead to a shop, and places only one other shop in the pool.
    # Has no effect if Entrance Rando is not enabled.
    false: 50
    true: 0

  logic_rules:
    # Set which logic rules to use for your world.
    # Restricted: Standard logic, no glitches.
    # No Major Glitches: Sneaky Laurels zips, ice grapples through doors, shooting the west bell, and boss quick kills are included in logic.
    # * Ice grappling through the Ziggurat door is not in logic since you will get stuck in there without Prayer.
    # Unrestricted: Logic in No Major Glitches, as well as ladder storage to get to certain places early.
    # *Torch is given to the player at the start of the game due to the high softlock potential with various tricks. Using the torch is not required in logic.
    # *Using Ladder Storage to get to individual chests is not in logic to avoid tedium.
    # *Getting knocked out of the air by enemies during Ladder Storage to reach places is not in logic, except for in Rooted Ziggurat Lower. This is so you're not punished for playing with enemy rando on.
    restricted: 50
    no_major_glitches: 0
    unrestricted: 0

  fool_traps:
    # Replaces low-to-medium value money rewards in the item pool with fool traps, which cause random negative effects to the player.
    off: 0
    normal: 50
    double: 0
    onslaught: 0

  hexagon_quest:
    # An alternate goal that shuffles Gold "Questagon" items into the item pool and allows the game to be completed after collecting the required number of them.
    false: 50
    true: 0

  hexagon_goal:
    # How many Gold Questagons are required to complete the game on Hexagon Quest.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 50
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_hexagon_percentage:
    # How many extra Gold Questagons are shuffled into the item pool, taken as a percentage of the goal amount.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  lanternless:
    # Choose whether you require the Lantern for dark areas.
    # When enabled, the Lantern is marked as Useful instead of Progression.
    false: 50
    true: 0

  maskless:
    # Choose whether you require the Scavenger's Mask for Lower Quarry.
    # When enabled, the Scavenger's Mask is marked as Useful instead of Progression.
    false: 50
    true: 0

  laurels_location:
    # Force the Hero's Laurels to be placed at a location in your world.
    # For if you want to avoid or specify early or late Laurels.
    # If you use the 10 Fairies option in Entrance Rando, Secret Gathering Place will be at its vanilla entrance.
    anywhere: 50
    6_coins: 0
    10_coins: 0
    10_fairies: 0

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}



triggers:
    
     - option_category: Ocarina of Time
       option_name: shuffle_pots
       option_result: all
       options:
         Ocarina of Time:
           shuffle_kokiri_sword: false
           local_items:
            - Rupee (1)
            - Rupees (5)
            - Rupees (20)
            - Deku Stick (1)
            - Arrows (10)
            - Deku Nuts (5)
            - Recovery Heart
            - Bombs (5)


     - option_category: The Witness
       option_name: puzzle_randomization
       option_result: sigma_expert
       options:
        The Witness:
          victory_condition: mountain_box_long
          challenge_lasers: 11
          start_inventory:
            {Puzzle Skip : 40}
          death_link: false
          shuffle_EPs: off
          shuffle_doors: none
          exclude_locations:
            []
          

     - option_category: The Witness
       option_name: length
       option_result: short
       options:
        The Witness:
          victory_condition: mountain_box_short
          mountain_lasers: random-range-5-9
          death_link: false
          shuffle_EPs: off
          puzzle_randomization: sigma_normal
          shuffle_doors: doors
          door_groupings: regional
          shuffle_vault_boxes: false

     - option_category: Hollow Knight
       option_name: length
       option_result: short
       options:
        Hollow Knight:
          RandomizeGeoRocks: false
          SplitCrystalHeart: false
          SplitMantisClaw: false
          SplitMothwingCloak: false
          Goal: any
